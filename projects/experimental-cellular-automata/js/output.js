(()=>{"use strict";var e={},t={};function n(i){var r=t[i];if(void 0!==r)return r.exports;var a=t[i]={exports:{}};return e[i](a,a.exports,n),a.exports}class i{constructor(e,t){this.width=e,this.height=t,this.data=new Uint8Array(this.width*this.height),this.rows=new Array(this.height),this.transposed=!1,this.get=this.getNormal,this.set=this.setNormal}static fromArray(e,t=!1,n=!1,r=!1){const a=e.length,o=e[0].length,s=new i(o,a);for(let t=0;t<a;t++){r&&(t=a-t-1);for(let i=0;i<o;i++)n&&(i=o-i-1),s.set(t,i,e[t][i])}return t&&s.transpose(),s}toArray(){const e=[];for(let t=0;t<this.height;t++){const n=[];for(let e=0;e<this.width;e++)n.push(this.get(t,e));e.push(n)}return e}clone(){const e=new i;for(let t in this)this.hasOwnProperty(t)&&("object"==typeof this[t]&&null!==this[t]?e[t]=JSON.parse(JSON.stringify(this[t])):e[t]=this[t]);return e}transpose(){[this.width,this.height]=[this.height,this.width],[this.get,this.set]=this.transposed?[this.getNormal,this.setNormal]:[this.getTransposed,this.setTransposed],this.transposed=!this.transposed}flipX(){for(let e=0;e<this.height;e++)for(let t=0;t<this.width/2;t++){const n=this.get(e,t);this.set(e,t,this.get(e,this.width-t-1)),this.set(e,this.width-t-1,n)}}flipY(){for(let e=0;e<this.height/2;e++)for(let t=0;t<this.width;t++){const n=this.get(e,t);this.set(e,t,this.get(this.height-e-1,t)),this.set(this.height-e-1,t,n)}}getNormal(e,t){return this.data[e*this.width+t]}setNormal(e,t,n){this.data[e*this.width+t]=n}getTransposed(e,t){return this.data[t*this.height+e]}setTransposed(e,t,n){this.data[t*this.height+e]=n}}function r(e){let t=Object.values(e).reduce(((e,t)=>e+t),0),n=Object.values(e).reduce(((e,n,i)=>[...e,n/t+(e[i-1]||0)]),[]);return function(){let t=Math.random(),i=n.findIndex((e=>t<e));return Object.keys(e)[i]}}const a=15;function o(e,t,n,i,r,a,o,s,l){const d=i.height-1,g=i.width-1,u=i.data,h=i.width;var m=r[0],c=r[1];let p;for(var f=-1;f<=1;f++)for(var S=-1;S<=1;S++){if(0==f&&0==S)continue;if(a[0]=((-1===f?1:f)+(-1===S?1:S))%2,a[o%4+1]=-1==f?1:0,a[(1+o)%4+1]=-1==S?1:0,a[(2+o)%4+1]=1==f?1:0,a[(3+o)%4+1]=1==S?1:0,a[(1+o)%2+5]=f*S==1?0:1,a[o%2+5]=f*S==-1?0:1,0==t||0==n||t==d||n==g)var[C,I]=e.findNeighbour(e,t,n,f,S);else var C=t+f,I=n+S;const i=u[C*h+I],r=i%s,R=Math.floor(i/s)%l;p=0;for(var y=0;y<s-1;y++)r==y+1&&(m[y]+=1,p+=s,m[p+y]+=a[0],p+=s,m[p+y]+=1-a[0],p+=s,m[p+y]+=a[1],p+=s,m[p+y]+=1-a[1],p+=s,m[p+y]+=a[2],p+=s,m[p+y]+=1-a[2],p+=s,m[p+y]+=a[3],p+=s,m[p+y]+=1-a[3],p+=s,m[p+y]+=a[4],p+=s,m[p+y]+=1-a[4],p+=s,m[p+y]+=a[5],p+=s,m[p+y]+=1-a[5],p+=s,m[p+y]+=a[6],p+=s,m[p+y]+=1-a[6]),p=0;for(p=0,y=0;y<l;y++)R==y&&(c[y]+=1,p+=l,c[p+y]+=a[0],p+=l,c[p+y]+=1-a[0],p+=l,c[p+y]+=a[1],p+=l,c[p+y]+=1-a[1],p+=l,c[p+y]+=a[2],p+=l,c[p+y]+=1-a[2],p+=l,c[p+y]+=a[3],p+=l,c[p+y]+=1-a[3],p+=l,c[p+y]+=a[4],p+=l,c[p+y]+=1-a[4],p+=l,c[p+y]+=a[5],p+=l,c[p+y]+=1-a[5],p+=l,c[p+y]+=a[6],p+=l,c[p+y]+=1-a[6]),p=0}return[m,c]}const s="mix",l="isotropic",d="xcross",g="vcross",u="xvcross",h="directional1",m="directional2",c="directional3",p="directional2b",f="directional",S="hexagonal1",C="hexagonal2",I={[s]:.2,[l]:.4,[d]:.05,[g]:.05,[u]:.05,[h]:.05,[m]:.05,[c]:.05,[p]:.05,[f]:.05,[S]:.05,[C]:.05};function y(e){var t=8;return[1,2].includes(e)?t=4:[3,5,7,9].includes(e)?t=3:[4,6,8,10].includes(e)?t=5:[11,13].includes(e)?t=6:[12,14].includes(e)&&(t=2),t}const R="A",b="C",B="E",v="B";class G{constructor(e,t,n,i,r,a,o,s,l,d=null){this.type=e,this.threshold=t,this.inactivation=n,this.modulo=i,this.domain=r,this.neighbourhood=a,this.generations=o,this.periodicity=d,this.nStatesPrimary=s,this.nStatesSecondary=l,this.testInactive=function(e,t){return e==b?function(e){return 0==e}:e==R?function(e){return e%t==0}:function(e){return!0}}(this.inactivation,this.modulo);var g=[this.domain];for(let e=0;e<o.length;e++)if(0==this.domain){if(o[e]>=s)continue;g.push(this.neighbourhood*s+o[e])}else{if(o[e]>=l)continue;g.push(this.neighbourhood*l+o[e])}this.testValue=function(e,t,n){return t==B?function(t){return n.slice(1).reduce(((e,i)=>e+t[n[0]][i]),0)==e}:t==v?function(t){return n.slice(1).reduce(((e,i)=>e+t[n[0]][i]),0)>e}:void 0}(this.threshold,this.type,g),this.testPeriodicity=function(e){let t;return t=null==e?function(e){return!0}:function(t){return e[t%e.length]},t}(d)}test(e,t,n){return this.testValue(e)&&this.testInactive(t)&&this.testPeriodicity(n)}name(){var e="";null!=this.periodicity&&this.periodicity.length>1&&(e=this.periodicity.map((e=>e?"1":"0")).join(""));var t=`${this.domain}|`;t+=`${this.neighbourhood}:${this.generations.join(".")}`;var n=this.inactivation;return this.inactivation==R&&(n+=this.modulo),`${this.type}${this.threshold}${n}[${t}]${e}`}static fromName(e,t,n){var i=null,r=4;e.startsWith(B)?i=B:e.startsWith(v)&&(i=v);var a=e.substring(i.length),o=parseInt(a.substring(0,1)),s=null;(a=a.substring(1)).startsWith(b)?s=b:a.startsWith(R)?(isNaN(a.charAt(1))||(r=parseInt(a.charAt(1)),a=a.substring(1)),s=R):a.startsWith("N")&&(s="N");var l=(a=a.substring(s.length)).split("[")[1].split("]")[0].split("|"),d=parseInt(l[0]),g=parseInt(l[1].split(":")[0]),u=l[1].split(":")[1].split(".").map((e=>parseInt(e))),h=null;return(a=a.split("]")[1]).length>0&&(h=a.split("").map((e=>"1"===e))),new G(i,o,s,r,d,g,u,t,n,h)}static shuffleArray(e){for(let t=e.length-1;t>0;t--){const n=Math.floor(Math.random()*(t+1));[e[t],e[n]]=[e[n],e[t]]}return e}static sampleRandomGenerations(e,t){const n=e[t]-1;let i=[];for(let e=0;e<n;e++)Math.random()<1/n&&i.push(e);return 0==i.length?i.push(Math.floor(Math.random()*n)):i.length>6&&(i=this.shuffleArray(i).slice(0,6)),i.sort(((e,t)=>e-t)),i}static randomSample(e,t,n=null,i=s,a=null){var o=[e,t];const I=[B,v],w=I[Math.floor(Math.random()*I.length)],W=[b,R,"N"],k=W[Math.floor(Math.random()*W.length)];null===n&&(n={0:2/3,1:1/3});var M=r(n);const P=parseInt(M()),A=function(e,t){var n,i=t;if(i==s){var r=Math.random();i=r<.5?l:r<.7?d:r<.9?g:f}return i==l?Math.floor(Math.random()*e):i==g?Math.floor(Math.random()*e+e):i==d?Math.floor(Math.random()*e+2*e):i==u?Math.floor(2*Math.random()*e+e):i==h?Math.floor(2*Math.random()*e+3*e):i==m?Math.floor(4*Math.random()*e+3*e):i==c?Math.floor(6*Math.random()*e+3*e):i==p?((n=Math.floor(4*Math.random()*e+3*e))>=5*e&&(n+=2*e),n):i==f?Math.floor(8*Math.random()*e+3*e):i==S?((n=Math.floor(2*Math.random()*e+11*e))>=12*e&&(n+=e),n):i==C?((n=Math.floor(2*Math.random()*e+12*e))>=13*e&&(n+=e),n):void 0}(o[P],i),x=Math.floor(A/o[P]),N=this.sampleRandomGenerations(o,P);var T,O=0,F=y(x);if(O=w===v?Math.floor(Math.random()*F):Math.floor(Math.random()*F)+1,T=Math.random()<.5&&k==R?Math.floor(5*Math.random())+2:0==P?e:t,Math.random()<.2)D=null;else{var D;null==a&&(a=Math.floor(20*Math.random())+2);do{D=new Array(a).fill(0).map((()=>Math.random()<.5))}while(!D.includes(!0))}return new G(w,O,k,T,P,x,N,e,t,D)}}function w(e){return e.replace(/\[([0-9]+)\]|\{([0-9A-Za-z|]+)\}/g,((e,t,n)=>{if(t){let e="";for(const n of t)Math.random()>.5&&(e+=n);return e}if(n){const e=n.split("|");return e[Math.floor(Math.random()*e.length)]}}))}const W=5e3;var k=new Date(0);function M(e,t){const n=new Date,i=`[${n.toLocaleTimeString()}] ${t}`;if(e.logEvents.length>0){const i=e.logEvents[e.logEvents.length-1];if(t==i.substring(i.indexOf("] ")+2)&&n-k<W)return}e.logEvents.push(i),e.logEvents.length>50&&(e.logEvents=e.logEvents.slice(-50)),k=n,console.log(i)}class P{constructor(){this.nStates=void 0}updateRule(e,t,n,i){throw new Error("Must override method")}getName(){throw new Error("Must override method")}}class A extends P{constructor(e){super(),this.seedingPatterns=this.getSeedingPatterns(),this.constructSeedingSampler(e,!0),this.randomnessLogShift=0}getSeedingPatterns(){throw new Error("Must override method")}constructSeedingSampler(e,t=!0,n=!0,i=!1){t&&null!=e.config.ruleConfig.randomnessConfig?e.config.randomnessConfig=JSON.parse(JSON.stringify(e.config.ruleConfig.randomnessConfig)):t&&(e.config.randomnessConfig=JSON.parse(JSON.stringify(e.randomnessConfigs.Generations))),n||null==e.config.randomnessConfig.sampledSeedingPreset?(e.config.randomnessConfig.sampledSeedingPreset=r(e.config.randomnessConfig.seedingWeightsWeights)(),M(e,"Rand | Sampled seeding weights "+e.config.randomnessConfig.sampledSeedingPreset+"."),e.config.randomnessConfig.sampledSeedingWeights=e.config.randomnessConfig.seedingWeights[e.config.randomnessConfig.sampledSeedingPreset]):i&&null!=e.config.randomnessConfig.sampledSeedingPreset&&null!=e.config.randomnessConfig.seedingWeights[e.config.randomnessConfig.sampledSeedingPreset]&&(e.config.randomnessConfig.sampledSeedingWeights=e.config.randomnessConfig.seedingWeights[e.config.randomnessConfig.sampledSeedingPreset],M(e,"Rand | Changed seeding weights "+e.config.randomnessConfig.sampledSeedingPreset+".")),e.seedSampler=r({...e.config.randomnessConfig.sampledSeedingWeights,...e.config.randomnessConfig.randomSeedingWeights})}}class x extends A{constructor(e,t,n){super(e),null!=t||n||(t=x.generateRule()),n||this.initialiseRule(e,t)}updateRule(e,t,n,i){var r=e%this.nStates;return 1==r&&this.survive.includes(this.neighbourhood[1].reduce(((e,t)=>e+n[0][t]),0))?t=1:r>0&&r<this.nStates-1?t+=1:r==this.nStates-1?t=0:0==r&&this.birth.includes(this.neighbourhood[0].reduce(((e,t)=>e+n[0][t]),0))?t=1:0==r&&this.inhibited.includes(this.neighbourhood[2].reduce(((e,t)=>e+n[0][t]),0))&&(t=this.nStates-1),t}static getSingleNeighbourhoodGeneration(e,t){let n=(Math.floor(e[0]/t)%a).toString()+":";for(var i of e)n+=(i%t).toString()+".";return n.substring(0,n.length-1)}static getRuleString(e,t,n,i,r){let a=e.map((e=>this.getSingleNeighbourhoodGeneration(e,r))),o=`B${t.join("")}`;return"0:0"!=a[0]&&(o+=`|${a[0]}`),o+=`/S${n.join("")}`,"0:0"!=a[1]&&(o+=`|${a[1]}`),o+=`/I${i.join("")}`,"0:0"!=a[2]&&(o+=`|${a[2]}`),o+=`/G${r}`,o}getNeighbourhoodFromString(e,t,n){let i,r;if(null==e||""==e)this.neighbourhood[t]=[0],i=0;else{let n=[],o=e.split(":");if(i=o[0],r=o[1],r)for(var a of r.split("."))n.push(parseInt(i)*this.nStates+parseInt(a));else n.push(parseInt(i)*this.nStates);this.neighbourhood[t]=n}return n[t]=y(i),n}initialiseRule(e,t,n=null){this.ruleString=w(t);const i=this.ruleString.split("/");this.neighbourhood=[0,0,0],this.inhibited=[],this.nStates=Number(i[i.length-1].substring(1));var r=[8,8,8];for(var a of i)if("B"==a[0]){let e=0,[t,n]=a.substring(1).split("|");this.birth=new Uint8Array(t.split("").map(Number)),r=this.getNeighbourhoodFromString(n,e,r),this.birth=new Uint8Array(Array.from(this.birth).filter((t=>t<=r[e])))}else if("S"==a[0]){let e=1,[t,n]=a.substring(1).split("|");this.survive=new Uint8Array(t.split("").map(Number)),r=this.getNeighbourhoodFromString(n,e,r),this.survive=new Uint8Array(Array.from(this.survive).filter((t=>t<=r[e])))}else if("I"==a[0]){let e=2,[t,n]=a.substring(1).split("|");this.inhibited=new Uint8Array(t.split("").map(Number)),r=this.getNeighbourhoodFromString(n,e,r),this.inhibited=new Uint8Array(Array.from(this.inhibited).filter((t=>t<=r[e])))}this.ruleString=x.getRuleString(this.neighbourhood,this.birth,this.survive,this.inhibited,this.nStates),null==n&&(n=t),M(e,"Rul | Sampled rulestring "+this.ruleString+" from the rule template "+n+".")}static generateRule(e){let t=Math.floor(10*Math.random())+3,n=[8,8,8];null==e&&(e=[Math.floor(Math.random()*a*t),Math.floor(Math.random()*a*t),Math.floor(Math.random()*a*t)]);let i=[Math.floor(e[0]/t)%a,Math.floor(e[1]/t)%a,Math.floor(e[2]/t)%a];for(let e=0;e<3;e++)n[e]=y(i[e]);let r=this.generateRandomArray(1,n[0]);0==r.length&&(r=[2]);let o=this.generateRandomArray(1,n[1]),s=this.generateRandomArray(1,n[2]);return s=s.filter((e=>!r.includes(e)&&!o.includes(e)&&2!=e)),this.getRuleString(e,r,o,s,t)}static generateRandomArray(e,t){let n=[];for(let i=e;i<=t;i++)Math.random()<.5&&n.push(i);return n}getName(){return this.ruleString}getSeedingPatterns(){return{random:{prob:1,mask:null}}}setRuleElement(e,t,n){if("B"==e)if("neighbours"==t)this.birth=n.split("").map(Number);else{let e=Math.floor(this.neighbourhood[0]/nStates)%a,i=this.neighbourhood[0]%nStates;"neighbourhood"==t?this.neighbourhood[0]=n*nStates+i:"state"==t&&(this.neighbourhood[0]=e*nStates+n)}else if("S"==e)if("neighbours"==t)this.survive=n.split("").map(Number);else{let e=Math.floor(this.neighbourhood[1]/nStates)%a,i=this.neighbourhood[1]%nStates;"neighbourhood"==t?this.neighbourhood[1]=n*nStates+i:"state"==t&&(this.neighbourhood[1]=e*nStates+n)}else if("I"==e)if("neighbours"==t)this.inhibited=n.split("").map(Number);else{let e=Math.floor(this.neighbourhood[2]/nStates)%a,i=this.neighbourhood[2]%nStates;"neighbourhood"==t?this.neighbourhood[2]=n*nStates+i:"state"==t&&(this.neighbourhood[2]=e*nStates+n)}}}class N extends x{constructor(e,t,n=null){super(e,null,!0),this.initialiseRule(e,t),e.birth3=this.birth[0]**3,e.ruleRegularisationSeed=this.ruleRegularisationSeed}updateRule(e,t,n,i,r){var a=e%this.nStates;return 1==a&&this.survive.includes(this.neighbourhood[1].reduce(((e,t)=>e+n[0][t]),0))&&Math.random()>r/4-.05?t=1:a>0&&a<this.nStates-1?t+=1:a==this.nStates-1?t=0:0==a&&this.birth.includes(this.neighbourhood[0].reduce(((e,t)=>e+n[0][t]),0))&&Math.random()>r-.05?t=1:0==a&&this.inhibited.includes(this.neighbourhood[2].reduce(((e,t)=>e+n[0][t]),0))&&(t=this.nStates-1),t}getName(){return`${this.ruleString}/R${this.ruleRegularisationSeed.toFixed(0)}`}initialiseRule(e,t){if(t.includes("R")){var n=t;t=w(t),this.ruleRegularisationSeed=parseFloat(t.split("R")[1]);const i=t.split("/").slice(0,-1).join("/");super.initialiseRule(e,i,n)}else super.initialiseRule(e,t),this.ruleRegularisationSeed=0}}class T extends P{constructor(e,t,n,i,r=4,a=!0){super(),this.conditions=e,this.nStates=this.conditions.length+1,this.nStatesPrimary=r,this.conditionLevels=t,this.neighbourhoodGeometryType=n,this.periodicityLength=i,this.logStyleChange=a}updateRule(e,t,n,i){t=0;for(let r=0;r<this.conditions.length;r++)if(this.conditions[r].test(n,e,i)){t=r+1;break}return t}getName(){return this.conditions.map((e=>e.name())).join("||")}static sampleRule(e,t,n,i=!0){var a=t.nConditions,o=t.chosenConditionLevels,s=t.neighbourhoodGeometryType,l=t.periodicityLength,d=[];null==a&&(a=Math.floor(8*Math.random())+2),null==s&&(s=r(I)()),null==l&&(l=this.samplePeriodicityLength());var g=a+1;for(let e=0;e<a;e++)d.push(G.randomSample(n,g,o,s,l));var u=new T(d,o,s,l,n,i);return i&&M(e,"Sty | Sampled style "+u.getName()+"."),u}static samplePeriodicityLength(){var e=Math.random();return e<.2?null:e<.6?1:e<.7?2:e<.8?3:e<.9?4:Math.floor(20*Math.random())+5}static ruleFromNames(e,t){var n=(e=w(e)).split("||"),i=n.map((e=>G.fromName(e,t,n.length+1)));return new T(i,null,s,null)}evolveRule(e,t=null){var n,i=this.conditions.length;null==t&&(t=this.conditionLevels),n=2==i?Math.floor(2*Math.random())+1:10==i?Math.floor(2*Math.random()):Math.floor(3*Math.random());var r=e.config.styleConfig.nDeterministicConditions??0;0==n?this.removeCondition(e,r):1==n?this.changeCondition(e,t,r):this.addCondition(e)}addCondition(e){var t=this.conditions.slice(),n=G.randomSample(this.nStatesPrimary,this.nStates,this.conditionLevels,this.neighbourhoodGeometryType,this.periodicityLength);this.logStyleChange&&M(e,"Sty | Adding condition "+n.name()+" to the current style "+this.getName()+". New style: "+this.getName()+".");t.push(n),this.conditions=t}removeCondition(e,t,n=!1){var i=this.conditions.slice(),r=i.length-1;n||(r=Math.floor(Math.random()*(i.length-t))+t);var a=(r+1).toString();this.logStyleChange&&M(e,"Sty | Removing condition "+a+" from the current style "+this.getName()+". New style: "+this.getName()+".");i.splice(r,1)[0],this.conditions=i}changeCondition(e,t,n){var i=this.conditions.slice(),r=Math.floor(Math.random()*(i.length-n))+n,a=(r+1).toString();this.logStyleChange&&M(e,"Sty | Replacing condition "+a+" from the current style "+this.getName()+". New style: "+this.getName()+".");i[r]=G.randomSample(this.nStatesPrimary,this.nStates,t,this.neighbourhoodGeometryType,this.periodicityLength),this.conditions=i}}const O={"Beating Beacons":{Beacon:[[1,1],[1,1]],"Cruiser I":[[0,0,0,0,1,1,0,0,0,0],[0,0,0,1,2,2,1,0,0,0],[0,0,1,2,0,0,2,1,0,0],[0,0,2,0,0,0,0,2,0,0],[0,1,0,0,0,0,0,0,1,0],[0,2,0,0,0,0,0,0,2,0],[1,0,0,0,0,0,0,0,0,1],[2,0,0,0,0,0,0,0,0,2]],"Cruiser II":[[0,0,0,0,1,1,0,0,0,0],[0,0,0,0,2,2,0,0,0,0],[0,0,0,1,0,0,1,0,0,0],[0,0,0,2,0,0,2,0,0,0],[0,0,1,0,0,0,0,1,0,0],[0,1,2,0,0,0,0,2,1,0],[1,2,0,0,0,0,0,0,2,1],[2,0,0,0,0,0,0,0,0,2]],"Cruiser III":[[0,0,0,0,1,1,0,0,0,0],[0,0,0,1,2,2,1,0,0,0],[0,0,1,2,0,0,2,1,0,0],[0,1,2,0,0,0,0,2,1,0],[1,2,0,0,0,0,0,0,2,1],[2,0,0,0,0,0,0,0,0,2]],"Cruiser IV":[[0,0,0,0,1,1,0,0,0,0],[0,0,0,0,2,2,0,0,0,0],[0,0,0,1,0,0,1,0,0,0],[0,0,0,2,0,0,2,0,0,0],[0,0,1,0,0,0,0,1,0,0],[0,0,2,0,0,0,0,2,0,0],[0,1,0,0,0,0,0,0,1,0],[0,2,0,0,0,0,0,0,2,0],[1,0,0,0,0,0,0,0,0,1],[2,0,0,0,0,0,0,0,0,2]],"Diamond Wave":[[1,1]],"Double Wave":[[0,0,0,2,0],[0,1,1,2,2],[0,1,1,1,0],[2,2,1,1,0],[0,2,0,0,0]],"Gunning Ship":[[0,0,0,0,1,1,0,0,0,0],[0,0,0,1,1,1,1,0,0,0],[0,0,0,0,1,1,0,0,0,0],[0,0,1,1,3,3,1,1,0,0],[0,0,1,1,3,3,1,1,0,0],[0,1,1,1,5,5,1,1,1,0],[0,2,2,1,5,5,1,2,2,0],[1,1,2,1,7,7,1,2,1,1],[2,4,4,2,7,7,2,4,4,2],[0,0,4,0,0,0,0,4,0,0]],"Glitching Ship":[[0,0,0,1,1,0,0,0],[0,0,1,1,1,1,0,0],[0,0,1,2,2,1,0,0],[0,1,1,2,2,1,1,0],[0,0,1,4,4,1,0,0],[1,1,1,4,4,1,1,1],[0,1,1,6,6,1,1,0],[0,0,1,6,6,1,0,0],[0,0,0,8,8,0,0,0],[0,0,0,8,8,0,0,0]],Ship:[[1,1],[2,2]],Shuttle:[[0,1,1,0],[1,1,1,1],[2,2,2,2]],"Triangular Wave":[[0,1,1,0],[0,1,1,0],[1,1,1,1],[2,2,2,2]],"Wing v1":[[1,1,0],[2,2,1],[0,0,2]],"Wing v2":[[1,1,0,0],[2,2,1,0],[0,0,2,1],[0,0,0,2]],"Wing v3":[[1,1,0,0,0],[2,2,1,0,0],[0,0,2,1,0],[0,0,0,2,1],[0,0,0,0,2]]},"Brian's Brain":{Butterfly:[[0,0,1,2],[0,2,0,0],[1,2,1,0]],"Butterfly Bomber":[[0,2,1,0,0,0,0,0],[0,0,2,1,0,0,0,0],[2,0,0,2,1,0,0,0],[1,2,0,0,2,1,0,0],[0,1,0,2,1,0,2,1],[0,0,2,1,0,0,2,1]],"Diamond Wave":[[1,1]],"Oscillator I":[[0,0,1,0],[1,2,2,0],[0,2,2,1],[0,1,0,0]],"Oscillator II":[[0,0,2,0,0,0,0],[0,1,1,0,0,1,0],[0,0,2,1,2,1,2],[0,0,1,0,1,0,0],[2,1,2,1,2,0,0],[0,1,0,0,1,1,0],[0,0,0,0,2,0,0]],"Short-lived Star":[[1,0],[0,1]],Snake:[[0,1,2,1,2,1,0],[1,2,0,1,0,2,1],[1,2,0,1,0,2,1],[0,1,2,1,2,1,0]],Spaceship:[[1,1],[2,2]],"Square Wave":[[1,1],[1,1]],Star:[[1,0,1],[0,0,0],[1,0,1]]},"Crummy Cruisers":{Cruiser:[[1,1],[1,1],[1,1],[2,2]],Quartet:[[1,1],[1,1]],Ship:[[1,1],[2,2]],"Wide Quartet":[[1,1,0,0,1,1],[1,1,0,0,1,1],[0,0,1,1,0,0],[0,0,1,1,0,0],[1,1,0,0,1,1],[1,1,0,0,1,1]],"Quartet XXL":[[1,1,0,0,1,1,0,0,1,1],[1,1,0,0,1,1,0,0,1,1],[0,0,1,1,2,2,1,1,0,0],[0,0,1,1,0,0,1,1,0,0],[1,1,2,0,0,0,0,2,1,1],[1,1,2,0,0,0,0,2,1,1],[0,0,1,1,0,0,1,1,0,0],[0,0,1,1,2,2,1,1,0,0],[1,1,0,0,1,1,0,0,1,1],[1,1,0,0,1,1,0,0,1,1]],"Double Ship":[[1,1]],"Twisted Quartet":[[0,0,1,1],[0,0,1,1],[1,1,0,0],[1,1,0,0]],"Burning Cruiser":[[2,1,1,2],[2,1,1,2],[2,2,2,2]],"Burning Ship":[[0,1,1],[0,1,1],[1,1,1]],"Double Cruiser II":[[1,1,0,0,1,1],[1,1,0,0,1,1],[2,2,1,1,2,2],[0,0,1,1,0,0],[0,0,2,2,0,0]],"Double Cruiser I":[[1,1,0,0,1,1],[1,1,0,0,1,1],[1,1,1,1,1,1],[2,2,1,1,2,2],[0,0,2,2,0,0]],"Triple Trouble":[[1,1,0,0,1,1,0,0,1,1],[1,1,0,0,1,1,0,0,1,1],[2,2,1,1,2,2,1,1,2,2],[0,0,1,1,0,0,1,1,0,0],[0,0,2,2,0,0,2,2,0,0]],"Triple Trouble II":[[1,1,0,0,1,1,0,0,1,1],[1,1,0,0,1,1,0,0,1,1],[1,1,0,0,1,1,0,0,1,1],[2,2,1,1,2,2,1,1,2,2],[0,0,1,1,0,0,1,1,0,0],[0,0,2,2,0,0,2,2,0,0]],"Triple ship":[[1,1,0,0,1,1,0,0,1,1],[2,2,0,0,2,2,0,0,2,2],[0,0,1,1,0,0,1,1,0,0],[0,0,2,2,0,0,2,2,0,0]],"Triple Trouble III":[[1,1,0,0,1,1,0,0,1,1],[2,2,1,1,2,2,1,1,2,2],[0,0,1,1,0,0,1,1,0,0],[0,0,2,2,0,0,2,2,0,0]],"Burning Cruiser II":[[0,0,0,1,1,0,0,0],[0,0,0,1,1,0,0,0],[2,1,1,2,2,1,1,2],[2,1,1,0,0,1,1,2],[2,2,2,0,0,2,2,2]]},"Extravagant Extenders":{"Binary Star":[[0,1,0,0],[1,1,1,0],[0,1,1,1],[0,0,1,0]],Extender:[[0,1,1,0],[1,1,1,1],[2,1,1,2],[0,2,2,0]],"Extender Gun":[[0,1,1,0],[0,1,2,1],[0,1,1,2],[0,1,5,4],[0,1,1,5],[0,1,8,7],[2,3,4,8],[4,5,0,0],[6,7,9,0],[9,2,0,0]],"Quadruple Extender I":[[1,1],[1,1]],"Quadruple Extender II":[[0,1,1,0],[1,1,1,1],[1,1,1,1],[0,1,1,0]],"Quadruple Scout":[[1,0,0,0,0,1],[0,1,1,1,1,0],[0,1,1,1,1,0],[0,1,1,1,1,0],[0,1,1,1,1,0],[1,0,0,0,0,1]],Scout:[[1,1],[2,2]],"Star I":[[0,1,0],[1,1,1],[0,1,0]],"Star II":[[0,6,6,6,0,0],[0,1,2,5,0,0],[6,6,1,1,1,0],[6,2,1,1,6,6],[6,4,5,3,2,6],[0,0,0,0,0,6]]},"Fancy Fans":{"Asymmetric Wing v7":[[1,2,0,0,0,0],[1,2,0,0,0,0],[0,1,2,2,0,0],[0,0,1,1,2,2],[0,0,0,0,1,1]],"Asymmetric Wing v8":[[2,2,0,0,0,0,0,0],[1,1,2,2,0,0,0,0],[0,0,1,1,2,2,0,0],[0,0,0,0,1,1,2,2],[0,0,0,0,0,0,1,1]],"Asymmetric Wing v6":[[2,2,0,0,0,0],[1,1,2,2,0,0],[0,0,1,1,2,2],[0,0,0,0,1,1]],"Asymmetric Wing v10":[[2,2,0,0,0,0,0,0,0,0],[1,1,2,2,0,0,0,0,0,0],[0,0,1,1,2,2,0,0,0,0],[0,0,0,0,1,1,2,2,0,0],[0,0,0,0,0,0,1,1,2,2],[0,0,0,0,0,0,0,0,1,1]],"Double Walker":[[1],[1],[1]],"Inverted Wing v12":[[1,2,2,0,0,0,0,0,0,0],[0,1,1,2,2,0,0,0,0,0],[0,0,0,1,1,2,0,0,0,0],[0,0,0,0,0,1,2,0,0,0],[0,0,0,0,0,0,1,2,0,0],[0,0,0,0,0,0,0,1,2,0],[0,0,0,0,0,0,0,1,2,0],[0,0,0,0,0,0,0,0,1,2],[0,0,0,0,0,0,0,0,1,2],[0,0,0,0,0,0,0,0,0,1]],Quartet:[[1,1,1,1],[1,0,0,1],[1,0,0,1],[1,1,1,1]],Quintet:[[1,1,0,0,0,0,0],[1,0,1,0,0,0,0],[0,1,1,1,0,0,1],[0,0,0,1,1,1,1],[0,0,0,0,0,1,1]],"Ship v4":[[1,2,0,0],[0,1,2,0],[0,0,1,2],[0,0,0,1]],"Ship v5":[[1,2,0,0,0],[0,1,2,0,0],[0,0,1,2,0],[0,0,0,1,2],[0,0,0,0,1]],"Ship v6":[[1,2,0,0,0,0],[0,1,2,0,0,0],[0,0,1,2,0,0],[0,0,0,1,2,0],[0,0,0,0,1,2],[0,0,0,0,0,1]],"Ship v7":[[1,2,0,0,0,0,0],[0,1,2,0,0,0,0],[0,0,1,2,0,0,0],[0,0,0,1,2,0,0],[0,0,0,0,1,2,0],[0,0,0,0,0,1,2],[0,0,0,0,0,0,1]],"Ship v8":[[1,2,0,0,0,0,0,0],[0,1,2,0,0,0,0,0],[0,0,1,2,0,0,0,0],[0,0,0,1,2,0,0,0],[0,0,0,0,1,2,0,0],[0,0,0,0,0,1,2,0],[0,0,0,0,0,0,1,2],[0,0,0,0,0,0,0,1]],"Ship v9":[[1,2,0,0,0,0,0,0,0],[0,1,2,0,0,0,0,0,0],[0,0,1,2,0,0,0,0,0],[0,0,0,1,2,0,0,0,0],[0,0,0,0,1,2,0,0,0],[0,0,0,0,0,1,2,0,0],[0,0,0,0,0,0,1,2,0],[0,0,0,0,0,0,0,1,2],[0,0,0,0,0,0,0,0,1]],"Ship v10":[[1,2,0,0,0,0,0,0,0,0],[0,1,2,0,0,0,0,0,0,0],[0,0,1,2,0,0,0,0,0,0],[0,0,0,1,2,0,0,0,0,0],[0,0,0,0,1,2,0,0,0,0],[0,0,0,0,0,1,2,0,0,0],[0,0,0,0,0,0,1,2,0,0],[0,0,0,0,0,0,0,1,2,0],[0,0,0,0,0,0,0,0,1,2],[0,0,0,0,0,0,0,0,0,1]],"Trio II":[[1,2,0,0,0],[1,2,0,0,0],[1,2,0,0,0],[0,1,2,2,2],[0,0,1,1,1]],Walker:[[0,1,3,0],[1,2,4,7],[0,5,6,8]],Wave:[[1,1,1],[1,0,1],[1,1,1]],"Wing v8":[[1,2,0,0,0,0],[1,2,0,0,0,0],[0,1,2,0,0,0],[0,1,2,2,0,0],[0,0,1,1,2,2],[0,0,0,0,1,1]],"Wing v9":[[1,2,0,0,0,0,0],[1,2,0,0,0,0,0],[0,1,2,0,0,0,0],[0,1,2,0,0,0,0],[0,0,1,2,2,0,0],[0,0,0,1,1,2,2],[0,0,0,0,0,1,1]],"Wing v10":[[1,2,0,0,0,0,0,0,0],[0,1,2,0,0,0,0,0,0],[0,0,1,2,0,0,0,0,0],[0,0,0,1,2,0,0,0,0],[0,0,0,1,2,2,0,0,0],[0,0,0,0,1,1,2,0,0],[0,0,0,0,0,0,1,2,0],[0,0,0,0,0,0,0,1,2],[0,0,0,0,0,0,0,0,1]],"Wing v11":[[1,2,0,0,0,0,0,0,0,0],[1,2,0,0,0,0,0,0,0,0],[0,1,2,0,0,0,0,0,0,0],[0,0,1,2,0,0,0,0,0,0],[0,0,0,1,2,0,0,0,0,0],[0,0,0,0,1,2,0,0,0,0],[0,0,0,0,0,1,2,0,0,0],[0,0,0,0,0,0,1,2,0,0],[0,0,0,0,0,0,0,1,2,2],[0,0,0,0,0,0,0,0,1,1]],"Wing v12":[[1,2,0,0,0,0,0,0,0,0],[1,2,0,0,0,0,0,0,0,0],[0,1,2,0,0,0,0,0,0,0],[0,1,2,0,0,0,0,0,0,0],[0,0,1,2,0,0,0,0,0,0],[0,0,0,1,2,0,0,0,0,0],[0,0,0,0,1,2,0,0,0,0],[0,0,0,0,0,1,2,2,0,0],[0,0,0,0,0,0,1,1,2,2],[0,0,0,0,0,0,0,0,1,1]],"Wing v12b":[[1,2,0,0,0,0,0,0,0,0],[1,2,0,0,0,0,0,0,0,0],[0,1,2,0,0,0,0,0,0,0],[0,0,1,2,0,0,0,0,0,0],[0,0,0,1,2,0,0,0,0,0],[0,0,0,1,2,2,0,0,0,0],[0,0,0,0,1,1,2,0,0,0],[0,0,0,0,0,0,1,2,0,0],[0,0,0,0,0,0,0,1,2,2],[0,0,0,0,0,0,0,0,1,1]],"Wing v13":[[1,2,0,0,0,0,0,0,0,0],[1,2,0,0,0,0,0,0,0,0],[0,1,2,0,0,0,0,0,0,0],[0,1,2,0,0,0,0,0,0,0],[0,0,1,2,0,0,0,0,0,0],[0,0,1,2,0,0,0,0,0,0],[0,0,0,1,2,2,0,0,0,0],[0,0,0,0,1,1,2,2,0,0],[0,0,0,0,0,0,1,1,2,2],[0,0,0,0,0,0,0,0,1,1]]},"Flaming Flaneries":{Dancer:[[0,3,1,1,3,0],[0,0,1,1,0,0],[3,0,1,1,1,0],[0,2,3,3,0,3],[0,3,1,2,2,3],[3,2,0,0,0,3],[3,0,0,3,0,0]],"Diamond Wave":[[1,1]],Dragger:[[0,3,1,1,3,0,0],[0,0,1,1,0,0,0],[0,1,1,1,1,0,0],[3,0,3,3,1,0,0],[3,2,2,2,1,3,0],[3,0,0,0,2,3,0],[0,0,0,1,3,3,3],[0,0,3,2,0,2,3],[0,0,0,0,1,3,3]],Fly:[[0,0,0,3,1,1,3,0],[0,0,0,0,1,1,0,0],[0,0,0,1,2,2,0,0],[0,0,1,1,2,1,0,0],[0,0,0,1,0,0,1,0],[0,3,0,1,3,0,2,2],[3,0,2,3,2,1,3,1],[3,2,3,0,3,3,0,0],[0,3,3,0,3,3,3,3],[0,3,0,0,3,0,2,0]],Jumper:[[0,0,3,1,1,3,0,0],[0,0,0,1,1,0,0,0],[0,0,1,1,1,1,0,0],[0,0,1,3,3,1,0,0],[0,3,1,2,2,1,3,0],[3,0,1,1,1,1,0,3],[3,2,2,1,1,2,2,3],[1,3,3,1,1,3,3,1],[3,2,2,2,2,2,2,3],[3,0,0,0,0,0,0,3]],"Kite Wave":[[0,1],[1,1],[1,1]],"Ship Layer":[[0,3,1,1,3,0],[0,0,1,1,0,0],[3,0,1,1,0,3],[0,2,3,3,2,0],[0,3,1,1,3,0],[3,2,0,0,2,3],[3,0,0,0,0,3]],"Ship Layer II":[[3,1,1,3,0,0,3,1,1,3],[0,1,1,0,0,0,0,1,1,0],[1,1,1,0,3,3,0,1,1,1],[0,3,3,1,0,0,1,3,3,0],[2,2,3,1,1,1,1,3,2,2],[0,1,1,1,0,0,1,1,1,0],[3,3,0,2,1,1,2,0,3,3],[0,2,3,1,0,0,1,3,2,0]],"Ship I":[[1,1],[2,2]],"Ship II":[[0,3,1,1,3],[0,0,2,2,0],[3,1,3,3,3],[0,2,0,0,0],[3,3,3,0,0]],"Ship III":[[0,3,1,1,3,0],[0,0,2,2,0,0],[3,1,3,3,1,3],[0,2,0,0,2,0],[3,3,3,3,3,3]],"Ship IV":[[0,3,1,1,3,0],[0,0,2,2,0,0],[0,3,3,3,1,3],[0,0,0,0,2,0],[0,0,3,1,3,3],[0,0,0,2,0,0],[0,3,1,3,3,0],[0,0,2,0,0,0],[3,1,3,3,0,0],[0,2,0,0,0,0]],"Ship V":[[0,0,0,3,1,1,3,0,0,0],[0,0,0,0,2,2,0,0,0,0],[0,0,3,1,3,3,1,3,0,0],[0,0,0,2,0,0,2,0,0,0],[0,3,1,3,3,3,3,1,3,0],[0,0,2,0,0,0,0,2,0,0],[3,1,3,3,0,0,3,3,1,3],[0,2,0,0,0,0,0,0,2,0],[3,3,3,0,0,0,0,3,3,3]],"Ship VI":[[3,1,1,3,0],[0,2,2,0,0],[3,3,3,1,3],[0,0,0,2,0],[0,3,1,3,3],[0,0,2,0,0],[0,3,3,1,3],[0,0,0,2,0],[0,3,1,3,3],[0,0,2,0,0]],"Ship VII":[[3,1,1,3,0,0,3,1,1,3],[0,2,2,0,0,0,0,2,2,0],[3,3,3,1,3,3,1,3,3,3],[0,0,0,2,0,0,2,0,0,0],[0,3,1,3,3,3,3,1,3,0],[0,0,2,0,0,0,0,2,0,0],[0,3,3,3,0,0,3,3,3,0]],Snake:[[3,1,3,3,1,3],[0,2,0,0,2,0],[3,1,3,3,1,3]],"Square Wave":[[1,1],[1,1]],Star:[[0,1,0],[1,1,1],[0,1,0]],Stretchers:[[1,1],[1,0]],"Thruster I":[[3,1,1,3,0,0,0],[0,2,2,0,0,0,0],[3,3,3,1,3,0,0],[0,0,0,2,0,0,0],[0,3,1,3,1,3,0],[0,0,2,0,2,0,0],[3,1,3,0,3,1,3],[0,2,0,2,0,2,0],[3,3,1,3,1,3,3]],"Thruster II":[[3,1,1,3,0,0],[0,2,2,0,0,0],[3,3,3,1,3,0],[0,0,0,2,0,0],[0,3,1,3,1,3],[0,0,2,0,2,0],[0,3,1,0,3,3]],"Thruster III":[[3,1,1,3,0,0,0,0],[0,2,2,0,0,0,0,0],[3,3,3,1,3,0,0,0],[0,0,0,2,0,0,0,0],[0,3,1,3,1,3,0,0],[0,0,2,0,2,0,0,0],[0,3,3,1,3,1,3,0],[0,0,0,0,0,2,0,0],[0,0,3,3,1,3,1,3],[0,0,0,2,3,0,2,0]],"Walker I":[[0,3,1,1,3,0],[0,0,1,1,0,0],[3,1,2,2,0,0],[1,1,2,1,0,0],[0,1,0,0,1,0],[0,2,3,0,2,2]],"Walker II":[[0,3,1,1,3,0],[0,0,2,2,0,0],[0,3,3,3,3,0],[0,0,0,0,0,0],[0,3,1,1,3,0],[0,0,1,1,0,0],[3,1,2,2,0,0],[1,1,2,1,0,0],[0,1,0,0,1,0],[0,2,3,0,2,2]]},"Game of Life":{Glider:[[0,0,1],[1,0,1],[0,1,1]],Oscillator:[[1,1,1]],"Spaceship 1":[[1,0,0,1,0],[0,0,0,0,1],[1,0,0,0,1],[0,1,1,1,1]],"Spaceship 2":[[0,0,0,0,1,0],[0,0,0,0,0,1],[1,0,0,0,0,1],[0,1,1,1,1,1]],"Spaceship 3":[[0,1,1,1,1],[1,0,0,0,1],[0,0,0,0,1],[1,0,0,1,0]]},Generations:{"Diamond Wave":[[1,1]],Spaceship:[[1,1],[2,2]],"Square Wave":[[1,1],[1,1]],Quartet:[[0,1,1,0],[1,2,2,1],[1,2,2,1],[0,1,1,0]]},"Giant Galleons":{"Quartet I":[[0,0,1,0,0],[0,0,1,0,0],[1,1,0,1,1],[0,0,1,0,0],[0,0,1,0,0]],"Quartet II":[[0,1,1,0],[1,0,0,1],[1,0,0,1],[0,1,1,0]],"Quartet III":[[0,1,1,1,0],[1,0,0,0,1],[1,0,0,0,1],[1,0,0,0,1],[0,1,1,1,0]],"Quartet IV":[[1,0,1,0,1],[0,1,0,1,0],[1,0,1,0,1],[0,1,0,1,0],[1,0,1,0,1]],"Ship I":[[1,1]],"Ship II":[[0,1,1,0],[1,0,0,1]],"Ship III":[[0,1,1,1,0],[1,0,0,0,1]],"Ship IV":[[0,1,1,1,1,0],[1,0,0,0,0,1]],"Ship V":[[0,0,1,1,0,0],[0,1,0,0,1,0],[0,1,0,0,1,0],[1,0,0,0,0,1],[1,0,0,0,0,1]],Supernova:[[0,1,0],[1,0,1],[0,1,0]],Wave:[[1,1,1]]},"Hefty Hulls":{"12 Ships":[[0,0,0,0,1,1,0,0,0,0],[0,0,0,0,1,1,0,0,0,0],[0,0,0,1,0,0,1,0,0,0],[0,0,1,1,0,0,1,1,0,0],[1,1,0,0,0,0,0,0,1,1],[1,1,0,0,0,0,0,0,1,1],[0,0,1,1,0,0,1,1,0,0],[0,0,0,1,0,0,1,0,0,0],[0,0,0,0,1,1,0,0,0,0],[0,0,0,0,1,1,0,0,0,0]],"12 Ships II":[[1,1,0,0,0,0,0,0,1,1],[1,1,0,0,0,0,0,0,1,1],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,1,0,0,0,0],[0,0,0,1,1,1,1,0,0,0],[0,0,0,1,1,1,1,0,0,0],[0,0,0,0,1,1,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[1,1,0,0,0,0,0,0,1,1],[1,1,0,0,0,0,0,0,1,1]],"12 Ships III":[[1,1,0,0,1,1,0,0,1,1],[1,1,0,0,1,1,0,0,1,1],[0,0,0,1,1,1,1,0,0,0],[0,0,1,1,1,1,1,1,0,0],[1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1],[0,0,1,1,1,1,1,1,0,0],[0,0,0,1,1,1,1,0,0,0],[1,1,0,0,1,1,0,0,1,1],[1,1,0,0,1,1,0,0,1,1]],"16 Ships":[[1,1,0,0,0,0,0,0,1,1],[1,1,0,0,1,1,0,0,1,1],[0,0,0,0,1,1,0,0,0,0],[0,0,0,1,1,1,1,0,0,0],[0,1,1,1,1,1,1,1,1,0],[0,1,1,1,1,1,1,1,1,0],[0,0,0,1,1,1,1,0,0,0],[0,0,0,0,1,1,0,0,0,0],[1,1,0,0,1,1,0,0,1,1],[1,1,0,0,0,0,0,0,1,1]],"20 Ships":[[1,1,0,0,1,1,0,0,1,1],[1,1,0,0,1,1,0,0,1,1],[0,0,0,0,1,1,0,0,0,0],[0,0,0,1,1,1,1,0,0,0],[1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1],[0,0,0,1,1,1,1,0,0,0],[0,0,0,0,1,1,0,0,0,0],[1,1,0,0,1,1,0,0,1,1],[1,1,0,0,1,1,0,0,1,1]],"28 Ships":[[0,0,1,0,0,1,0,0],[0,0,1,0,0,1,0,0],[1,1,1,1,1,1,1,1],[0,0,1,0,0,1,0,0],[0,0,1,0,0,1,0,0],[1,1,1,1,1,1,1,1],[0,0,1,0,0,1,0,0],[0,0,1,0,0,1,0,0]],"Diamond Wave":[[1,1]],Doublet:[[0,1,0],[1,1,1],[1,1,1],[0,1,0]],"Flamboyant Ship":[[0,0,0,0,1,1,0,0,0,0],[0,0,0,1,2,2,1,0,0,0],[0,0,1,1,3,3,1,1,0,0],[0,1,0,2,4,4,2,0,1,0],[1,2,1,3,5,5,3,1,2,1],[1,1,0,4,6,6,4,0,1,1],[1,4,2,5,7,7,5,2,4,1],[3,1,1,6,8,8,6,1,1,3],[3,6,4,7,9,9,7,4,6,3],[5,4,1,8,10,10,8,1,4,5]],"Gun I":[[1,1,0,0,0,0,0,0],[2,2,1,2,0,0,1,2],[3,3,1,2,0,0,0,0],[0,0,2,1,1,2,0,0],[0,0,0,0,2,0,0,0]],"Gun II":[[0,0,1,1,0,0,0,0,0,0],[0,1,2,2,0,0,0,0,0,0],[1,1,3,3,0,0,0,0,0,0],[2,2,4,4,1,1,0,0,0,0],[1,3,5,5,1,1,1,0,0,0],[4,4,6,6,1,3,1,1,0,0],[3,5,7,7,1,2,0,1,1,0],[6,6,8,8,1,1,1,3,2,1],[5,7,9,9,1,6,1,3,2,1],[8,8,0,0,3,4,0,0,0,0]],Octet:[[0,1,0],[1,1,1],[0,1,0]],"Octet II":[[1,1,0,0,0,0,0,1],[0,1,1,0,0,0,1,1],[0,0,1,1,0,1,1,0],[0,0,0,0,0,1,0,0],[0,0,1,0,0,0,0,0],[0,1,1,0,1,1,0,0],[1,1,0,0,0,1,1,0],[1,0,0,0,0,0,1,1]],"Octet III":[[0,0,0,0,0,1,1,0],[1,1,1,0,0,0,1,0],[1,0,1,1,0,1,1,0],[0,0,0,0,0,1,0,0],[0,0,1,0,0,0,0,0],[0,1,1,0,1,1,0,1],[0,1,0,0,0,1,1,1],[0,1,1,0,0,0,0,0]],"Octet IV":[[0,1,0,0,1,0],[1,0,1,1,0,1],[0,1,1,1,1,0],[0,1,1,1,1,0],[1,0,1,1,0,1],[0,1,0,0,1,0]],"Octet V":[[0,0,1,1,1,1,0,0],[0,0,1,0,0,1,0,0],[1,1,1,1,1,1,1,1],[1,0,1,0,0,1,0,1],[1,0,1,0,0,1,0,1],[1,1,1,1,1,1,1,1],[0,0,1,0,0,1,0,0],[0,0,1,1,1,1,0,0]],"Octet VI":[[1,1,0,0,0,0,0,0,1,1],[1,1,0,0,0,0,0,0,1,1],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[1,1,0,0,0,0,0,0,1,1],[1,1,0,0,0,0,0,0,1,1]],"Octet VII":[[1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1]],"Quadruple Gun":[[0,0,1,1,0,0,0,0],[0,0,1,1,0,0,0,0],[0,0,0,0,0,0,1,1],[0,0,0,0,0,0,1,1],[1,1,0,0,0,0,0,0],[1,1,0,0,0,0,0,0],[0,0,0,0,1,1,0,0],[0,0,0,0,1,1,0,0]],Quartet:[[1,1],[1,1]],"Quartet II":[[0,0,0,0,1,1,0,0,0,0],[0,0,0,1,1,1,1,0,0,0],[0,0,0,1,0,0,1,0,0,0],[0,1,1,1,0,0,1,1,1,0],[1,1,0,0,0,0,0,0,1,1],[1,1,0,0,0,0,0,0,1,1],[0,1,1,1,0,0,1,1,1,0],[0,0,0,1,0,0,1,0,0,0],[0,0,0,1,1,1,1,0,0,0],[0,0,0,0,1,1,0,0,0,0]],"Quartet III":[[0,0,0,0,1,1,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[1,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,1],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,1,0,0,0,0]],Ship:[[1,1],[2,2]],"Ship II":[[1,1,0,0,0,0,0,1,1],[2,2,0,0,0,0,0,2,2],[3,3,1,1,0,1,1,3,3],[4,4,0,2,2,2,0,4,4],[5,5,3,3,0,3,3,5,5],[6,6,0,4,4,4,0,6,6],[7,7,5,5,0,5,5,7,7]],"Ship III":[[1,1,0,0,0,0,0,1,1],[3,1,0,0,0,0,0,1,3],[4,2,2,1,0,1,2,2,4],[5,3,1,1,2,1,1,3,5],[6,4,4,3,0,3,4,4,6]],"Wing II":[[1,1,0,0],[2,2,1,0],[3,3,1,1],[4,4,2,0],[5,5,3,3],[0,0,4,2],[0,0,5,5]],"Wing I":[[1,1,0,0],[2,2,0,0],[3,3,1,0],[0,0,2,0],[0,0,3,1],[0,0,0,2],[0,0,0,3]],"Wing III":[[1,1,0,0,0],[2,2,0,0,0],[0,3,1,0,0],[0,0,2,1,0],[0,0,0,2,1],[0,0,0,0,2]],"Wings I":[[0,0,1,1,0,0],[0,0,2,2,0,0],[0,1,3,3,1,0],[0,2,0,0,2,0],[1,3,0,0,3,1],[2,0,0,0,0,2],[3,0,0,0,0,3]],"Wings II":[[0,0,1,1,0,0],[0,1,2,2,1,0],[1,1,3,3,1,1],[0,2,4,4,2,0],[3,3,5,5,3,3],[2,4,0,0,4,2],[5,5,0,0,5,5]],"Wings III":[[0,0,0,1,1,0,0,0],[0,0,0,2,2,0,0,0],[0,0,1,3,3,1,0,0],[0,1,2,0,0,2,1,0],[1,2,0,0,0,0,2,1],[2,0,0,0,0,0,0,2]],"Wing IV":[[1,1,0,0,0,0],[2,2,1,0,0,0],[3,3,1,1,0,0],[4,4,2,0,1,0],[5,5,3,1,2,1],[6,6,4,0,1,1],[1,7,5,2,4,1],[8,8,6,1,1,3],[9,9,7,4,6,0],[10,10,8,1,0,0]]},"Leggy Legends":{Ship:[[1,1],[2,2]],"Double Ship":[[1],[1]],Quartet:[[1,1],[1,1]],"Growing Wings":[[1,1,1],[2,2,2]],"Wide Ship":[[1,1,1,1],[2,2,2,2]],"Extra Wide Ship":[[1,1,1,1,1,1],[2,2,2,2,2,2]],"Flying Saucer":[[1,1,1,1,1,1,1,1,1,1],[2,2,2,2,2,2,2,2,2,2]],Mothership:[[0,0,0,0,1,1,0,0,0,0],[1,1,1,1,2,2,1,1,1,1],[2,2,2,2,2,2,2,2,2,2]],"Triple Trouble":[[1,1,0,0,1,1,0,0,1,1],[1,1,1,1,2,2,1,1,1,1],[2,2,2,2,2,2,2,2,2,2]],"Triple Trouble II":[[0,0,0,0,1,1,0,0,0,0],[1,1,0,0,2,2,0,0,1,1],[1,1,1,1,2,2,1,1,1,1],[2,2,2,2,2,2,2,2,2,2]],Dreadnought:[[0,0,0,0,1,1,0,0,0,0],[0,0,0,0,2,2,0,0,0,0],[0,0,0,0,3,3,0,0,0,0],[1,1,0,0,4,4,0,0,1,1],[1,1,1,1,5,5,1,1,1,1],[2,2,2,2,0,0,2,2,2,2]],"Siamese Ships":[[1,1,0,0,0,0,1,1],[2,2,1,0,0,1,2,2],[3,3,2,1,1,2,3,3],[0,0,3,2,2,3,0,0]],Jellyfish:[[0,8,1,1,1,1,1,8,0],[0,0,2,1,1,1,2,0,0],[8,1,3,1,2,1,3,1,8],[0,2,4,2,3,2,4,2,0],[8,3,5,3,4,3,5,3,8],[0,4,6,4,5,4,6,4,0]],Cuttlefish:[[1,1,1,1,1,1],[2,1,1,1,1,2],[0,2,2,2,2,0]],Octopus:[[0,8,1,1,1,1,8,0],[0,0,2,1,1,2,0,0],[8,1,3,1,1,3,1,8],[0,2,4,1,1,4,2,0],[0,0,0,2,2,0,0,0]],Trilobit:[[1,1,1,1,1,1,1],[2,1,1,1,1,1,2],[0,1,2,1,2,1,0],[0,2,0,1,0,2,0],[0,0,0,2,0,0,0]]},"Pace Parade":{"Double Ship":[[1,1,1]],Explosion:[[0,0,0,0,1,0,0,0],[0,0,0,1,0,0,0,0],[0,0,1,0,1,1,0,0],[1,0,1,0,0,0,1,0],[0,1,0,0,0,1,0,1],[0,0,1,1,0,1,0,0],[0,0,0,0,1,0,0,0],[0,0,0,1,0,0,0,0]],Glider:[[0,0,3,0,0],[4,2,1,8,5],[0,8,7,6,3],[0,0,4,2,1]],Jellyfish:[[0,0,1,1,1,1,1,0,0],[1,2,4,2,6,2,4,2,1]],"Micro Mole":[[0,1,0],[3,6,3],[8,1,8]],"Mini Mole":[[0,1,3,1,0],[0,4,6,4,0],[2,7,0,7,2]],Plodder:[[2,5,2],[7,0,7],[2,5,2],[7,0,7]],Quartet:[[1,1,1],[1,1,1],[1,1,1]],"Ship I":[[0,1,0],[2,3,2]],"Ship II":[[0,1,1,0],[2,3,3,2]],"Slow Mole":[[0,1,3,2,0,0],[0,4,6,5,3,0],[2,7,2,8,6,1],[0,0,0,1,2,0]],Supernova:[[0,0,1,1,0,0],[0,1,0,0,1,0],[1,0,0,0,0,1],[1,0,0,0,0,1],[0,1,0,0,1,0],[0,0,1,1,0,0]]},"Repeating Replicants":{Pulsar:[[0,1,0],[1,6,1],[0,1,0]],"Diamond Wave":[[1],[1]],"Square Wave":[[1,1],[1,1]],Ship:[[1,1],[2,2]],Delta:[[0,0,0,1,1,0,0,0],[0,0,1,2,2,1,0,0],[0,1,1,3,3,1,1,0],[1,2,3,4,4,3,2,1],[1,0,0,0,0,0,0,1],[3,0,0,0,0,0,0,3]],"Twisted Cross":[[0,0,1,1,0,0],[0,0,5,4,0,0],[1,4,6,6,5,1],[1,5,6,6,4,1],[0,0,4,5,0,0],[0,0,1,1,0,0]]},"Spicy Spirals":{"Asymmetric cruiser":[[0,0,0,1,1,0,0,0,0],[0,0,1,1,1,1,0,0,0],[0,1,0,1,1,0,1,0,0],[0,2,1,2,2,2,1,0,0],[1,3,2,3,3,1,2,1,0],[2,4,1,1,1,3,1,0,0],[3,0,2,0,0,2,3,4,0],[4,0,0,0,0,4,0,0,3],[0,0,0,0,0,4,0,0,4]],Beetle:[[0,0,0,1,1,0,0,0],[0,1,1,1,1,1,1,0],[0,2,1,1,1,1,2,0],[1,0,0,1,1,0,0,1],[2,1,0,2,2,0,1,2],[0,2,2,1,1,2,2,0],[1,0,2,1,1,2,0,1],[2,1,1,0,0,1,1,2],[0,2,1,0,0,1,2,0],[1,0,0,2,2,0,0,1]],"Crooked Ship":[[0,0,1,1,0,0,0],[0,2,1,1,2,1,1],[1,1,2,1,0,2,2],[2,2,0,1,0,0,0],[0,0,1,1,1,1,1],[1,0,2,1,1,2,2],[2,2,0,0,0,0,0]],"Diamond Wave":[[1,1]],"Guarded Shuttle":[[0,1,1,0],[2,1,1,2]],Jellyfish:[[0,0,1,1,0,0,1,1,0,0],[0,1,1,1,1,1,1,1,1,0],[1,0,2,2,1,1,2,2,0,1],[1,1,1,3,3,3,3,1,1,1]],Quartet:[[1,1],[1,1]],"Shuttle I":[[0,1,1,0],[1,1,1,1]],"Shuttle II":[[0,0,1,1,0,0],[0,1,1,1,1,0],[0,0,1,1,0,0],[1,1,1,1,1,1]],Spiral:[[0,1,7,0],[2,1,1,1],[2,1,1,1],[2,0,1,0],[0,1,0,0]],"Squid I":[[0,0,0,0,1,1,0,0,0,0],[0,0,0,2,1,1,2,0,0,0],[0,0,1,1,1,1,1,1,0,0],[0,1,1,1,1,1,1,1,1,0],[0,0,2,1,1,1,1,2,0,0],[2,1,1,1,1,1,1,1,1,2],[2,1,3,2,1,1,2,3,1,2]],"Squid II":[[0,0,0,0,1,1,0,0,0,0],[0,0,0,1,1,1,1,0,0,0],[0,0,1,0,1,1,0,1,0,0],[0,2,1,1,1,1,1,1,2,0],[0,2,1,1,1,1,1,1,2,0],[1,3,4,3,2,2,3,4,3,1],[2,4,5,2,3,3,2,5,4,2],[3,5,6,6,4,4,6,6,5,3],[0,4,5,2,2,2,2,5,4,0],[0,6,0,5,4,4,5,0,6,0]],"Squid III":[[0,0,0,1,1,0,0,0],[0,0,1,1,1,1,0,0],[0,1,0,1,1,0,1,0],[0,2,1,1,1,1,2,0],[1,3,1,1,1,1,3,1],[2,4,4,3,3,4,4,2],[3,5,4,2,2,4,5,3],[4,6,5,4,4,5,6,4],[5,0,4,5,5,4,0,5],[6,1,1,0,0,1,1,6]],Tadpole:[[0,1,1,0],[1,1,1,2]],"Wing I":[[0,0,0,1,1,0,0,0],[0,0,1,0,0,1,0,0],[0,1,0,0,0,0,1,0],[1,0,0,0,0,0,0,1]],"Wing II":[[0,1,1,0,0,0],[1,0,0,1,0,0],[0,0,0,0,1,0],[0,0,0,0,0,1]],"Wings Deployer":[[0,1,1,0],[0,1,1,0],[5,1,1,5],[4,1,1,4]]},"Spiky Spillers":{"Diamond Wave":[[1,1]],Stretchers:[[1,1],[1,0]],"Square Wave":[[1,1],[1,1]],"Kite Wave":[[0,1],[1,1],[1,1]],"Spiky Wave":[[1,1],[1,1],[1,1]],Ship:[[1,1],[2,2]],Walker:[[1,1,1,1,1],[2,1,2,1,2],[0,1,0,2,0],[0,2,0,0,0]],Jumper:[[1,1,1,1,1],[2,1,2,1,2],[0,2,0,2,0]],Angel:[[1,1,0,0,0,0,0,0,1,1],[2,2,1,0,0,0,0,1,2,2],[3,3,2,1,0,0,1,2,3,3],[0,0,3,2,0,0,2,3,0,0],[0,0,4,3,1,1,3,4,0,0],[0,0,5,4,2,2,4,5,0,0],[0,0,0,5,3,3,5,0,0,0],[0,0,0,0,4,4,0,0,0,0]],"Ship II":[[1,1,1],[2,1,2],[0,2,0]],"1d Automaton":[[1,1,1,1,1,1,1,1,1,1],[2,1,2,2,2,2,2,2,2,2],[3,3,3,3,3,3,3,3,3,3]],"1d Automaton II":[[1,1,1,1,1,1,1,1,1,1],[2,1,2,2,2,2,2,2,1,2],[3,3,3,3,3,3,3,3,3,3]],"Fancy Ship I":[[0,0,0,0,1,1,0,0,0,0],[0,0,0,0,2,2,0,0,0,0],[0,0,0,1,3,3,1,0,0,0],[0,0,1,2,4,4,2,1,0,0],[1,1,2,3,0,0,3,2,1,1],[2,1,3,4,0,0,4,3,1,2],[3,1,4,0,0,0,0,4,1,3],[0,2,0,0,0,0,0,0,2,0],[0,3,0,0,0,0,0,0,3,0]],"Fancy Ship II":[[0,0,0,0,1,1,0,0,0,0],[0,0,0,0,2,2,0,0,0,0],[0,0,0,1,3,3,1,0,0,0],[0,0,1,1,4,4,1,1,0,0],[0,1,2,1,5,5,1,2,1,0],[1,2,3,1,6,6,1,3,2,1],[2,3,4,1,7,7,1,4,3,2],[3,0,5,1,8,8,1,5,0,3],[0,0,6,2,9,9,2,6,0,0],[0,0,0,3,0,0,3,0,0,0]],"Fancy Ship III":[[1,1,0,0,0,0,0,0,1,1],[2,2,0,0,1,1,0,0,2,2],[3,3,1,0,2,2,0,1,3,3],[0,0,2,1,3,3,1,2,0,0],[0,0,3,2,4,4,2,3,0,0],[0,0,4,3,5,5,3,4,0,0],[0,0,5,4,0,0,4,5,0,0],[0,0,0,5,0,0,5,0,0,0]],"Fancy Ship IV":[[0,0,0,0,1,1,0,0,0,0],[0,0,0,0,2,2,0,0,0,0],[0,1,1,0,3,3,0,1,1,0],[1,2,2,1,4,4,1,2,2,1],[2,0,3,2,5,5,2,3,0,2],[0,0,4,3,6,6,3,4,0,0],[0,0,5,4,7,7,4,5,0,0],[0,0,0,5,8,8,5,0,0,0]],"Fancy Ship V":[[0,0,0,0,1,1,0,0,0,0],[0,0,0,1,2,2,1,0,0,0],[0,0,1,1,3,3,1,1,0,0],[0,1,2,1,4,4,1,2,1,0],[1,2,3,1,5,5,1,3,2,1],[2,3,4,2,0,0,2,4,3,2],[3,4,0,3,0,0,3,0,4,3],[4,0,0,4,0,0,4,0,0,4],[0,0,0,5,0,0,5,0,0,0]],"Fancy Ship VI":[[0,0,0,0,1,1,0,0,0,0],[0,0,0,0,2,2,0,0,0,0],[0,0,0,1,3,3,1,0,0,0],[0,0,1,1,4,4,1,1,0,0],[0,1,1,2,5,5,2,1,1,0],[1,1,2,0,0,0,0,2,1,1],[2,2,0,0,0,0,0,0,2,2]]},"Star Wars":{Snake:[[0,1,2,1,2,1,0],[1,2,0,1,0,2,1],[1,2,0,1,0,2,1],[0,1,2,1,2,1,0]],"Gun 0":[[1,2,3],[0,1,0],[1,1,0],[0,1,0],[0,1,0],[1,1,0],[0,1,2],[3,0,1]],"Gun 1":[[0,0,1,0,0,0,0,0,0],[0,1,1,1,0,0,1,2,0],[3,0,1,0,0,0,1,0,3],[0,0,1,1,0,1,1,1,0],[0,0,1,1,0,0,1,0,0],[0,0,2,0,0,3,2,1,0]],"Gun 2":[[0,0,0,1,0,1,0,0],[0,1,2,0,1,1,1,0],[1,2,3,1,1,0,1,1],[1,2,3,0,0,1,1,0],[0,0,0,0,1,2,0,0]],"Gun 3":[[0,0,0,0,0,3,2,0],[0,0,1,0,0,1,0,0],[1,1,1,1,1,1,1,1],[0,1,0,0,0,0,1,0],[0,1,0,0,0,0,1,0],[1,1,1,0,0,1,1,1],[0,1,0,0,0,0,1,0]],"Gun 4":[[0,0,0,1,0,0],[0,0,1,1,1,3],[0,0,0,1,0,2],[0,0,0,0,0,1],[0,1,0,1,1,0],[1,1,1,1,1,1],[0,1,0,0,1,0]],"Gun 5":[[0,1,1,2,0],[2,0,1,0,3],[3,1,1,1,0],[0,1,0,2,1]],"Gun 6":[[0,0,0,2,0],[3,0,1,1,0],[2,1,1,1,3],[1,0,1,0,2],[0,0,0,1,0]],"Gun 7":[[0,1,0,0,1,0,0,0,0,0],[1,1,1,2,2,1,0,3,2,0],[0,1,0,2,0,1,0,0,1,0],[0,1,2,2,1,1,1,1,1,1],[0,0,1,0,0,1,0,0,1,0]],"Gun 8":[[0,0,0,0,3,2,0,0],[0,0,0,0,1,0,3,0],[0,0,1,2,0,1,0,0],[0,0,2,3,1,1,0,0],[3,1,0,1,0,1,1,1],[2,0,1,1,1,0,1,3],[0,3,0,0,1,1,1,0],[0,0,0,0,1,3,0,0]],"Gun 9":[[0,0,0,1,0,3,0,0],[0,0,2,0,1,0,2,1],[0,0,3,1,1,1,2,1],[0,0,1,0,1,0,3,0],[3,0,1,0,1,0,0,0],[2,1,1,1,3,0,0,0],[1,0,1,0,2,0,0,0],[0,0,0,0,1,3,0,0]],"Gun 10":[[0,0,1,1,3,0,1,0],[0,1,0,2,2,1,1,1],[1,1,1,0,0,0,1,0],[0,1,0,0,0,0,3,0]],"Gun 11":[[0,3,2,1,1,2,3,0],[0,0,1,0,0,1,0,0],[1,1,1,1,1,1,1,1],[2,3,0,0,0,0,3,2]],"Gun 12":[[0,2,3,0,0,1,0,0,0],[1,0,1,1,1,1,0,3,0],[0,1,1,0,0,1,1,2,1],[0,0,1,1,1,1,0,2,1],[0,1,2,0,0,0,3,0,0]],"Gun 13":[[0,0,0,0,3,0,0,0,0],[0,0,0,0,2,0,0,0,0],[0,0,1,0,1,0,1,0,0],[0,2,3,1,1,1,3,2,0],[1,0,1,0,0,0,1,0,1],[1,1,1,1,0,1,1,1,1],[2,0,1,0,2,0,1,0,2],[0,3,0,1,0,1,0,3,0]],"Gun 14":[[0,0,0,1,0,1,0,0,0],[1,0,1,0,1,0,1,0,1],[2,1,1,1,1,1,1,1,2],[0,1,0,1,0,1,0,1,0],[0,1,0,0,1,0,0,1,0],[1,1,1,1,1,1,1,1,1],[0,1,0,0,1,0,0,1,0]],"Gun 15":[[0,1,0,0,0,0],[1,1,1,0,0,0],[0,1,0,0,1,0],[0,0,0,1,1,1],[0,0,0,0,1,0]],Star:[[0,0,0,1,0,0,0],[0,0,1,1,1,0,0],[0,1,0,0,0,1,0],[1,1,0,0,0,1,1],[0,1,0,0,0,1,0],[0,0,1,1,1,0,0],[0,0,0,1,0,0,0]]},"Tacky Tadpoles":{"Asymmetric cruiser":[[0,0,0,1,1,0,0,0,0],[0,0,1,1,1,1,0,0,0],[0,1,0,1,1,0,1,0,0],[0,2,1,2,2,2,1,0,0],[1,3,2,3,3,1,2,1,0],[2,4,1,1,1,3,1,0,0],[3,0,2,0,0,2,3,4,0],[4,0,0,0,0,4,0,0,3],[0,0,0,0,0,4,0,0,4]],Beetle:[[0,0,1,1,0,0,1,1,0,0],[0,1,0,1,1,1,1,0,1,0],[1,0,0,0,2,2,0,0,0,1]],Cruiser:[[0,0,0,0,1,1,0,0,0,0],[0,0,0,0,1,1,0,0,0,0],[0,0,1,1,1,1,1,1,0,0],[0,1,1,1,2,2,1,1,1,0],[1,1,3,1,1,1,1,3,1,1],[2,1,4,1,1,1,1,4,1,2],[3,2,1,0,0,0,0,1,2,3],[4,0,1,2,0,0,2,1,0,4],[0,3,1,0,3,3,0,1,3,0],[0,0,2,4,0,0,4,2,0,0]],"Diamond Wave":[[1,1]],Jellyfish:[[0,0,1,1,0,0,1,1,0,0],[0,1,1,1,1,1,1,1,1,0],[1,0,2,2,1,1,2,2,0,1],[1,1,1,3,3,3,3,1,1,1]],Octopus:[[0,0,0,1,1,0,0,0],[0,0,0,1,1,0,0,0],[0,1,1,1,1,1,1,0],[0,2,0,2,2,0,2,0],[1,3,1,3,3,1,3,1],[2,4,2,4,4,2,4,2],[3,0,3,4,4,3,0,3],[4,0,4,0,0,4,0,4]],Quartet:[[1,1],[1,1]],Shuttle:[[0,1,1,0],[1,1,1,1]],Tadpole:[[0,1,1,0],[1,1,1,2]],"Tadpole Gun":[[0,1,1,0],[2,1,1,2]],"Wing I":[[0,0,0,1,1,0,0,0],[0,0,1,0,0,1,0,0],[0,1,0,0,0,0,1,0],[1,0,0,0,0,0,0,1]],"Wing II":[[0,1,1,0,0,0],[1,0,0,1,0,0],[0,0,0,0,1,0],[0,0,0,0,0,1]]},"Wiggly Wings":{"Asymmetric cruiser":[[0,0,0,1,1,0,0,0,0],[0,0,1,1,1,1,0,0,0],[0,1,0,1,1,0,1,0,0],[0,2,1,2,2,2,1,0,0],[1,3,2,3,3,1,2,1,0],[2,4,1,1,1,3,1,0,0],[3,0,2,0,0,2,3,4,0],[4,0,0,0,0,4,0,0,3],[0,0,0,0,0,4,0,0,4]],"Beetle I":[[0,0,1,1,0,0,1,1,0,0],[0,1,0,1,1,1,1,0,1,0],[1,0,0,0,2,2,0,0,0,1]],"Beetle II":[[0,0,0,1,1,0,0,0],[0,1,1,1,1,1,1,0],[0,2,1,1,1,1,2,0],[1,0,0,1,1,0,0,1],[2,1,0,2,2,0,1,2],[0,2,2,1,1,2,2,0],[1,0,2,1,1,2,0,1],[2,1,1,0,0,1,1,2],[0,2,1,0,0,1,2,0],[1,0,0,2,2,0,0,1]],"Crooked Ship":[[0,0,1,1,0,0,0],[0,2,1,1,2,1,1],[1,1,2,1,0,2,2],[2,2,0,1,0,0,0],[0,0,1,1,1,1,1],[1,0,2,1,1,2,2],[2,2,0,0,0,0,0]],"Diamond Wave":[[1,1]],"Double Shuttle":[[0,1,1,0],[2,1,1,2]],Jellyfish:[[0,0,1,1,0,0,1,1,0,0],[0,1,1,1,1,1,1,1,1,0],[1,0,2,2,1,1,2,2,0,1],[1,1,1,3,3,3,3,1,1,1]],Octopus:[[0,0,0,1,1,0,0,0],[0,0,0,1,1,0,0,0],[0,1,1,1,1,1,1,0],[0,2,0,2,2,0,2,0],[1,3,1,3,3,1,3,1],[2,4,2,4,4,2,4,2],[3,0,3,4,4,3,0,3],[4,0,4,0,0,4,0,4]],Quartet:[[1,1],[1,1]],"Shuttle I":[[0,1,1,0],[1,1,1,1]],"Shuttle II":[[0,0,1,1,0,0],[0,1,1,1,1,0],[0,0,1,1,0,0],[1,1,1,1,1,1]],"Squid I":[[0,0,0,0,1,1,0,0,0,0],[0,0,0,2,1,1,2,0,0,0],[0,0,1,1,1,1,1,1,0,0],[0,1,1,1,1,1,1,1,1,0],[0,0,2,1,1,1,1,2,0,0],[2,1,1,1,1,1,1,1,1,2],[2,1,3,2,1,1,2,3,1,2]],"Squid II":[[0,0,0,0,1,1,0,0,0,0],[0,0,0,1,1,1,1,0,0,0],[0,0,1,0,1,1,0,1,0,0],[0,2,1,1,1,1,1,1,2,0],[0,2,1,1,1,1,1,1,2,0],[1,3,4,3,2,2,3,4,3,1],[2,4,5,2,3,3,2,5,4,2],[3,5,6,6,4,4,6,6,5,3],[0,4,5,2,2,2,2,5,4,0],[0,6,0,5,4,4,5,0,6,0]],"Squid III":[[0,0,0,1,1,0,0,0],[0,0,1,1,1,1,0,0],[0,1,0,1,1,0,1,0],[0,2,1,1,1,1,2,0],[1,3,1,1,1,1,3,1],[2,4,4,3,3,4,4,2],[3,5,4,2,2,4,5,3],[4,6,5,4,4,5,6,4],[5,0,4,5,5,4,0,5],[6,1,1,0,0,1,1,6]],Tadpole:[[0,1,1,0],[1,1,1,2]],"Wing I":[[0,0,0,1,1,0,0,0],[0,0,1,0,0,1,0,0],[0,1,0,0,0,0,1,0],[1,0,0,0,0,0,0,1]],"Wing II":[[0,1,1,0,0,0],[1,0,0,1,0,0],[0,0,0,0,1,0],[0,0,0,0,0,1]]}},F={randomnessLogShift:0,squareVsRectangularMaskProbability:.7,maxSeedSize:10,randomSeedingWeights:{Random:1,"Random p2h":1,"Random p2v":1,"Random d2a":1,"Random d2b":1,"Random g2":1,"Random p4":1,"Random d4":1,"Random g4":1,"Random r8":1},seedingWeightsWeights:{Random:1},seedingWeights:{Random:{}}},D={Default:F,"Beating Beacons":{...F,name:"Beating Beacons",seedingConfig:O["Beating Beacons"],seedingWeightsWeights:{Mixed:1,Beacons:1,Ships:1,"Double Waves":1,"Diamond Waves":1,"Triangular Waves":1},seedingWeights:{Mixed:{Beacon:.2,"Cruiser I":.2,"Cruiser II":.2,"Cruiser III":.2,"Cruiser IV":.2,"Diamond Wave":.2,"Double Wave":.2,"Glitching Ship":.2,"Gunning Ship":.2,Ship:.2,Shuttle:.2,"Triangular Wave":.2,"Wing v1":.2,"Wing v3":.2,"Wings v2":.2,Wingship:.2},Beacons:{Beacon:1},Ships:{"Cruiser I":1,"Cruiser II":1,"Cruiser III":1,"Cruiser IV":1,"Gunning Ship":1,"Glitching Ship":1,Ship:1,Shuttle:1,Wingship:1,"Wing v1":1,"Wing v2":1,"Wing v3":1},"Double Waves":{"Double Wave":4,Beacon:.2},"Diamond Waves":{"Diamond Wave":4,Beacon:.2},"Triangular Waves":{"Triangular Wave":4,Beacon:.2}}},"Brian's brain":{...F,name:"Brian's brain",seedingConfig:O["Brian's Brain"],seedingWeightsWeights:{Mixed:1,Butterflies:1,"Diamond Waves":.5,Snakes:1,Waves:1},seedingWeights:{Mixed:{Butterfly:1,"Diamond Wave":.5,"Oscillator I":2,"Oscillator II":2,Star:4,Snake:4,"Square Wave":4},Butterflies:{Butterfly:120},"Butterfly Bombers":{"Butterfly Bomber":30},"Diamond Waves":{"Diamond Wave":20},Snakes:{Snake:100},Waves:{"Square Wave":8,Spaceship:3}}},"Brian's brain (regularised)":{...F,name:"Brian's brain (regularised)",seedingConfig:O["Brian's Brain"],seedingWeightsWeights:{"Butterfly Bombers":5,"Diamond Waves":1,Waves:3},seedingWeights:{"Butterfly Bombers":{"Butterfly Bomber":30},"Diamond Waves":{"Diamond Wave":20},Waves:{"Square Wave":8,Spaceship:3}}},"Brian's brain (modified)":{...F,name:"Brian's brain (modified)",seedingConfig:O["Brian's Brain"],seedingWeightsWeights:{Mixed:1,Butterflies:1,"Diamond Waves":1,Snakes:1,Stars:3,Waves:1},seedingWeights:{Mixed:{Butterfly:1,"Diamond Wave":.5,"Oscillator I":2,"Oscillator II":2,Star:4,Snake:4,"Square Wave":4},Butterflies:{Butterfly:120},"Diamond Waves":{"Diamond Wave":20},Snakes:{Snake:100},Stars:{"Oscillator I":5,"Oscillator II":5,Star:10,"Short-lived Star":5},Waves:{"Square Wave":8,Spaceship:3}}},"Brian's brain family":{...F,name:"Brian's brain family",seedingConfig:O["Brian's Brain"],seedingWeightsWeights:{Mixed:1,Butterflies:1,"Diamond Waves":1,Snakes:1,Waves:1},seedingWeights:{Mixed:{Butterfly:1,"Diamond Wave":.5,"Oscillator I":2,"Oscillator II":2,Star:4,Snake:4,"Square Wave":4},Butterflies:{Butterfly:120},"Diamond Waves":{"Diamond Wave":20},Snakes:{Snake:100},Waves:{"Square Wave":8,Spaceship:3}}},"Crummy Cruisers":{...F,name:"Crummy Cruisers",seedingConfig:O["Crummy Cruisers"],seedingWeightsWeights:{Mixed:1,Cruisers:1,Ships:1},seedingWeights:{Mixed:{Cruiser:.2,Quartet:.2,Ship:.2,"Wide Quartet":.2,"Quartet XXL":.2,"Double Ship":.2,"Twisted Quartet":.2,"Burning Cruiser":.2,"Burning Ship":.2,"Double Cruiser II":.2,"Double Cruiser I":.2,"Triple Trouble":.2,"Triple Trouble II":.2,"Triple ship":.2,"Triple Trouble III":.2,"Burning Cruiser II":.2},Cruisers:{Cruiser:1,"Burning Cruiser":1,"Burning Cruiser II":1,"Double Cruiser I":1,"Double Cruiser II":1,"Triple Trouble":1,"Triple Trouble II":1,"Triple Trouble III":1,"Quartet XXL":1},Ships:{Ship:1,"Double Ship":1,"Triple ship":1}}},"Extravagant Extenders":{...F,name:"Extravagant Extenders",seedingConfig:O["Extravagant Extenders"],seedingWeightsWeights:{Mixed:1,Stars:1,Extenders:1},seedingWeights:{Mixed:{"Binary Star":1,Extender:1,"Extender Gun":1,"Quadruple Extender I":1,"Quadruple Extender II":1,"Quadruple Scout":1,Scout:1,"Star I":1,"Star II":1},Stars:{"Binary Star":1,"Star I":1,"Star II":1,Scout:1,Extender:1},Extenders:{Extender:3,"Quadruple Extender I":1,"Quadruple Extender II":1,"Quadruple Scout":1,Scout:1}}},"Fancy Fans":{...F,name:"Fancy Fans",seedingConfig:O["Fancy Fans"],seedingWeightsWeights:{Mixed:1,Ships:1,Wings:1,Walkers:1,Waves:1},seedingWeights:{Mixed:{"Asymmetric Wing v7":1,"Asymmetric Wing v8":1,"Asymmetric Wing v6":1,"Asymmetric Wing v10":1,"Double Walker":1,"Inverted Wing v12":1,Quartet:1,Quintet:1,"Ship v4":1,"Ship v5":1,"Ship v6":1,"Ship v7":1,"Ship v8":1,"Ship v9":1,"Ship v10":1,"Trio II":1,Walker:1,Wave:1,"Wing v8":1,"Wing v9":1,"Wing v10":1,"Wing v11":1,"Wing v12":1,"Wing v12b":1,"Wing v13":1},Ships:{"Ship v4":3,"Ship v5":3,"Ship v6":3,"Ship v7":3,"Ship v8":3,"Ship v9":3,"Ship v10":3},Wings:{"Asymmetric Wing v7":1,"Asymmetric Wing v8":1,"Asymmetric Wing v6":1,"Asymmetric Wing v10":1,"Inverted Wing v12":1,"Wing v8":1,"Wing v9":1,"Wing v10":1,"Wing v11":1,"Wing v12":1,"Wing v12b":1,"Wing v13":1},Walkers:{"Double Walker":5,Walker:8},Waves:{Wave:15}}},"Flaming Flaneries":{name:"Flaming Flaneries",seedingConfig:O["Flaming Flaneries"],seedingWeightsWeights:{Random:1,Mixed:1,Dancers:1,Flies:1,Ships:1,Snakes:1,Stars:1,Stretchers:1,Thrusters:1,Walkers:1,Waves:1},seedingWeights:{Random:{},Mixed:{Dancer:.2,"Diamond Wave":.2,Dragger:.2,Jumper:.2,Fly:.2,"Kite Wave":.2,"Ship Layer":.2,"Ship Layer II":.2,"Ship I":.2,"Ship II":.2,"Ship III":.2,"Ship IV":.2,"Ship V":.2,"Ship VI":.2,"Ship VII":.2,Snake:.2,"Square Wave":.2,Star:.2,Stretchers:.2,"Thruster I":.2,"Thruster II":.2,"Thruster III":.2,"Walker I":.2,"Walker II":.2},Dancers:{Dancer:10},Flies:{Fly:10},Ships:{"Ship I":2,"Ship II":2,"Ship III":2,"Ship IV":2,"Ship V":2,"Ship VI":2,"Ship VII":2},Snakes:{Snake:20},Stars:{Star:5},Stretchers:{Stretchers:10},Thrusters:{"Thruster I":8,"Thruster II":8,"Thruster III":8},Walkers:{"Walker I":10,"Walker II":10},Waves:{"Diamond Wave":3,"Kite Wave":3,"Square Wave":3}}},"Game of Life":{...F,name:"Game of Life",seedingConfig:O["Game of Life"],seedingWeightsWeights:{Mixed:1,"Gliders and Spaceships":1,Gliders:1,Spaceships:1},seedingWeights:{Mixed:{Glider:2,Oscillator:1,"Spaceship 1":1,"Spaceship 2":1,"Spaceship 3":1},"Gliders and Spaceships":{Glider:20,"Spaceship 1":8,"Spaceship 2":8,"Spaceship 3":8},Gliders:{Glider:100},Spaceships:{"Spaceship 1":40,"Spaceship 2":40,"Spaceship 3":40}}},Generations:{...F,name:"Generations",seedingConfig:O.Generations,seedingWeightsWeights:{Mixed:1},seedingWeights:{Mixed:{"Diamond Wave":3,Spaceship:3,"Square Wave":3,Quartet:3}}},"Giant Galleons":{...F,name:"Giant Galleons",seedingConfig:O["Giant Galleons"],seedingWeightsWeights:{Mixed:1,Ships:1,Supernovae:1,Waves:1},seedingWeights:{Mixed:{"Quartet I":.5,"Quartet II":.5,"Quartet III":.5,"Quartet IV":.5,"Ship I":.5,"Ship II":.5,"Ship III":.5,"Ship IV":.5,"Ship V":.5,Supernova:.5,Wave:.5},Ships:{"Ship I":10,"Ship II":10,"Ship III":10,"Ship IV":10,"Ship V":10},Supernovae:{Supernova:10},Waves:{Wave:10}}},"Hefty Hulls":{...F,name:"Hefty Hulls",seedingConfig:O["Hefty Hulls"],seedingWeightsWeights:{Random:1,Mixed:1,"Multiple Ships":1,Ships:1,"Ship Guns":1},seedingWeights:{Random:{},Mixed:{"12 Ships":.2,"12 Ships II":.2,"12 Ships III":.2,"16 Ships":.2,"20 Ships":.2,"28 Ships":.2,"Diamond Wave":.2,Doublet:.2,"Flamboyant Ship":.2,"Gun I":.2,"Gun II":.2,Octet:.2,"Octet II":.2,"Octet III":.2,"Octet IV":.2,"Octet V":.2,"Octet VI":.2,"Octet VII":.2,"Quadruple Gun":.2,Quartet:.2,"Quartet II":.2,"Quartet III":.2,Ship:.2,"Ship II":.2,"Ship III":.2,"Wing II":.2,"Wing I":.2,"Wing III":.2,"Wings I":.2,"Wings II":.2,"Wings III":.2,"Wing IV":.2},"Multiple Ships":{"12 Ships":1,"2 Ships II":1,"12 Ships III":1,"16 Ships":1,"20 Ships":1,"28 Ships":1,Doublet:1,Octet:1,"Octet II":1,"Octet III":1,"Octet IV":1,"Octet V":1,"Octet VI":1,"Octet VII":1,Quartet:1,"Quartet II":1,"Quartet III":1},Ships:{"Flamboyant Ship":3,Ship:3,"Ship II":3,"Ship III":3,"Wing I":3,"Wing II":3,"Wing III":3,"Wing IV":3,"Wings I":3,"Wings II":3,"Wings III":3},"Ship Guns":{"Gun I":4,"Gun II":4,"Quadruple Gun":4}}},"Leggy Legends":{...F,name:"Leggy Legends",seedingConfig:O["Leggy Legends"],seedingWeightsWeights:{Random:1,Mixed:1,Cuttlefish:1,Dreadnoughts:1,"Flying Saucers":1,Jellyfish:1,Motherships:1,Octopus:1,"Siamese Ships":1,Ships:1,Trilobit:1,"Triple Troubles":1},seedingWeights:{Random:{},Mixed:{Ship:.3,"Double Ship":.3,Quartet:.3,"Growing Wings":.3,"Wide Ship":.3,"Extra Wide Ship":.3,"Flying Saucer":.3,Mothership:.3,"Triple Trouble":.3,"Triple Trouble II":.3,Dreadnought:.3,"Siamese Ships":.3,Jellyfish:.3,Cuttlefish:.3,Octopus:.3,Trilobit:.3},Cuttlefish:{Cuttlefish:10},Dreadnoughts:{Dreadnought:10},"Flying Saucers":{"Flying Saucer":10},Jellyfish:{Jellyfish:10},Motherships:{Mothership:10},Octopus:{Octopus:10},"Siamese Ships":{"Siamese Ships":10},Ships:{Ship:10,"Double Ship":10,Quartet:10,"Growing Wings":10,"Wide Ship":10,"Extra Wide Ship":10,"Flying Saucer":10,Mothership:10,"Triple Trouble":10,"Triple Trouble II":10,Dreadnought:10,"Siamese Ships":10},Trilobit:{Trilobit:10},"Triple Troubles":{"Triple Trouble":10,"Triple Trouble II":10}}},"Pace Parade":{...F,name:"Pace Parade",seedingConfig:O["Pace Parade"],seedingWeightsWeights:{Mixed:1,Gliders:1,Jellyfish:1,Moles:1,Ships:1,Supernovae:1,Waves:1},seedingWeights:{Mixed:{"Double Ship":.2,Explosion:.2,Glider:.2,Jellyfish:.2,"Micro Mole":.2,"Mini Mole":.2,Plodder:.2,Quartet:.2,"Ship I":.2,"Ship II":.2,"Slow Mole":.2,Supernova:.2},Gliders:{Glider:10},Jellyfish:{Jellyfish:10},Moles:{"Micro Mole":5,"Mini Mole":5,"Slow Mole":5,Plodder:5},Ships:{"Double Ship":8,"Ship I":8,"Ship II":8},Supernovae:{Supernova:5,Explosions:5},Waves:{Wave:5}}},"Repeating Replicants":{...F,name:"Repeating Replicants",seedingConfig:O["Repeating Replicants"],seedingWeightsWeights:{Mixed:1,Pulsars:1,"Diamond Waves":1,"Square Waves":1},seedingWeights:{Mixed:{Delta:1,"Diamond Wave":1,Pulsar:1,Ship:1,"Square Wave":1,"Twisted Cross":1},Pulsars:{Pulsar:10},"Diamond Waves":{"Diamond Wave":10},"Square Waves":{"Square Wave":10}}},"Spicy Spirals":{...F,name:"Spicy Spirals",seedingConfig:O["Spicy Spirals"],seedingWeightsWeights:{Random:1,Mixed:1,Beetles:1,Jellyfish:1,Ships:1,Spirals:.2,Squids:1,Tadpoles:1,Wave:1,Wings:1},seedingWeights:{Random:{},Mixed:{"Asymmetric cruiser":.2,Beetle:.2,"Crooked Ship":.2,"Diamond Wave":.2,"Guarded Shuttle":.2,Jellyfish:.2,Quartet:.2,"Shuttle I":.2,"Shuttle II":.2,Spiral:.05,"Squid I":.2,"Squid II":.2,"Squid III":.2,Tadpole:.2,"Wing I":.2,"Wing II":.2,"Wings Deployer":1},Beetles:{Beetle:10},Jellyfish:{Jellyfish:10},Ships:{"Asymmetric cruiser":2,"Crooked Ship":2,"Guarded Shuttle":2,"Shuttle I":2,"Shuttle II":2,Quartet:2},Spirals:{Spiral:.2},Squids:{"Squid I":5,"Squid II":5,"Squid III":5},Tadpoles:{Tadpole:10},Wave:{"Diamond Wave":5},Wings:{"Wing I":5,"Wing II":5,"Wings Deployer":5}}},"Spiky Spillers":{...F,name:"Spiky Spillers",seedingConfig:O["Spiky Spillers"],seedingWeightsWeights:{Random:1,Mixed:1,Angels:1,Automata:1,Ships:1,Stretchers:1,"Walkers and Jumpers":1,Waves:1},seedingWeights:{Random:{},Mixed:{"Diamond Wave":.3,Stretchers:.3,"Square Wave":.3,"Kite Wave":.3,"Spiky Wave":.3,Ship:.3,Walker:.3,Jumper:.3,Angel:.3,"Ship II":.3,"1d Automaton":.3,"1d Automaton II":.3,"Fancy Ship I":.3,"Fancy Ship II":.3,"Fancy Ship III":.3,"Fancy Ship IV":.3,"Fancy Ship V":.3,"Fancy Ship VI":.3},Angels:{Ship:2,"Ship II":2,Angel:15},Automata:{"1d Automaton":10,"1d Automaton II":10},Ships:{Ship:2,"Ship II":2,"Fancy Ship I":2,"Fancy Ship II":2,"Fancy Ship III":2,"Fancy Ship IV":2,"Fancy Ship V":2,"Fancy Ship VI":2},Stretchers:{Stretchers:10},"Walkers and Jumpers":{Walker:10,Jumper:10},Waves:{"Diamond Wave":2,Stretchers:2,"Square Wave":2,"Kite Wave":2,"Spiky Wave":2}}},"Star Wars":{...F,name:"Star Wars",seedingConfig:O["Star Wars"],seedingWeightsWeights:{Random:1,Mixed:1,Snakes:1,Stars:1},seedingWeights:{Random:{},Mixed:{"Gun 0":.2,"Gun 1":.2,"Gun 2":.2,"Gun 3":.2,"Gun 4":.2,"Gun 5":.2,"Gun 6":.2,"Gun 7":.2,"Gun 8":.2,"Gun 9":.2,"Gun 10":.2,"Gun 11":.2,"Gun 12":.2,"Gun 13":.2,"Gun 14":.2,"Gun 15":.2,Snake:3,Star:5},Snakes:{Snake:10},Stars:{Star:10}}},"Tacky Tadpoles":{...F,name:"Tacky Tadpoles",seedingConfig:O["Tacky Tadpoles"],seedingWeightsWeights:{Random:1,Mixed:1,Beetles:1,Jellyfish:1,Octopuses:1,Ships:1,"Tadpole Guns":1,Tadpoles:1,Waves:1},seedingWeights:{Random:{},Mixed:{"Asymmetric cruiser":1,Beetle:1,Cruiser:1,"Diamond Wave":1,Jellyfish:1,Octopus:1,Quartet:1,Shuttle:1,Tadpole:1,"Tadpole Gun":1,"Wing I":1,"Wing II":1},Beetles:{Beetle:10},Jellyfish:{Jellyfish:10},Octopuses:{Octopus:10},Ships:{"Asymmetric cruiser":2,Cruiser:2,Shuttle:2,Quartet:2},"Tadpole Guns":{"Tadpole Gun":2},Tadpoles:{Tadpole:10},Waves:{"Diamond Wave":5}}},"Wiggly Wings":{...F,name:"Wiggly Wings",seedingConfig:O["Wiggly Wings"],seedingWeightsWeights:{Random:1,Mixed:1,Beetles:1,Jellyfish:1,Octopuses:1,Ships:1,Squids:1,Tadpoles:1,Waves:1,Wings:1},seedingWeights:{Random:{},Mixed:{"Asymmetric cruiser":1,"Beetle I":1,"Beetle II":1,"Crooked Ship":1,"Diamond Wave":1,"Double Shuttle":1,Jellyfish:1,Octopus:1,Quartet:1,"Shuttle I":1,"Shuttle II":1,"Squid I":1,"Squid II":1,"Squid III":1,Tadpole:1,"Wing I":1,"Wing II":1},Beetles:{"Beetle I":5,"Beetle II":5},Jellyfish:{Jellyfish:10},Octopuses:{Octopus:10},Ships:{"Asymmetric cruiser":2,"Crooked Ship":2,"Double Shuttle":2,"Shuttle I":2,"Shuttle II":2,Quartet:2},Squids:{"Squid I":5,"Squid II":5,"Squid III":5},Tadpoles:{Tadpole:10},Waves:{"Diamond Wave":5},Wings:{"Wing I":5,"Wing II":5}}},"Brian's brain outernet":{...F,hideInApp:!0,randomnessLogShift:-.5,seedingWeightsWeights:{Default:1},seedingWeights:{Default:{Butterfly:1,"Diamond Wave":.5,"Oscillator I":2,"Oscillator II":2,Star:4,Snake:4,"Square Wave":4}}},"Brian's brain outernet 2":{...F,hideInApp:!0,randomnessLogShift:-.5,seedingWeightsWeights:{"Square Waves":1},seedingWeights:{"Square Waves":{"Square Wave":.5}}},"Brian's brain outernet b":{...F,hideInApp:!0,seedingWeightsWeights:{"Square Waves":1},seedingWeights:{"Square Waves":{"Square Wave":.5}}},"Brian's brain outernet c":{...F,hideInApp:!0,randomnessLogShift:-.5,seedingWeightsWeights:{"Square Waves":1},seedingWeights:{"Square Waves":{"Square Wave":.5}}}},E={1:1,2:1,3:1,4:1,6:1,8:1,12:1,16:1,24:1,32:1,48:1,64:1,96:1},L={Test:{name:"Test",hideInApp:!0,rules:{"B35678|0:0.1.3/S236|2:0.1.2/I5/G10/R0":1},randomnessConfig:D.Generations},Custom:{name:"Custom",hideInApp:!0,rules:{}},"Mixed Safe":{name:"Mixed Safe",recommended:!0,ruleGroup:{"Bilious Billows":2,"Brian's Brain":1,"Brian's Brain (modified)":3,"Brian's Brain family":2,"Brian's Brain (regularised)":2,"Beating Beacons":1,"Burning Islands":2,"Crummy Cruisers":1,"Game of Life":1,"Cranky Crawlers":2,"Extravagant Extenders":2,"Fancy Fans":3,"Flaming Flaneries":1,"Fuming Fumblers":2,"Giant Galleons":2,"Growing Gliders":3,"Hefty Hulls":1,"Leggy Legends":2,"Pace Parade":3,"Puffy Pulse":2,"Repeating Replicants":1,"Ripping Ripples":2,"Spicy Spirals":1,"Spiffy Splitters":2,"Spiky Spillers":3,Spinners:1,"Spinners HS":1,"Star Wars":1,"Star Wars family":1,"Straight Straddlers":1,"Swingy Swimmers":1,"Wacky Waves":3,"Wiggly Wings":3}},Mixed:{name:"Mixed",recommended:!0,ruleGroup:{"Asteroid Fields":1,"Bilious Billows":2,"Bloomerang Family":1,"Brian's Brain":1,"Brian's Brain family":2,"Brian's Brain (modified)":3,"Brian's Brain (regularised)":2,"Brian's Brain S0 family":1,"Beating Beacons":1,"Burning Islands":2,Burst:1,"Caterpillars+":1,"Clunky Clusters":1,"Corny Corners":1,"Cranky Crawlers":2,"Crummy Cruisers":1,Deltas:1,"Diabolic Diagonals":1,"Dorky Torque":1,"Erratic Eruptions":1,"Extravagant Extenders":2,"Fancy Fans":3,"Flaming Flaneries":1,"Fuming Fumblers":2,"Game of Life":1,"Generations high state count":3,"Generations low state count":3,"Generations unregularised":3,"Giant Galleons":2,"Gnarring Gnats":1,"Growing Gliders":2,"Hefty Hulls":1,"Languid Luggers":1,"Leggy Legends":2,"Life-like":1,Millipedes:2,"Oblique Oblivion":2,"Pace Parade":3,"Puffy Pulse":3,"Repeating Replicants":2,"Ripping Ripples":2,"Scowling Scorchers":1,"Short Extenders":1,"Shaky Ships":1,"Slow BB":1,"Slow Growth":1,"Slanted Slams":1,"Smooth Smokers":1,"Spicy Spirals":1,"Spiffy Splitters":2,"Spiky Spillers":3,Spinners:1,"Spinners HS":1,"Star Wars":1,"Star Wars family":1,"Star Wars S0":1,"Straight Straddlers":1,"Sudden Surges":1,"Swingy Swimmers":1,"Swirling Swizzlers":1,"Tacky Tadpoles":3,"Traipsing Trains":1,"Turning Turmoil":1,"Wacky Waves":3,"Wally Walls":1,"Weird Wedges":2,"Wiggly Wings":3,"Wobbling Wanderers":1}},"Classy Classics":{name:"Classy Classics",recommended:!0,deterministic:!0,ruleGroup:{"Brian's Brain":3,"Game of Life":1,"Star Wars":1}},"Asteroid Fields":{name:"Asteroid Fields",deterministic:!1,rules:{"B2[5678]/S0[5678]/I[2345678]/G4":1,"B2[5678]/S02[45678]/I1[345678]/G{3|4|5|6|7|8}":1}},"Beating Beacons":{name:"Beating Beacons",deterministic:!1,rules:{"B2456[8]/S347[8]/I345[678]/G{4|5|6|7|8|9|10|11|12|13|14}":1},randomnessConfig:D["Beating Beacons"]},"Bilious Billows":{name:"Bilious Billows",deterministic:!1,rules:{"B3|0:0.1.2.3.7/S5[34678]|0:0/I[345678]|0:0/G{15}/R0":1}},"Bloomerang Family":{name:"Bloomerang Family",deterministic:!1,rules:{"B34[5678]/S234[678]/I[12345678]/G{9|10|11|12|13|14|24}":1}},"Bouncy Boulders":{name:"Bouncy Boulders",hideInApp:!0,deterministic:!1,rules:{"B23[45678]|11:0/S3[5678]|13:0.1.2/I[345678]/G{6|7|8|9|10}/R5":1},randomnessConfig:D["Fancy Fans"]},"Brian's Brain":{name:"Brian's Brain",deterministic:!0,rules:{"B2/S/I/G3":1},randomnessConfig:D["Brian's brain"]},"Brian's Brain family":{name:"Brian's Brain family",recommended:!0,deterministic:!1,rules:{"B2[45678]/S[45678]/I[345678]/G{3|4}":1},randomnessConfig:D["Brian's brain family"]},"Brian's Brain (modified)":{name:"Brian's Brain (modified)",deterministic:!0,rules:{"B2/S/I345678/G3":1},randomnessConfig:D["Brian's brain (modified)"]},"Brian's Brain (regularised)":{name:"Brian's Brain (regularised)",deterministic:!0,rules:{"B2/S/I/G3/R50":1},randomnessConfig:D["Brian's brain (regularised)"]},"Brian's Brain S0 family":{name:"Brian's Brain S0 family",deterministic:!1,rules:{"B2[45678]/S0[45678]/I[345678]/G{4|5}":1},randomnessConfig:D["Brian's brain family"]},"Burning Islands":{name:"Burning Islands",deterministic:!1,rules:{"B23[45678]/S24567[8]/I1/G4/R50":1}},Burst:{name:"Burst",deterministic:!1,rules:{"B34[568]/S0235[678]/I[345678]/G5":1,"B34[568]/S235[678]/I[345678]/G5":1,"B34[568]/S0235[678]/I[345678]/G3/R200":1,"B34[568]/S235[678]/I[345678]/G3/R200":1,"B34[568]/S0235[678]/I[345678]/G4/R50":1,"B34[568]/S235[678]/I[345678]/G4/R50":1}},"Caterpillars+":{name:"Caterpillars+",deterministic:!0,rules:{"B378/S124567/I1345678/G3":1}},"Corny Corners":{name:"Corny Corners",deterministic:!1,rules:{"B23[45678]|5:0.1.2.4.5.6.7/S[345678]/I12[3456]|11:0/G{20|30|40|50|60|70}/R0":1}},"Clunky Clusters":{name:"Clunky Clusters",deterministic:!1,rules:{"B2[5678]/S23|2:0/I[23478]/G{4|5|6|7|8|9|10}/R{0|5}":1}},"Cranky Crawlers":{name:"Cranky Crawlers",deterministic:!1,rules:{"B2[45678]/S1[345678]|{0|1|2|3|4|5|6|7|8|9|10|11|12|13|14}:0/I1[2345678]/G{5|6|7|8|9|10|11|12|13|14|15}/R50":1,"B2[45678]/S1[345678]|{0|1|2|3|4|5|6|7|8|9|10|11|12|13|14}:1/I1[2345678]/G{5|6|7|8|9|10|11|12|13|14|15}/R50":1,"B2[45678]/S1[345678]|{0|1|2|3|4|5|6|7|8|9|10|11|12|13|14}:0/I1[2345678]/G{5|6|7|8|9|10|11|12|13|14|15}/R10":1,"B2[45678]/S1[345678]|{0|1|2|3|4|5|6|7|8|9|10|11|12|13|14}:1/I1[2345678]/G{5|6|7|8|9|10|11|12|13|14|15}/R10":1,"B2[45678]/S1[345678]|{0|1|2|3|4|5|6|7|8|9|10|11|12|13|14}:0/I1[2345678]/G{5|6|7|8|9|10|11|12|13|14|15}/R0":1,"B2[45678]/S1[345678]|{0|1|2|3|4|5|6|7|8|9|10|11|12|13|14}:1/I1[2345678]/G{5|6|7|8|9|10|11|12|13|14|15}/R0":1},randomnessConfig:D["Brian's brain waves"]},"Crummy Cruisers":{name:"Crummy Cruisers",deterministic:!1,rules:{"B245[678]/S346[78]/I123[45678]/G{4|5|6|7|8|9|10|11}":1},randomnessConfig:D["Crummy Cruisers"]},Deltas:{name:"Deltas",deterministic:!1,rules:{"B23[45678]/S1[345678]|{0|1|2|3|4|5|6|7|8|9|10|11|12|13|14}:0/I1[2345678]/G{5|6|7|8|9|10|11|12|13|14|15}/R100":1,"B23[45678]/S1[345678]|{0|1|2|3|4|5|6|7|8|9|10|11|12|13|14}:1/I1[2345678]/G{5|6|7|8|9|10|11|12|13|14|15}/R100":1}},"Diabolic Diagonals":{name:"Diabolic Diagonals",deterministic:!1,rules:{"B1|14:1/S/I[12]|{0|1|2|3|4|5|6|7|8|9|10|11|12|13|14}:0/G{3|4}/R{5|10|20}":1,"B1|14:1/S/I[12]|{0|1|2|3|4|5|6|7|8|9|10|11|12|13|14}:1/G{3|4}/R{5|10|20}":1,"B1|14:1/S/I[12]|{0|1|2|3|4|5|6|7|8|9|10|11|12|13|14}:2/G{3|4}/R{5|10|20}":1}},"Dorky Torque":{name:"Dorky Torque",deterministic:!1,rules:{"B34[5678]|0:0.1.2.3.7/S[345678]/I[2345678]/G{15|16|17|18|19|20}/R0":1}},"Erratic Eruptions":{name:"Erratic Eruptions",deterministic:!1,rules:{"B23[5678]/S34[678]/I1[2345678]|{3|4|5|6|7|8|9|10}:0/G{9|10|11|12|13|14}/R20":1}},"Extravagant Extenders":{name:"Extravagant Extenders",deterministic:!1,rules:{"B245[78]/S345[78]/I1[2345678]/G{5|6|7|8|9|10|11|12|13|14}/R20":1,"B246[78]/S345[78]/I1[2345678]/G{5|6|7|8|9|10|11|12|13|14}/R20":1},randomnessConfig:D["Extravagant Extenders"]},"Short Extenders":{name:"Short Extenders",deterministic:!1,rules:{"B24[78]/S345[78]/I12[345678]/G{5|6|7}/R100":1}},"Fancy Fans":{name:"Fancy Fans",recommended:!0,deterministic:!1,rules:{"B23[45678]|11:0/S3[5678]|13:0.1.2.3.4/I[345678]/G{6|7|8|9|10}/R0":1,"B23[45678]|11:0/S3[5678]|13:0.1.2.3/I[345678]/G{6|7|8|9|10}/R0":1,"B23[45678]|11:0/S3[5678]|13:0.1.2/I[345678]/G{6|7|8|9|10}/R0":1},randomnessConfig:D["Fancy Fans"]},"Flaming Flaneries":{name:"Flaming Flaneries",deterministic:!0,rules:{"B24/S34/I15678/G4":1},randomnessConfig:D["Flaming Flaneries"]},"Fuming Fumblers":{name:"Fuming Fumblers",deterministic:!1,rules:{"B3[5678]|0:0.1.3/S23|2:0.1.2/I[45678]|14:0/G{8|9|10|11|12|13|14|15}":1}},"Game of Life":{name:"Game of Life",recommended:!0,deterministic:!0,rules:{"B3/S23/I/G2":1},randomnessConfig:D["Game of Life"]},Generations:{name:"Generations",recommended:!0,deterministic:!1,ruleGroup:{"Generations high state count":1,"Generations low state count":1,"Generations unregularised":1}},"Generations high state count":{name:"Generations high state count",deterministic:!1,rules:{"B1[2345678]/S[12345678]|{0|1|2|3|4|5|6|7|8|9|10|11|12|13|14}:0/I[12345678]|{0|1|2|3|4|5|6|7|8|9|10|11|12|13|14}:0/G{25|30|35|40|45|50|55|60|65|70|75|80|90|100}/R30":1,"B2[345678]/S[12345678]|{0|1|2|3|4|5|6|7|8|9|10|11|12|13|14}:0/I[12345678]|{0|1|2|3|4|5|6|7|8|9|10|11|12|13|14}:0/G{25|30|35|40|45|50|55|60|65|70|75|80|90|100}/R10":1},randomnessConfig:D.Generations},"Generations unregularised":{name:"Generations unregularised",deterministic:!1,rules:{"B2[345678]/S[12345678]|{0|1|2|3|4|5|6|7|8|9|10|11|12|13|14}:0/I[12345678]|{0|1|2|3|4|5|6|7|8|9|10|11|12|13|14}:0/G{25|30|35|40|45|50|55|60|65|70|75|80|90|100}":1,"B1[2345678]|{0|1|2|3|4|5|6|7|8|9|10|11|12|13|14}:0/S[12345]|{0|1|2|3|4|5|6|7|8|9|10|11|12|13|14}:0/I[12345678]|{0|1|2|3|4|5|6|7|8|9|10|11|12|13|14}:0/G{25|30|35|40|45|50|55|60|65|70|75|80|90|100}":1},randomnessConfig:D.Generations},"Generations low state count":{name:"Generations low state count",deterministic:!1,rules:{"B1[2345678]|{0|1|2|3|4|5|6|7|8|9|10|11|12|13|14}:0/S[12345678]|{0|1|2|3|4|5|6|7|8|9|10|11|12|13|14}:0/I[12345678]|{0|1|2|3|4|5|6|7|8|9|10|11|12|13|14}:0/G{3|4|5|6|7|8|9|10|15|20|25}/R100":1,"B2[345678]/S[12345678]|{0|1|2|3|4|5|6|7|8|9|10|11|12|13|14}:0/I[12345678]|{0|1|2|3|4|5|6|7|8|9|10|11|12|13|14}:0/G{3|4|5|6|7|8|9|10|15|20|25}/R100":1},randomnessConfig:D.Generations},"Giant Galleons":{name:"Giant Galleons",deterministic:!1,rules:{"B234[5678]/S245[7]/I1[2345678]/G{10|11|12|13|14|15}":1,"B234[5678]/S245[6]/I1[2345678]/G{10|11|12|13|14|15}":1},randomnessConfig:D["Giant Galleons"]},"Gnarring Gnats":{name:"Gnarring Gnats",deterministic:!1,rules:{"B1[2]|14:0/S[12]|{0|1|2|3|4|5|6|7|8|9|10|11|12|13|14}:{0|1|2}/I[12]|{0|1|2|3|4|5|6|7|8|9|10|11|12|13|14}:{0|1|2}/G{3|4|5|6|7|8}/R20":1,"B1[2]|14:0.1/S[12]|{0|1|2|3|4|5|6|7|8|9|10|11|12|13|14}:{0|1|2}/I[12]|{0|1|2|3|4|5|6|7|8|9|10|11|12|13|14}:{0|1|2}/G{3|4|5|6|7|8}/R20":1}},"Growing Gliders":{name:"Growing Gliders",deterministic:!1,rules:{"B23[678]/S1[45678]|2:1/I12[345678]/G{5|6|7|8|9|10|11|12|13|14}/R0":1}},"Hefty Hulls":{name:"Hefty Hulls",deterministic:!1,rules:{"B2[5678]/S23|2:0.2.4.5/I23[45678]/G{8|9|10|11|12|13|14}/R0":1},randomnessConfig:D["Hefty Hulls"]},"Languid Luggers":{name:"Languid Luggers",deterministic:!1,rules:{"B2[345678]|0:3.5.10/S[2345678]|2:0.1.2.3.4/I[12345678]/G{25|30|35|40|45|50}/R0":1}},"Leggy Legends":{name:"Leggy Legends",deterministic:!1,rules:{"B23[5678]/S14[5678]/I1[2345678]/G{5|6|7|8|9|10}":1},randomnessConfig:D["Leggy Legends"]},"Life-like":{name:"Life-like",deterministic:!1,rules:{"B34[5678]/S235[678]/I[45678]/G5":1}},Millipedes:{name:"Millipedes",deterministic:!1,rules:{"B2[45678]/S13[45678]|{11|13}:1/I1[2345678]/G{25|30|35|40|45|50}/R{10|30|100}":2,"B2[45678]/S13[45678]|{1|2|3|4|5|6|7|8|9}:0/I1[2345678]/G{25|30|35|40|45|50}/R{10|30|100}":3,"B2[45678]/S13[45678]|{1|2|3|4|5|6|7|8|9}:1/I1[2345678]/G{25|30|35|40|45|50}/R{10|30|100}":3},randomnessConfig:D.Generations},"Oblique Oblivion":{name:"Oblique Oblivion",deterministic:!1,rules:{"B12|14:1/S[12]|{0|1|2|3|4|5|6|7|8|9|10|11|12|13|14}:0/I[12]|{0|1|2|3|4|5|6|7|8|9|10|11|12|13|14}:0/G{5|6|7|8|9|10|11|12|13|14|15}/R{0|5}":1,"B12|14:1/S[12]|{0|1|2|3|4|5|6|7|8|9|10|11|12|13|14}:0/I[12]|{0|1|2|3|4|5|6|7|8|9|10|11|12|13|14}:1/G{5|6|7|8|9|10|11|12|13|14|15}/R{0|5}":1,"B12|14:1/S[12]|{0|1|2|3|4|5|6|7|8|9|10|11|12|13|14}:0/I[12]|{0|1|2|3|4|5|6|7|8|9|10|11|12|13|14}:2/G{5|6|7|8|9|10|11|12|13|14|15}/R{0|5}":1,"B12|14:1/S[12]|{0|1|2|3|4|5|6|7|8|9|10|11|12|13|14}:1/I[12]|{0|1|2|3|4|5|6|7|8|9|10|11|12|13|14}:0/G{5|6|7|8|9|10|11|12|13|14|15}/R{0|5}":1,"B12|14:1/S[12]|{0|1|2|3|4|5|6|7|8|9|10|11|12|13|14}:1/I[12]|{0|1|2|3|4|5|6|7|8|9|10|11|12|13|14}:1/G{5|6|7|8|9|10|11|12|13|14|15}/R{0|5}":1,"B12|14:1/S[12]|{0|1|2|3|4|5|6|7|8|9|10|11|12|13|14}:1/I[12]|{0|1|2|3|4|5|6|7|8|9|10|11|12|13|14}:2/G{5|6|7|8|9|10|11|12|13|14|15}/R{0|5}":1,"B12|14:1/S[12]|{0|1|2|3|4|5|6|7|8|9|10|11|12|13|14}:2/I[12]|{0|1|2|3|4|5|6|7|8|9|10|11|12|13|14}:0/G{5|6|7|8|9|10|11|12|13|14|15}/R{0|5}":1,"B12|14:1/S[12]|{0|1|2|3|4|5|6|7|8|9|10|11|12|13|14}:2/I[12]|{0|1|2|3|4|5|6|7|8|9|10|11|12|13|14}:1/G{5|6|7|8|9|10|11|12|13|14|15}/R{0|5}":1,"B12|14:1/S[12]|{0|1|2|3|4|5|6|7|8|9|10|11|12|13|14}:2/I[12]|{0|1|2|3|4|5|6|7|8|9|10|11|12|13|14}:2/G{5|6|7|8|9|10|11|12|13|14|15}/R{0|5}":1}},"Pace Parade":{name:"Pace Parade",recommended:!0,deterministic:!1,rules:{"B35[678]|0:0.1.2.4.7/S[5678]|0:0/I[2345678]|0:0/G{14|15|16|17|18|19|20}/R0":1},randomnessConfig:D["Pace Parade"]},"Puffy Pulse":{name:"Puffy Pulse",recommended:!0,deterministic:!1,rules:{"B12[5678]/S12[5678]/I[12345678]/G{6|7|8|9|10}/R{20|30|50|75|100}":1,"B13[5678]/S12[5678]/I[12345678]/G{6|7|8|9|10}/R{20|30|50|75|100}":1,"B14[5678]/S12[5678]/I[12345678]/G{6|7|8|9|10}/R{20|30|50|75|100}":1,"B1[5678]/S12[5678]/I[12345678]/G{6|7|8|9|10}/R{20|30|50|75|100}":1,"B12[5678]/S13[5678]/I[12345678]/G{6|7|8|9|10}/R{20|30|50|75|100}":1,"B13[5678]/S13[5678]/I[12345678]/G{6|7|8|9|10}/R{20|30|50|75|100}":1,"B14[5678]/S13[5678]/I[12345678]/G{6|7|8|9|10}/R{20|30|50|75|100}":1,"B1[5678]/S13[5678]/I[12345678]/G{6|7|8|9|10}/R{20|30|50|75|100}":1,"B12[5678]/S14[5678]/I[12345678]/G{6|7|8|9|10}/R{20|30|50|75|100}":1,"B13[5678]/S14[5678]/I[12345678]/G{6|7|8|9|10}/R{20|30|50|75|100}":1,"B14[5678]/S14[5678]/I[12345678]/G{6|7|8|9|10}/R{20|30|50|75|100}":1,"B1[5678]/S14[5678]/I[12345678]/G{6|7|8|9|10}/R{20|30|50|75|100}":1,"B12[5678]/S23[5678]/I[12345678]/G{6|7|8|9|10}/R{20|30|50|75|100}":1,"B13[5678]/S23[5678]/I[12345678]/G{6|7|8|9|10}/R{20|30|50|75|100}":1,"B14[5678]/S23[5678]/I[12345678]/G{6|7|8|9|10}/R{20|30|50|75|100}":1,"B1[5678]/S23[5678]/I[12345678]/G{6|7|8|9|10}/R{20|30|50|75|100}":1,"B12[5678]/S24[5678]/I[12345678]/G{6|7|8|9|10}/R{20|30|50|75|100}":1,"B13[5678]/S24[5678]/I[12345678]/G{6|7|8|9|10}/R{20|30|50|75|100}":1,"B14[5678]/S24[5678]/I[12345678]/G{6|7|8|9|10}/R{20|30|50|75|100}":1,"B1[5678]/S24[5678]/I[12345678]/G{6|7|8|9|10}/R{20|30|50|75|100}":1,"B12[5678]/S34[5678]/I[12345678]/G{6|7|8|9|10}/R{20|30|50|75|100}":1,"B13[5678]/S34[5678]/I[12345678]/G{6|7|8|9|10}/R{20|30|50|75|100}":1,"B14[5678]/S34[5678]/I[12345678]/G{6|7|8|9|10}/R{20|30|50|75|100}":1,"B1[5678]/S34[5678]/I[12345678]/G{6|7|8|9|10}/R{20|30|50|75|100}":1,"B12[5678]/S1[5678]/I[12345678]/G{6|7|8|9|10}/R{20|30|50|75|100}":1,"B13[5678]/S1[5678]/I[12345678]/G{6|7|8|9|10}/R{20|30|50|75|100}":1,"B14[5678]/S1[5678]/I[12345678]/G{6|7|8|9|10}/R{20|30|50|75|100}":1,"B1[5678]/S1[5678]/I[12345678]/G{6|7|8|9|10}/R{20|30|50|75|100}":1,"B12[5678]/S2[5678]/I[12345678]/G{6|7|8|9|10}/R{20|30|50|75|100}":1,"B13[5678]/S2[5678]/I[12345678]/G{6|7|8|9|10}/R{20|30|50|75|100}":1,"B14[5678]/S2[5678]/I[12345678]/G{6|7|8|9|10}/R{20|30|50|75|100}":1,"B1[5678]/S2[5678]/I[12345678]/G{6|7|8|9|10}/R{20|30|50|75|100}":1,"B12[5678]/S3[5678]/I[12345678]/G{6|7|8|9|10}/R{20|30|50|75|100}":1,"B13[5678]/S3[5678]/I[12345678]/G{6|7|8|9|10}/R{20|30|50|75|100}":1,"B14[5678]/S3[5678]/I[12345678]/G{6|7|8|9|10}/R{20|30|50|75|100}":1,"B1[5678]/S3[5678]/I[12345678]/G{6|7|8|9|10}/R{20|30|50|75|100}":1,"B12[5678]/S4[5678]/I[12345678]/G{6|7|8|9|10}/R{20|30|50|75|100}":1,"B13[5678]/S4[5678]/I[12345678]/G{6|7|8|9|10}/R{20|30|50|75|100}":1,"B14[5678]/S4[5678]/I[12345678]/G{6|7|8|9|10}/R{20|30|50|75|100}":1,"B1[5678]/S4[5678]/I[12345678]/G{6|7|8|9|10}/R{20|30|50|75|100}":1}},"Repeating Replicants":{name:"Repeating Replicants",recommended:!0,deterministic:!1,rules:{"B24[5678]/S24|2:0.3.5/I[2345678]/G{5|6|7|8|9|10}/R{0|5}":1},randomnessConfig:D["Repeating Replicants"]},"Ripping Ripples":{name:"Ripping Ripples",deterministic:!1,rules:{"B26[5678]/S24|2:0.2.4.5/I[23478]/G{6|7|8|9|10|11|12|13|14}/R{0|5}":1}},"Scowling Scorchers":{name:"Scowling Scorchers",deterministic:!1,rules:{"B2[678]|0:3.5.6/S[235678]|0:0.1.2/I[12345678]|0:0/G{20|21|22|23|24|25|26|27|28|29|30}":1}},"Shaky Ships":{name:"Shaky Ships",deterministic:!1,rules:{"B12|14:0/S/I1|{0|2|11}:1/G{5|6|7|8|9|10|11|12|13|14|15}/R{0|5}":1}},"Slanted Slams":{name:"Slanted Slams",deterministic:!1,rules:{"B1|14:1.3/S[345678]/I[123]|12:1.2.3.4.5/G{9|10|11|12|13|14}/R0":1}},"Slow BB":{name:"Slow BB",deterministic:!1,rules:{"B2[45678]|1:0/S3[45678]|1:0/I[12345678]|1:0/G{5|6|7|8|9|10|11|12|13|14}":3}},"Slow Growth":{name:"Slow Growth",deterministic:!1,rules:{"B34[5678]/S234[678]/I2[45678]/G{10|11|12|13|14|15|16|17|18|19|20}":1}},"Smooth Smokers":{name:"Smooth Smokers",deterministic:!1,rules:{"B2[45678]|0:0.3/S2[3]|5:2.3.5.7/I1[345]|6:0.1.2.3.4.5.6.7/G{9|10|11|12|13|14|15}/R0":1}},"Spicy Spirals":{name:"Spicy Spirals",recommended:!0,deterministic:!1,rules:{"B2456/S34678/I3[245678]/G8/R0":1},randomnessConfig:D["Spicy Spirals"]},"Spiffy Splitters":{name:"Spiffy Splitters",deterministic:!1,rules:{"B2[45678]/S3[456]|2:0.1.2/I[45678]/G{5|6|7|8|9|10|11|12|13|14}/R0":1,"B2[5678]/S2[4]|2:0.3.5/I2[345678]/G{6|7|8|9|10|11|12|13|14|15}/R0":1}},"Spiky Spillers":{name:"Spiky Spillers",recommended:!0,deterministic:!1,rules:{"B23[45678]/S3[5678]/I[45678]|{0|1|2|3|4|5|6|7|8|9|10|11|12|13|14}:0/G{5|6|7|8|9|10|11|12}":8},randomnessConfig:D["Spiky Spillers"]},Spinners:{name:"Spinners",deterministic:!1,rules:{"B2[45678]/S2[345678]|{3|4|5|6|7|8|9|10}:1/I[2345678]/G{4|5|6|7|8|9|10|11|12|13|14}/R200":1}},"Spinners HS":{name:"Spinners HS",deterministic:!1,rules:{"B2[45678]/S2[345678]|{3|4|5|6|7|8|9|10}:1/I[2345678]/G{25|30|35|40|45|50|55|60|65|70|75}/R200":1}},"Star Wars":{name:"Star Wars",deterministic:!0,rules:{"B2/S345/I/G4":1},randomnessConfig:D["Star Wars"]},"Star Wars family":{name:"Star Wars family",recommended:!0,deterministic:!1,rules:{"B2[5678]/S345[78]/I[12345678]/G{3|4}":6,"B2[5678]/S345[678]/I[12345678]/G{5|6|7|8|9|10}":1,"B2[5678]/S345[78]/I[12345678]/G{3|4}/R{10|20}":12,"B2[5678]/S345[678]/I[12345678]/G{5|6|7|8|9|10}/R{10|20}":2},randomnessConfig:D["Star Wars"]},"Star Wars S0":{name:"Star Wars S0",deterministic:!1,rules:{"B2[5678]/S0345[678]/I[12345678]/G{7|8}":8},randomnessConfig:D["Star Wars"]},"Straight Straddlers":{name:"Straight Straddlers",deterministic:!1,rules:{"B2[5678]/S2[45678]/I1[345678]/G{3|4|5|6|7|8}/R0":1}},"Sudden Surges":{name:"Sudden Surges",deterministic:!1,rules:{"B23[5678]/S34[678]/I1[2345678]|{0|1|2|11|12|13|14}:0/G{9|10|11|12|13|14}/R20":1}},"Swingy Swimmers":{name:"Swingy Swimmers",deterministic:!1,rules:{"B2[45678]/S2[345678]|{3|4|5|6|7|8|9|10}:1/I1[345678]/G{4|5|6|7|8|9|10|11|12|13|14}":1}},"Swirling Swizzlers":{name:"Swirling Swizzlers",deterministic:!1,rules:{"B3[5678]|0:0.1.2.3.6/S[5678]|0:0/I[2345678]|0:0/G{14|15|16|17|18|19|20}/S{50|100}":1}},"Tacky Tadpoles":{name:"Tacky Tadpoles",recommended:!0,deterministic:!1,rules:{"B24[678]/S346[8]/I3[45678]/G{5|6|7|8|9|10|11}":1},randomnessConfig:D["Tacky Tadpoles"]},"Traipsing Trains":{name:"Traipsing Trains",deterministic:!1,rules:{"B14|1:0/S[34]|1:0/I1[345678]/G{12|13|14|15|16|17|18|19|20}":1}},"Trivial Rule":{name:"Trivial Rule",deterministic:!0,rules:{"B/S/I/G1":1}},"Turning Turmoil":{name:"Turning Turmoil",deterministic:!1,rules:{"B3|0:0.1.2.3.6/S[5678]|0:0/I[2345678]|0:0/G{14|15|16|17|18|19|20}/R0":1}},"Wacky Waves":{name:"Wacky Waves",deterministic:!1,rules:{"B2[5678]/S34|2:0.2.4.5/I4[278]/G{8|9|10}/R{0|5}":1}},"Wally Walls":{name:"Wally Walls",deterministic:!1,rules:{"B2[5678]/S34567/I1[345678]/G{5|6|7|8|9|10|11|12|13|14}":5}},"Weird Wedges":{name:"Weird Wedges",deterministic:!1,rules:{"B2[456]|11:0.2.4/S23[56]|13:0/I[45678]|0:0/G{10|11|12|13|14|15}":1}},"Wiggly Wings":{name:"Wiggly Wings",recommended:!0,rules:{"B24[5678]/S3467[8]/I3[45678]/G{4|5|6|7|8|9|10|11}":1,"B245[678]/S346[78]/I3[45678]/G{4|5|6|7|8|9|10|11}":1},randomnessConfig:D["Wiggly Wings"]},"Wobbling Wanderers":{name:"Wobbling Wanderers",deterministic:!1,rules:{"B2[45678]|5:0.2.3/S3[45678]|11:0.3/I[2345678]/G{6|7|8|9|10|11|12|13|14|15}/R0":1}},"BB (outernet)":{name:"BB (outernet)",hideInApp:!0,deterministic:!0,rules:{"B2/S/I345678/G3":1},randomnessConfig:D["Brian's brain outernet 2"]},"BB (outernetb)":{name:"BB (outernetb)",hideInApp:!0,deterministic:!0,rules:{"B2/S/I345678/G3":1},randomnessConfig:D["Brian's brain outernet b"]},"BB (outernetc)":{name:"BB (outernetc)",hideInApp:!0,deterministic:!0,rules:{"B2/S/I345678/G3":1},randomnessConfig:D["Brian's brain outernet c"]},"Safe mixed generations":{name:"Safe mixed generations",hideInApp:!0,rules:{"N0/B2/S/I345678/G3":20,"N0/B2/S/I/G3":4,"N0/B2/S345/I/G4":5,"N0/B2/S245678/I1/G4":5,"N0/B24/S34/I15678/G4":5,"N0/B3/S23/I/G2":8,"N0/B2[45678]/S[45678]/I[345678]/G{3|4}":12,"N0/B2[5678]/S345[78]/I[12345678]/G{3|4}":6,"N0/B27/S345/I12357/G5":4,"N0/B2[5678]/S2[45678]/I1[345678]/G{3|4|5|6|7|8}":12,"N0/B24[678]/S34[678]/I[12345678]/G{3|4|5|6|7|8|9|10|11|12|13|14}":15,"N0/B34[5678]/S235[678]/I[45678]/G5":15,"N0/B24568/S34678/I34678/G7":5,"N0/B24568/S34678/I3[45678]/G{4|5|6|7|8|9|10|11}":15,"N0/B245[678]/S34[678]/I[12345678]/G{5|6|7|8}":15}},"Mixed generations":{name:"Mixed generations",hideInApp:!0,rules:{"N0/B2/S/I345678/G3":20,"N0/B2/S/I/G3":4,"N0/B2/S345/I/G4":5,"N0/B2/S245678/I1/G4":5,"N0/B24/S34/I15678/G4":5,"N0/B3/S23/I/G2":8,"N0/B2[45678]/S[45678]/I[345678]/G{3|4}":12,"N0/B2[5678]/S345[678]/I[12345678]/G{5|6|7|8|9|10}":9,"N0/B2[5678]/S345[78]/I[12345678]/G{3|4}":6,"N0/B2[5678]/S2[45678]/I1[345678]/G{3|4|5|6|7|8}":12,"N0/B24[678]/S34[678]/I[12345678]/G{3|4|5|6|7|8|9|10|11|12|13|14}":15,"N0/B34[5678]/S235[678]/I[45678]/G5":15,"N0/B23[5678]/S14[5678]/I1[2345678]/G{5|6|7|8|9|10}":10,"N0/B34[5678]/S234[678]/I2[45678]/G{10|11|12|13|14|15|16|17|18|19|20}":12,"N0/B34[5678]/S234[678]/I[12345678]/G{9|10|11|12|13|14|24}":12,"N0/B24[5678]/S345[678]/I[12345678]/G{11|12|13|14}":8,"N0/B34[568]/S0235[678]/I[345678]/G5":8,"N0/B34[568]/S235[678]/I[345678]/G5":8,"N0/B378/S124567/I1345678/G3":5,"N0/B2[5678]/S0[5678]/I[2345678]/G4":8,"N0/B2[5678]/S02[45678]/I1[345678]/G5":8,"N0/B2[45678]/S0[45678]/I[345678]/G{4|5}":8,"N0/B2[5678]/S0345[678]/I[12345678]/G{7|8}":8,"N0/B27/S345/I12357/G5":2,"N0/B245[678]/S34[678]/I[12345678]/G{5|6|7|8}":15,"N{0|1|2|3|4|5|6|7|8|9|10|11|12|13|14}:{0|1}|0:{0|1}|0:0/B2[45678]/S2[45678]/I1[345678]/G{9|10|11|12|13|14}":6,"N0/B23/S34[678]/I1[2345678]/G{6|7|8|9|10|11|12|13}":3,"N0/B234[5678]/S2[45678]/I1[5678]/G{6|7|8|9|10|11|12|13|14}":12,"N0/B234[5678]/S3[45678]/I1[5678]/G{6|7|8|9|10|11|12|13|14}":8,"N0/B234[5678]/S[45678]/I1[5678]/G{6|7|8|9|10|11|12|13|14}":8,"N0/B234578/S37/I/G11":1,"N0/B23[45678]/S3[5678]/I[45678]/G{5|6|7|8|9|10|11|12}":8,"N0/B2368/S358/I/G5":1,"N0/B24[5678]/S3[45678]/I[5678]/G{5|6|7|8|9|10|11|12|13|14}":5,"N0/B24568/S3478/I34578/G{5|6|7}":3,"N0/B24568/S34578/I34578/G{9|12|14|14}":4,"N0/B24568/S34678/I34678/G7":5,"N0/B24568/S34678/I3[45678]/G{4|5|6|7|8|9|10|11}":15,"N0/B245[678]/S346[78]/I123[45678]/G{4|5|6|7|8|9|10|11}":8,"N0/B25[678]/S3[45678]/I[5678]/G{5|6|7|8|9|10|11|12|13|14}":12,"N0/B25/S345/I/G4":1,"N0/B25/S345/I/G5":1,"N0:0/B2[5678]/S34567/I1[345678]/G{5|6|7|8|9|10|11|12|13|14}":5,"N0/B2[5678]/S34[5678]/I[5678]/G{5|6}":15,"N0/B25678/S2478/I345678/G12":1,"N0/B2568/S345678/I345678/G8":1,"N0/B2568/S345678/I345678/G10":1,"N0/B2568/S345678/I345678/G12":1,"N0/B2568/S34578/I34578/G4":1,"N0/B2568/S34578/I34578/G5":1,"N0/B2568/S34578/I34578/G6":1,"N0/B2568/S34578/I34578/G7":1,"N0/B2568/S34578/I34578/G8":1,"N{0|1|2|3|4|5|6|7|8|9|10|11|12|13|14}:{0|1}|0:0|0:0/B2[45678]/S1[345678]/I1[2345678]/G{5|6|7|8|9|10|11|12|13|14|15}":15,"N{0|1|2|3|4|5|6|7|8|9|10|11|12|13|14}:{0|1}|0:0|0:0/B23[45678]/S1[345678]/I1[2345678]/G{5|6|7|8|9|10|11|12|13|14|15}":6,"N1/B2[45678]/S3[45678]/I[12345678]/G{5|6|7|8|9|10|11|12|13|14}":3,"N1/B23[45678]/S1[2345678]/I[12345678]/G{5|6|7|8|9|10|11|12|13|14}":3,"N5|1|18/B2[345678]/S1[345678]/I[345678]/G{7|7|7|8|8|8|11|12|13|14|15}":8,"N11:1|0:0|0:0/B245/S1/I12357/G6":3,"N0/B2[345678]/S[2345678]/I[12345678]/G{3|4|5|6|7|8|9|10|11|12|13|14}/R":20,"N0/B[12345678]/S[012345678]/I[12345678]/G{3|4|5|6|7|8|9|10|11|12|13|14}/R":10,"N0/B{12|13|14|1}[5678]/S{12|13|14|23|24|34|1|2|3|4}[5678]/I[12345678]/G{6|7|8|9|10}/R{50|75|100}":20,"N0/B1[2345678]/S[12345678]/I[12345678]/G{25|50|75|100}":12,"N0/B1/S[5678]/I[2345678]/G{25|50|75|100}":12,"N{0|1|2|3|4|5|6|7|8|9|10|11|12|13|14}:0|{0|1|2|3|4|5|6|7|8|9|10|11|12|13|14}:0|{0|1|2|3|4|5|6|7|8|9|10|11|12|13|14}:0/B1[2345678]/S[12345678]/I[12345678]/G{25|50|75|100}":20,"N45|0|33/B2/S/I34/G7":1,"N58|0|16/B24568/S/I1/G{5|6|7|8}":3,"N66|0|67/B2/S23/I23/G6":3,"N66|0|0/B2/S1/I1/G6":2,"N67|0|0/B2/S1/I1/G6":2}}},H=(Object.keys(L).filter((e=>L[e].recommended)),Object.keys(L).filter((e=>!L[e].hasOwnProperty("hideInApp")||!L[e].hideInApp)),{});for(const e in L){if(H[e]={},!L[e].hasOwnProperty("randomnessConfig")||null==L[e].randomnessConfig)continue;const t=L[e].randomnessConfig.seedingConfig;for(const n in t)H[e][n]={name:n,background:"Vaccuum",seed:t[n]}}class q{colorUnit;ruleChain;updateRule;nStatesRule;nStatesStyle;nStatesAll;setRuleChain(){throw new Error("Must override method")}setUpdateRule(){this.nStatesAll=this.nStatesRule*this.nStatesStyle,null==this.ruleChain[1]?this.updateRule=function(e,t,n,i,r,a){return(t=this.ruleChain[0].updateRule(e%this.nStatesRule,t,n,i,r))%this.nStatesRule}:this.updateRule=function(e,t,n,i,r,a){return t=this.ruleChain[0].updateRule(e%this.nStatesRule,t,n,i,r),(t+=0==a?this.nStatesRule*this.ruleChain[1].updateRule(Math.floor(e/this.nStatesRule)%this.nStatesStyle,t,n,i):this.nStatesRule*this.ruleChain[2].updateRule(Math.floor(e/this.nStatesRule)%this.nStatesStyle,t,n,i))%this.nStatesAll}}setBaseRule(){throw new Error("Must override method")}setStyleRule(){throw new Error("Must override method")}getName(){return this.ruleChain.map((e=>e?.getName())).join("-")}}class V extends q{constructor(e){super(),this.ruleConfig=e.config.ruleConfig,this.styleConfig=e.config.styleConfig,console.log("First style: ",this.styleConfig.name),this.styleConfig2=e.config.styleConfig2,console.log("Second style: ",this.styleConfig.name),this.randomnessConfig=e.config.randomnessConfig,this.currentGenerationsRule=null,this.setRuleChain(e),this.setUpdateRule()}setRuleChain(e){this.ruleChain=[null,null,null],this.setBaseRule(e),this.setStyleRule(e),this.setStyleRule(e,!0)}sanitiseRule(e){return e.includes("R")||(e+="/R0"),["Random","andom"].includes(e)&&(e=null),e}setBaseRule(e){if(this.ruleConfig=e.config.ruleConfig,"ruleGroup"in this.ruleConfig){var t=r(this.ruleConfig.ruleGroup)();this.ruleConfig.sampledRuleFamily=t,this.ruleConfig.rules=e.ruleConfigs[t].rules,this.ruleConfig.randomnessConfig=e.ruleConfigs[t].randomnessConfig,M(e,"Rul | Sampled the rule "+t+" from the rule group "+this.ruleConfig.name+".")}else this.ruleConfig=e.config.ruleConfig;let n=r(this.ruleConfig.rules)();var i=N;this.sanitiseRule(n),this.ruleConfig.sampledRuleTemplate=n,null==this.ruleConfig.activityLevelForRuleWindowSize&&(this.ruleConfig.activityLevelForRuleWindowSize=parseInt(r(E)(),10)),this.ruleChain[0]=new i(e,n),"No style"==this.styleConfig.name?this.colorUnit=1:this.colorUnit=this.ruleChain[0].nStates,this.nStatesRule=this.ruleChain[0].nStates}setStyleRule(e,t=!1){let n,i;if(t?(this.styleConfig2=e.config.styleConfig2,n=this.styleConfig2,null==n&&(n=this.styleConfig),i=2):(this.styleConfig=e.config.styleConfig,n=this.styleConfig,i=1),0===Object.keys(n).length||"No style"==n.name)return this.ruleChain[i]=null,this.colorUnit=1,this.nStatesAll=this.nStatesRule,void(this.nStatesStyle=1);if(n.style)return this.ruleChain[i]=T.ruleFromNames(this.styleConfig.style,this.nStatesRule),this.colorUnit=this.nStatesRule,void(1==i&&(this.nStatesStyle=this.ruleChain[1].nStates));var a=n.conditionLevels,o=r(a.reduce(((e,t,n)=>(e[n]=t.weight,e)),{}))();n.chosenConditionLevels=a[o].probabilities,this.ruleChain[i]=T.sampleRule(e,n,this.nStatesRule,!t),this.colorUnit=this.nStatesRule,1==i&&(this.nStatesStyle=this.ruleChain[1].nStates)}updateGlobalDataWithConfig(e){}}const z={"GR blue":{name:"GR blue",hideInApp:!0,r:13,g:112,b:255},"GR grey":{name:"GR grey",hideInApp:!0,r:240,g:239,b:239},Black:{name:"Black",referenceColorOk:!0,r:0,g:0,b:0},"GR yellow":{name:"GR yellow",hideInApp:!0,r:247,g:255,b:28},White:{name:"White",referenceColorOk:!0,r:255,g:255,b:255},Grey:{name:"Grey",referenceColorOk:!0,r:127,g:127,b:127},Whitish:{name:"Whitish",hideInApp:!0,r:240,g:240,b:240},redBlue1:{name:"redBlue1",hideInApp:!0,r:221,g:12,b:12},redBlue2:{name:"redBlue2",hideInApp:!0,r:29,g:29,b:189},turquoiseRed1:{name:"turquoiseRed1",hideInApp:!0,r:39,g:192,b:177},turquoiseRed2:{name:"turquoiseRed2",hideInApp:!0,r:252,g:53,b:47},magentaCyan1:{name:"magentaCyan1",hideInApp:!0,r:156,g:36,b:150},magentaCyan2:{name:"magentaCyan2",hideInApp:!0,r:114,g:223,b:174},transparent:{name:"transparent",hideInApp:!0,r:0,g:0,b:0,t:0},Red:{name:"Red",referenceColorOk:!0,r:255,g:0,b:0},Orange:{name:"Orange",referenceColorOk:!0,r:255,g:127,b:0},Yellow:{name:"Yellow",referenceColorOk:!0,r:255,g:255,b:0},Chartreuse:{name:"Chartreuse",referenceColorOk:!0,r:127,g:255,b:0},Green:{name:"Green",referenceColorOk:!0,r:0,g:255,b:0},"Spring green":{name:"Spring green",referenceColorOk:!0,r:0,g:255,b:127},Cyan:{name:"Cyan",referenceColorOk:!0,r:0,g:255,b:255},Azure:{name:"Azure",referenceColorOk:!0,r:0,g:127,b:255},Blue:{name:"Blue",referenceColorOk:!0,r:0,g:0,b:255},Violet:{name:"Violet",referenceColorOk:!0,r:127,g:0,b:255},Majenta:{name:"Majenta",referenceColorOk:!0,r:255,g:0,b:255},Rose:{name:"Rose",referenceColorOk:!0,r:255,g:0,b:127},"Dark Sepia":{name:"Dark Sepia",referenceColorOk:!0,r:26,g:24,b:21},"Dark Yellow":{name:"Dark Yellow",referenceColorOk:!0,r:220,g:190,b:0},"CGA dark grey":{name:"CGA dark grey",referenceColorOk:!0,r:85,g:85,b:85},"CGA blue":{name:"CGA blue",referenceColorOk:!0,r:0,g:0,b:170},"CGA light blue":{name:"CGA light blue",referenceColorOk:!0,r:85,g:85,b:255},"CGA green":{name:"CGA green",referenceColorOk:!0,r:0,g:170,b:0},"CGA light green":{name:"CGA light green",referenceColorOk:!0,r:85,g:255,b:85},"CGA cyan":{name:"CGA cyan",referenceColorOk:!0,r:0,g:170,b:170},"CGA light cyan":{name:"CGA light cyan",referenceColorOk:!0,r:85,g:255,b:255},"CGA red":{name:"CGA red",referenceColorOk:!0,r:170,g:0,b:0},"CGA light red":{name:"CGA light red",referenceColorOk:!0,r:255,g:85,b:85},"CGA magenta":{name:"CGA magenta",referenceColorOk:!0,r:170,g:0,b:170},"CGA light magenta":{name:"CGA light magenta",referenceColorOk:!0,r:255,g:85,b:255},"CGA brown":{name:"CGA brown",referenceColorOk:!0,r:170,g:85,b:0},"CGA yellow":{name:"CGA yellow",referenceColorOk:!0,r:255,g:255,b:85},"CGA grey":{name:"CGA grey",referenceColorOk:!0,r:170,g:170,b:170},refFullSatMidInt:{name:"refFullSatMidInt",hideInApp:!0,r:255,g:127,b:0},refNoSatMidInt:{name:"refFullSatMidInt",hideInApp:!0,r:127,g:127,b:127},"Light saturated":{name:"Light saturated",hideInApp:!0,r:255,g:250,b:250},"Basic color":{name:"Basic color",recommended:!0,sampler:["Black","White","Red","Green","Blue","Yellow","Majenta","Cyan"]},"Secondary color":{name:"Secondary color",recommended:!0,sampler:["Black","White","Red","Orange","Yellow","Chartreuse","Green","Spring green","Cyan","Azure","Blue","Violet","Majenta","Rose"]},"CGA color":{name:"CGA color",sampler:["Black","CGA dark grey","CGA blue","CGA light blue","CGA green","CGA light green","CGA cyan","CGA light cyan","CGA red","CGA light red","CGA magenta","CGA light magenta","CGA brown","CGA yellow","CGA grey","White"]},"Brightness oscillator":{name:"Rainbow color",recommended:!0,sampler:"Random",sampleDrift:"Sine brightness",sampleRedPerturbationStrength:"Random",sampleGreenPerturbationStrength:"Random",sampleBluePerturbationStrength:"Random",sampleBrightnessPerturbationStrength:"Random",referenceColorName:"Grey",brightnessRange:1,saturationConstraintType:"Attractive",saturationRange:.05,hueRange:1},"Rainbow color":{name:"Rainbow color",recommended:!0,sampler:"Random",sampleDrift:"Linear hue",sampleRedPerturbationStrength:"Random",sampleGreenPerturbationStrength:"Random",sampleBluePerturbationStrength:"Random",sampleBrightnessPerturbationStrength:"Random",referenceColorName:"Red",brightnessConstraintType:"Attractive",brightnessRange:.05,saturationConstraintType:"Attractive",saturationRange:.05,hueRange:1},"Random color":{name:"Random color",recommended:!0,sampler:"Random",sampleDrift:"Random",sampleRedPerturbationStrength:"Random",sampleGreenPerturbationStrength:"Random",sampleBluePerturbationStrength:"Random",sampleBrightnessPerturbationStrength:"Random"},"Random grey":{name:"Random grey",recommended:!0,sampler:"Random",sampleDrift:"Random",sampleRedPerturbationStrength:"Random",sampleGreenPerturbationStrength:"Random",sampleBluePerturbationStrength:"Random",sampleBrightnessPerturbationStrength:"Random",referenceColorName:"Grey",brightnessRange:1,saturationConstraintType:"Attractive",saturationRange:.01,hueRange:1},"Saturated color":{name:"Saturated color",recommended:!0,sampler:"Random",sampleDrift:"Random",drift:10,sampleRedPerturbationStrength:"Random",sampleGreenPerturbationStrength:"Random",sampleBluePerturbationStrength:"Random",sampleBrightnessPerturbationStrength:"Random",referenceColorName:"Orange",brightnessConstraintType:"Attractive",brightnessRange:.05,saturationConstraintType:"Attractive",saturationRange:.05,hueRange:1},"Textured black":{name:"Textured black",r:0,g:0,b:0,recommended:!0,sampleRedPerturbationStrength:"Random",sampleGreenPerturbationStrength:"Random",sampleBluePerturbationStrength:"Random",sampleBrightnessPerturbationStrength:"Random"},"Textured white":{name:"Textured white",r:255,g:255,b:255,recommended:!0,sampleRedPerturbationStrength:"Random",sampleGreenPerturbationStrength:"Random",sampleBluePerturbationStrength:"Random",sampleBrightnessPerturbationStrength:"Random"},Grisaille:{name:"Grisaille",sampler:"Random",sampleDrift:"Random",sampleBrightnessPerturbationStrength:"Random",referenceColorName:"Dark Sepia",brightnessRange:2,saturationRange:.1,hueRange:.1},Nacre:{name:"Nacre",sampler:"Random",sampleDrift:"Random",sampleBrightnessPerturbationStrength:"Random",referenceColorName:"Light saturated",brightnessRange:.05,saturationRange:.1,hueRange:1},"Hue constrained color":{name:"Hue constrained color",sampler:"Random",sampleDrift:"Random",sampleRedPerturbationStrength:"Random",sampleGreenPerturbationStrength:"Random",sampleBluePerturbationStrength:"Random",sampleBrightnessPerturbationStrength:"Random",brightnessRange:1,saturationRange:1,hueRange:.1},"Hue and saturation constrained color":{name:"Hue and saturation constrained color",sampler:"Random",sampleDrift:"Random",sampleBrightnessPerturbationStrength:"Random",brightnessRange:2,saturationRange:.1,hueRange:.03},"Repulsive brightness color":{name:"Repulsive brightness color",sampler:"Random",sampleDrift:"Random",sampleRedPerturbationStrength:"Random",sampleGreenPerturbationStrength:"Random",sampleBluePerturbationStrength:"Random",sampleBrightnessPerturbationStrength:"Random",referenceColorName:"White",brightnessConstraintType:"Repulsive",brightnessRange:1.5,saturationRange:1,hueRange:1}};Object.keys(z).filter((e=>!0===z[e].referenceColorOk)),Object.keys(z).filter((e=>!0===z[e].recommended)),Object.keys(z).filter((e=>!0!==z[e].hideInApp));var U=["Background color"];for(let e=1;e<30;e++)U.push(`Color ${e}`);class Q{constructor({r:e=0,g:t=0,b:n=0,t:i=255,sampler:r=null,drift:a=0,sampleDrift:o=null,redPerturbationStrength:s=0,sampleRedPerturbationStrength:l=null,greenPerturbationStrength:d=0,sampleGreenPerturbationStrength:g=null,bluePerturbationStrength:u=0,sampleBluePerturbationStrength:h=null,brightnessPerturbationStrength:m=0,sampleBrightnessPerturbationStrength:c=null,referenceColor:p=null,referenceColorName:f="No constraint",brightnessConstraintType:S="Attractive",brightnessRange:C=1,saturationConstraintType:I="Attractive",saturationRange:y=1,hueConstraintType:R="Attractive",hueRange:b=1}={}){this.r=e,this.g=t,this.b=n,this.t=i,this.sampler=r,this.drift=a,this.sampleDrift=o,this.redPerturbationStrength=s,this.sampleRedPerturbationStrength=l,this.greenPerturbationStrength=d,this.sampleGreenPerturbationStrength=g,this.bluePerturbationStrength=u,this.sampleBluePerturbationStrength=h,this.brightnessPerturbationStrength=m,this.sampleBrightnessPerturbationStrength=c,this.referenceColor=p,this.referenceColorName=f,this.brightnessConstraintType=S,this.brightnessRange=C,this.saturationConstraintType=I,this.saturationRange=y,this.hueConstraintType=R,this.hueRange=b,this.phase=Math.random(),this.updateDoubles(),null==this.referenceColorName&&(this.referenceColorName="No constraint",this.referenceColor=null)}static fromConfig(e,t,n=[]){if(!e)return new Q;if("referenceColorName"in e&&null!=e.referenceColorName&&"No constraint"!=e.referenceColorName&&!U.includes(e.referenceColorName)&&(e.referenceColor=Q.fromConfig(t.colorConfigs[e.referenceColorName],t)),"Random"===e.sampler)e.r=j(),e.g=j(),e.b=j();else if(Array.isArray(e.sampler)){let i=e.sampler[Math.floor(Math.random()*e.sampler.length)],r=0;for(;n.includes(i)&&r<10;)i=e.sampler[Math.floor(Math.random()*e.sampler.length)],r++;return n.push(i),Q.fromConfig(t.colorConfigs[i],t)}return["Random","Linear hue","Sine brightness"].includes(e.sampleDrift)&&null==e.drift&&(e.drift=Y()),"Random"===e.sampleRedPerturbationStrength&&(e.redPerturbationStrength=J()),"Random"===e.sampleGreenPerturbationStrength&&(e.greenPerturbationStrength=J()),"Random"===e.sampleBluePerturbationStrength&&(e.bluePerturbationStrength=J()),"Random"===e.sampleBrightnessPerturbationStrength&&(e.brightnessPerturbationStrength=J()),new Q(e)}updateDoubles(){this.redPertStrength2=2*this.redPerturbationStrength,this.greenPertStrength2=2*this.greenPerturbationStrength,this.bluePertStrength2=2*this.bluePerturbationStrength,this.brightnessPertStrength2=2*this.brightnessPerturbationStrength}hardConstraint(e,t,n,i,r=!1){return r?n<i/2&&n>0?e=t+i/2:n>-i/2&&n<0&&(e=t-i/2):n>i/2?e=t+i/2:n<-i/2&&(e=t-i/2),e}keepWithinRange(){if(null==this.referenceColor)return;let e=this.referenceColor.rgbToHsb(),t=this.rgbToHsb(),n=t.h,i=t.s,r=t.b,a=e.h,o=e.s,s=e.b,l=n-a,d=i-o,g=r-s;l>.5?(n-=1,l-=1):l<-.5&&(n+=1,l+=1),n="Attractive"===this.hueConstraintType?this.hardConstraint(n,a,l,this.hueRange,!1):this.hardConstraint(n,a,l,this.hueRange,!0),i="Attractive"===this.saturationConstraintType?this.hardConstraint(i,o,d,this.saturationRange,!1):this.hardConstraint(i,o,d,this.saturationRange,!0),r="Attractive"===this.brightnessConstraintType?this.hardConstraint(r,s,g,this.brightnessRange,!1):this.hardConstraint(r,s,g,this.brightnessRange,!0);let u=this.hsbToRgb(n,i,r);this.r=u.r,this.g=u.g,this.b=u.b}hsbToRgb(e,t,n){let i=0,r=0,a=0;if(0===t)i=r=a=n;else{let o=n<.5?n*(1+t):n+t-n*t,s=2*n-o;i=this.hueToRgb(s,o,e+1/3),r=this.hueToRgb(s,o,e),a=this.hueToRgb(s,o,e-1/3)}return{r:Math.round(255*i),g:Math.round(255*r),b:Math.round(255*a)}}hueToRgb(e,t,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?e+6*(t-e)*n:n<.5?t:n<2/3?e+(t-e)*(2/3-n)*6:e}rgbToHsb(){let e=this.r/255,t=this.g/255,n=this.b/255,i=Math.max(e,t,n),r=Math.min(e,t,n),a=(i+r)/2,o=0;a>0&&a<1&&(o=(i-r)/(1-Math.abs(2*a-1)));let s=0;return i!==r&&(s=i===e?(t-n)/(i-r)+(t<n?6:0):i===t?(n-e)/(i-r)+2:(e-t)/(i-r)+4,s/=6),{h:s,s:o,b:a}}toDict(){return{r:this.r,g:this.g,b:this.b,t:this.t,drift:this.drift,redPerturbationStrength:this.redPerturbationStrength,greenPerturbationStrength:this.greenPerturbationStrength,bluePerturbationStrength:this.bluePerturbationStrength,brightnessPerturbationStrength:this.brightnessPerturbationStrength,referenceColor:this.referenceColor.toDict(),brightnessRange:this.brightnessRange,saturationRange:this.saturationRange,hueRange:this.hueRange}}}function j(){return Math.floor(256*Math.random())}function J(){return 21*Math.random()}function Y(){return 10**(1.5*Math.random()-.5)}function X(e,t,n){let i=t;if("Random"===t.sampleDrift)for(let e of["r","g","b"]){let n=Math.round(2*Math.random()*t.drift-t.drift),r=t[e]+n;r=Math.max(0,Math.min(255,r)),i[e]=r}else if("Linear hue"===t.sampleDrift){let e=t.rgbToHsb();e.h=e.h+.001*t.drift;let n=t.hsbToRgb(e.h,e.s,e.b);t.r=n.r,t.g=n.g,t.b=n.b}else if("Sine brightness"===t.sampleDrift){let n=Math.round(255*(.5+.5*Math.sin(.01*e.time*t.drift+t.phase)));t.r=n,t.g=n,t.b=n}return i.keepWithinRange(),i}function $(e,t,n){let i;i="colorDefinitions"in e.config.paletteConfig&&void 0!==e.config.paletteConfig.colorDefinitions[t]?e.config.paletteConfig.colorDefinitions[t]:e.colorConfigs[t];let r=Q.fromConfig(i,e,n);if("referenceColorName"in i&&null!==i.referenceColorName&&"No constraint"!=i.referenceColorName){if("Background color"==i.referenceColorName&&e.colors.length>0)r.referenceColor=e.colors[0],r.referenceColorName="Background color";else if(a=i.referenceColorName,/^Color \d+$/.test(a)){let t=i.referenceColorName.match(/^Color (\d+)$/),n=parseInt(t[1],10);n<e.colors.length&&(r.referenceColor=e.colors[n],r.referenceColorName="Color "+n.toString())}}else r.referenceColor=null,r.referenceColorName=null;var a;return r}function K(e,t,n,i){let r=$(e,t,n);if("First"===e.config.paletteConfig.colorDependency&&e.colors.length>0)r.referenceColor=e.colors[0],r.referenceColorName="Background color";else if("Second"===e.config.paletteConfig.colorDependency&&e.colors.length>1)r.referenceColor=e.colors[1],r.referenceColorName="Color 1";else if("Previous"===e.config.paletteConfig.colorDependency&&e.colors.length>0)r.referenceColor=e.colors[i-1],r.referenceColorName=i-1==0?"Background color":"Color "+(i-1).toString();else if(/^Color \d+$/.test(e.config.paletteConfig.colorDependency)){let t=e.config.paletteConfig.colorDependency.match(/^Color (\d+)$/),n=parseInt(t[1],10);n<e.colors.length&&(r.referenceColor=e.colors[n],r.referenceColorName=0==n?"Background color":"Color "+n.toString())}return r.keepWithinRange(),r}function _(e){let t;if(null!=e.config.paletteConfig.samplingPalettes){var n=e.config.paletteConfig.name,i=e.config.paletteConfig.samplingPalettes;let t=r(i)();e.config.paletteConfig=JSON.parse(JSON.stringify(e.paletteConfigs[t])),e.config.paletteConfig.sampledName=e.config.paletteConfig.name,e.config.paletteConfig.name=n,e.config.paletteConfig.samplingPalettes=i}if(null==e.config.paletteConfig.nColors){let n=e.config.paletteConfig.colorPattern.length-e.config.paletteConfig.minNColors;t=Math.floor(Math.random()*n)+e.config.paletteConfig.minNColors}else t=e.config.paletteConfig.nColors;e.nColors=t,e.colors=[];let a=0,o=[];for(let n of e.config.paletteConfig.colorPattern){let i=K(e,n,o,a);if(e.colors.push(i),e.colors.length>=t)break;a++}e.nColors=e.colors.length,e.colorCount=new Array(e.nColors).fill(0);let s="Col | Set the color palette according to the preset "+e.config.paletteConfig.name+".";null!=e.config.paletteConfig.sampledName&&(s+=" The color palette "+e.config.paletteConfig.sampledName+" was sampled."),M(e,s)}function Z(e){if("VariableGR"!=e.metaRule)for(var t of e.colors)null!=t.sampleRedPerturbationStrength&&0!=t.sampleRedPerturbationStrength&&(t.redPerturbationStrength=J()),null!=t.sampleGreenPerturbationStrength&&0!=t.sampleGreenPerturbationStrength&&(t.greenPerturbationStrength=J()),null!=t.sampleBluePerturbationStrength&&0!=t.sampleBluePerturbationStrength&&(t.bluePerturbationStrength=J()),null!=t.sampleBrightnessPerturbationStrength&&0!=t.sampleBrightnessPerturbationStrength&&(t.brightnessPerturbationStrength=J()),t.updateDoubles()}function ee(e){for(var t of e.colors)null!=t.sampleDrift&&0!=t.drift&&(t.drift=Y())}function te(e,t=!1){if(t||e.changeMetaRuleFlag){e.colorCount=new Array(e.nColors).fill(0);var n=e.sanityConfig;if("VariableGR"==e.metaRule);else if("VariableDemo"==e.metaRule)e.config=e.stagingConfigs["Mixed Safe"],e.sanityConfig=e.sanityConfigs.Default,e.useLogo=!1;else if("Variable"==e.metaRule)e.config=e.stagingConfigs["Mixed Safe"],e.sanityConfig=e.sanityConfigs.Default;else if("VariableMix"==e.metaRule)e.config=e.stagingConfigs.Mixed,e.sanityConfig=e.sanityConfigs.Default;else if("VariableUnsafe"==e.metaRule)e.config=e.stagingConfigs.MixedDyn,e.sanityConfig=e.sanityConfigs.Default;else if("VariableTest"==e.metaRule)e.config=e.stagingConfigs["Test rule"],e.sanityConfig=e.sanityConfigs.Disabled;else if("VariableTestNoStyle"==e.metaRule)e.config=e.stagingConfigs["Test rule no style"],e.sanityConfig=e.sanityConfigs.Disabled;else if("CustomRule"==e.metaRule){if(e.config=e.stagingConfigs.Custom,e.sanityConfig=e.sanityConfigs.Disabled,e.currentRuleAndStyle){var[i,r]=e.currentRuleAndStyle.split("-");e.config.ruleConfig.rules={[i]:1},r?e.config.styleConfig.style=r:e.config.styleConfig={}}}else"GRMouse"==e.metaRule&&(e.config=e.stagingConfigs.GRMouse,e.sanityConfig=e.sanityConfigs.Default);e.sanityConfig=n,e.resampleRuleClass(),e.ruleLogSwitchProbability=-25,e.styleLogEvolveProbability=-25,e.changeMetaRuleFlag=!1,e.time=0,ne(e),_(e)}if(e.changeRuleFlag&&(e.ruleClass.setBaseRule(e),e.ruleClass.setStyleRule(e),e.ruleClass.setStyleRule(e,!0),e.ruleClass.setUpdateRule(),e.changeRuleFlag=!1,e.ruleLogSwitchProbability=-25,e.changeBaseRuleFlag=!1,e.styleLogEvolveProbability=-25,e.changeStyleFlag=!1,e.time=0,ne(e),Z(e),ee(e)),(Math.random()<Math.exp(e.ruleLogSwitchProbability)||e.changeBaseRuleFlag)&&(e.ruleClass.setBaseRule(e),e.ruleClass.setUpdateRule(),e.ruleLogSwitchProbability=-25,e.changeBaseRuleFlag=!1,e.time=0,ne(e),Z(e),ee(e)),e.changeStyleFlag&&(e.ruleClass.setStyleRule(e),e.ruleClass.setStyleRule(e,!0),e.ruleClass.setUpdateRule(),e.styleLogEvolveProbability=-25,e.changeStyleFlag=!1,e.time=0,ne(e),Z(e),ee(e)),(Math.random()<Math.exp(e.styleLogEvolveProbability)||e.evolveStyleFlag)&&"CustomRule"!=e.metaRule&&!e.config.styleConfig.deterministic&&(!function(e,t){t.ruleChain[1]&&"function"==typeof t.ruleChain[1].evolveRule&&t.ruleChain[1].evolveRule(e,t.conditionLevels);t.ruleChain[2]&&"function"==typeof t.ruleChain[2].evolveRule&&t.ruleChain[2].evolveRule(e,t.conditionLevels)}(e,e.ruleClass),e.styleLogEvolveProbability=-25,e.evolveStyleFlag=!1,e.time=0,ne(e),Z(e),ee(e)),e.reloadColorPaletteFlag,(null!=e.config.paletteConfig.samplingPalettes&&Math.random()<Math.exp(e.paletteLogSwitchProbability)||e.reloadColorPaletteFlag)&&(e.paletteLogSwitchProbability=-25,_(e),e.reloadColorPaletteFlag=!1),!e.pauseEvolution){let t=1;e.ruleLogSwitchProbability=e.ruleLogSwitchProbability+e.logMultiplicativeFactor*t,e.ruleLogSwitchProbability>0&&(e.ruleLogSwitchProbability=0),e.styleLogEvolveProbability=e.styleLogEvolveProbability+e.logMultiplicativeEvolveFactor*t,e.styleLogEvolveProbability>0&&(e.styleLogEvolveProbability=0),null!=e.config.paletteConfig.samplingPalettes&&(e.paletteLogSwitchProbability=e.paletteLogSwitchProbability+e.logMultiplicativePaletteFactor*t,e.paletteLogSwitchProbability>0&&(e.paletteLogSwitchProbability=0))}}function ne(e){if("undefined"!=typeof document){var t=document.getElementById("currentRuleAndStyle");t&&(e.useLogo&&null!=e.ruleClass2?t.value=e.ruleClass.getName()+"__"+e.ruleClass2.getName():t.value=e.ruleClass.getName())}}function ie(e,t,n,i,r){let a=(t+i+e.gridHeight)%e.gridHeight,o=(n+r+e.gridWidth)%e.gridWidth,s=a,l=o;return(a-t-i>0||a-t-i<0)&&(l=(e.gridWidth-o-e.gridPeriodicityShiftX+e.gridWidth)%e.gridWidth),(o-n-r>0||o-n-r<0)&&(s=(e.gridHeight-a-e.gridPeriodicityShiftY+e.gridHeight)%e.gridHeight),[s,l]}function re(e,t,n,i,r){let a=(t+i+e.gridHeight)%e.gridHeight,o=(n+r+e.gridWidth)%e.gridWidth,s=a,l=o;return(a-t-i>0||a-t-i<0)&&(l=(e.gridWidth-o-e.gridPeriodicityShiftX+e.gridWidth)%e.gridWidth),o-n-r>0?s=(a+e.gridPeriodicityShiftY+e.gridHeight)%e.gridHeight:o-n-r<0&&(s=(a-e.gridPeriodicityShiftY+e.gridHeight)%e.gridHeight),[s,l]}function ae(e,t,n,i,r){let a=(t+i+e.gridHeight)%e.gridHeight,o=(n+r+e.gridWidth)%e.gridWidth,s=a,l=o;return a-t-i>0?l=(o+e.gridPeriodicityShiftX+e.gridWidth)%e.gridWidth:a-t-i<0&&(l=(o-e.gridPeriodicityShiftX+e.gridWidth)%e.gridWidth),(o-n-r>0||o-n-r<0)&&(s=(e.gridHeight-a-e.gridPeriodicityShiftY+e.gridHeight)%e.gridHeight),[s,l]}function oe(e,t,n,i,r){let a=(t+i+e.gridHeight)%e.gridHeight,o=(n+r+e.gridWidth)%e.gridWidth,s=a,l=o;return a-t-i>0?l=(o+e.gridPeriodicityShiftX+e.gridWidth)%e.gridWidth:a-t-i<0&&(l=(o-e.gridPeriodicityShiftX+e.gridWidth)%e.gridWidth),o-n-r>0?s=(a+e.gridPeriodicityShiftY+e.gridHeight)%e.gridHeight:o-n-r<0&&(s=(a-e.gridPeriodicityShiftY+e.gridHeight)%e.gridHeight),[s,l]}function se(e){e.gridFlipX&&e.gridFlipY?e.findNeighbour=ie:e.gridFlipX?e.findNeighbour=re:e.gridFlipY?e.findNeighbour=ae:e.findNeighbour=oe}function le(e,t,n){return(e*(n-1)+t)/n}function de(e,t=!1){(e.time%200==0||t)&&(isNaN(e.brightness)&&(e.brightness=127,e.maxBrightness=130,e.minBrightness=124),isNaN(e.maxBrightness)&&(e.maxBrightness=130),isNaN(e.minBrightness)&&(e.minBrightness=124))}function ge(e){let t=e.imageData;for(var n=0,i=0,r=0,a=e.colors.length,o=new Array(a).fill(0),s=0;s<e.imageHeight;s++)for(var l=0;l<e.imageWidth;l++){var d=Math.floor(e.grid.get(s%e.gridHeight,l%e.gridWidth)/e.ruleClass.colorUnit)%a;if(o[d]+=1,0==e.redraw.get(s%e.gridHeight,l%e.gridWidth))continue;n+=1;let g=e.colors[d],u=4*(s*e.imageWidth+l);i+=Math.sqrt((t[u+0]-g.r)**2+(t[u+1]-g.g)**2+(t[u+2]-g.b)**2),r+=g.r+g.g+g.b;const h=Math.round(Math.random()*g.redPertStrength2-g.redPerturbationStrength),m=Math.round(Math.random()*g.greenPertStrength2-g.greenPerturbationStrength),c=Math.round(Math.random()*g.bluePertStrength2-g.bluePerturbationStrength),p=Math.round(Math.random()*g.brightnessPertStrength2-g.brightnessPerturbationStrength);t[u+0]=g.r+h+p,t[u+1]=g.g+m+p,t[u+2]=g.b+c+p,t[u+3]=g.t}!function(e,t,n,i,r){var a=e.gridHeight*e.gridWidth;e.activityLevel=le(e.activityLevel,t/a,e.sanityConfig.activityLevelWindowSize),e.activityLevelForRule=le(e.activityLevel,t/a,e.config.ruleConfig.activityLevelForRuleWindowSize),e.nCellChangedHistoric=le(e.nCellChangedHistoric,t,e.sanityConfig.activityLevelWindowSize),e.meanColorChangeHistoric=le(e.meanColorChangeHistoric,n/(t+a/30),e.sanityConfig.activityLevelWindowSize),0==t?i=127:i/=3*t,e.brightness=le(e.brightness,i,e.sanityConfig.flickerIndexWindowSize);var o=(e.sanityConfig.flickerIndexWindowSize-1)/e.sanityConfig.flickerIndexWindowSize;e.maxBrightness=o*(e.maxBrightness-e.brightness)+e.brightness,e.maxBrightness=Math.min(255,e.maxBrightness),e.minBrightness=o*(e.minBrightness-e.brightness)+e.brightness,e.minBrightness=Math.max(0,e.minBrightness),e.relCellChanged=t/a,e.diffBrightness=e.maxBrightness-e.minBrightness,e.flickerIndex=le(e.flickerIndex,e.diffBrightness*e.relCellChanged,e.sanityConfig.flickerIndexWindowSize),e.maxBrightness<i?e.maxBrightness+=3:e.minBrightness>i&&(e.minBrightness-=3);for(var s=0;s<e.colorCount.length;s++)e.colorCount[s]=le(e.colorCount[s],r[s]/a,100)}(e,n,i,r,o),de(e),e.imageData=t}function ue(e,t,n){e.set(t,n,0)}function he(e,t,n){e.set(t,n,Math.floor(1e5*Math.random()))}function me(e,t=!1){let n,i=e.initialisationConfig.background;return t&&(i=e.initialisationConfig.backgroundOnLogo??"Vaccuum"),n="Vaccuum"==i?ue:"Random"==i.slice(0,6)?he:"First style state"==i?function(e){let t=e.ruleClass.ruleChain[0].nStates;return function(e,n,i){e.set(n,i,t)}}(e):he,n}function ce(e,t,n){var i=Math.max(200-e.time,0)/200;null!=e.config.randomnessConfig.randomnessLogShift&&(i+=e.config.randomnessConfig.randomnessLogShift);var r=function(e){var t=Math.exp(-e),n=1,i=0;do{i++,n*=Math.random()}while(n>t);return i-1}(10**(e.randomnessAmount+i));if(0!=r)for(var a=e.seedSampler,o=e.config.randomnessConfig.seedingConfig,s=0;s<r;s++){var l=Math.floor(Math.random()*e.gridHeight),d=Math.floor(Math.random()*e.gridWidth);if(e.randomSeedingInMaskOnly)for(;1===e.mask.get(l,d);)l=Math.floor(Math.random()*e.gridHeight),d=Math.floor(Math.random()*e.gridWidth);var g=a(),u=o[g],h=!0;null==u&&(u=fe(e,g),h=!1),pe(t,e,u,l,d,n,h)}}function pe(e,t,n,r,a,o,s){n instanceof i||(n=i.fromArray(n)),s&&(Math.random()<.25&&n.transpose(),Math.random()<.5&&n.flipX(),Math.random()<.75&&n.flipY());let l=n.height,d=n.width;for(let i=0;i<l;i++)for(let s=0;s<d;s++){let g=o(t,r,a,i-Math.floor(l/2),s-Math.floor(d/2));e.set(g[0],g[1],n.get(i,s))}}function fe(e,t){let[n,r]=function(e){let t=Math.floor(Math.random()*e.config.randomnessConfig.maxSeedSize)+1,n=t;Math.random()>e.config.randomnessConfig.squareVsRectangularMaskProbability&&(n=Math.floor(Math.random()*e.config.randomnessConfig.maxSeedSize)+1);return[t,n]}(e);return function(e,t,n){let r=he;return"Random"==n?function(e,t,n){let r=new i(t,e);for(let i=0;i<e;i++)for(let e=0;e<t;e++)n(r,i,e);return r}(e,t,r):"Random p2h"==n?function(e,t,n){let r=new i(t,e);for(let i=0;i<Math.ceil(e/2);i++)for(let a=0;a<t;a++)n(r,i,a),r.set(e-1-i,a,r.get(i,a));return r}(e,t,r):"Random p2v"==n?function(e,t,n){let r=new i(t,e);for(let i=0;i<e;i++)for(let e=0;e<Math.ceil(t/2);e++)n(r,i,e),r.set(i,t-1-e,r.get(i,e));return r}(e,t,r):"Random d2a"==n?function(e,t){let n=new i(e,e);for(let i=0;i<e;i++)for(let r=i;r<e;r++)t(n,i,r),n.set(r,i,n.get(i,r));return n}(e,r):"Random d2b"==n?function(e,t){let n=new i(e,e);for(let i=0;i<e;i++)for(let r=i;r<e;r++)t(n,i,r),n.set(e-1-r,e-1-i,n.get(i,r));return n}(e,r):"Random g2"==n?function(e,t,n){let r=new i(t,e);for(let i=0;i<e;i++)for(let a=0;a<Math.ceil(t/2);a++)n(r,i,a),r.set(e-1-i,t-1-a,r.get(i,a));return r}(e,t,r):"Random p4"==n?function(e,t,n){let r=new i(t,e);for(let i=0;i<Math.ceil(e/2);i++)for(let a=0;a<Math.ceil(t/2);a++)n(r,i,a),r.set(e-1-i,a,r.get(i,a)),r.set(i,t-1-a,r.get(i,a)),r.set(e-1-i,t-1-a,r.get(i,a));return r}(e,t,r):"Random d4"==n?function(e,t){let n=new i(e,e);for(let i=0;i<e;i++)for(let r=Math.max(i,e-i);r<e;r++)t(n,i,r),n.set(r,i,n.get(i,r)),n.set(e-1-r,e-1-i,n.get(i,r)),n.set(e-1-i,e-1-r,n.get(i,r));return n}(e,r):"Random g4"==n?function(e,t){let n=new i(e,e);for(let i=0;i<Math.ceil(e/2);i++)for(let r=0;r<Math.ceil(e/2);r++)t(n,i,r),n.set(r,e-1-i,n.get(i,r)),n.set(e-1-i,e-1-r,n.get(i,r)),n.set(e-1-r,i,n.get(i,r));return n}(e,r):function(e,t){let n=new i(e,e);for(let i=0;i<Math.ceil(e/2);i++)for(let r=0;r<Math.ceil(e/2);r++)t(n,i,r),n.set(r,e-1-i,n.get(i,r)),n.set(e-1-i,e-1-r,n.get(i,r)),n.set(e-1-r,i,n.get(i,r)),n.set(e-1-i,r,n.get(i,r)),n.set(e-1-r,e-1-i,n.get(i,r)),n.set(i,e-1-r,n.get(i,r)),n.set(r,i,n.get(i,r));return n}(e,r)}(n,r,t)}function Se(e){const t=e.ruleClass.ruleChain[0].nStates;var n=0;null!=e.ruleClass.ruleChain[1]&&(n=e.ruleClass.ruleChain[1].nStates);var r=a*t,s=a*n,l=Math.floor(a/2),d=[new Uint8Array(r),new Uint8Array(s)],g=new Uint8Array(l),u=new i(e.gridWidth,e.gridHeight),h=e.grid;const m=e.time;for(var c=0,p=e.activityLevelForRule*e.ruleRegularisationSeed/e.birth3,f=0;f<e.gridHeight;f++)for(var S=0;S<e.gridWidth;S++){var C=o(e,f,S,h,d,g,m,t,n);const i=e.grid.get(f,S);var I=i;I=e.ruleClass.updateRule(i,I,C,e.time,p,e.mask.get(f,S)),Math.floor(I/e.ruleClass.colorUnit)%e.nColors!=Math.floor(i/e.ruleClass.colorUnit)%e.nColors?e.redraw.set(f,S,1):e.redraw.set(f,S,0),u.set(f,S,I),d[0]=d[0].fill(0),d[1]=d[1].fill(0),g=g.fill(0),I%t==1&&c++}!function(e,t){t.activeCells=le(t.activeCells,e,t.sanityConfig.activityLevelWindowSize)}(c/(e.gridHeight*e.gridWidth),e),e.addRandomness&&ce(e,u,e.findNeighbour),e.grid=u}function Ce(e){e.enableSanityChecks&&(function(e){e.time>e.sanityConfig.gracePeriod&&(e.meanColorChangeHistoric>e.sanityConfig.maxColorChange||e.relCellChanged>e.sanityConfig.maxPropOfCellsChanged||e.flickerIndex>e.sanityConfig.maxFlickerIndex)&&(e.changeRuleFlag=!0,e.meanColorChangeHistoric>e.sanityConfig.maxColorChange?M(e,"San | Rule and style change triggered by the sanity checks: the color index change ("+e.meanColorChangeHistoric.toFixed(0)+") exceeded the limit of "+e.sanityConfig.maxColorChange.toFixed(0)+"."):e.relCellChanged>e.sanityConfig.maxPropOfCellsChanged?M(e,"San | Rule and style change triggered by the sanity checks: the proportion of cells changed ("+e.relCellChanged.toFixed(2)+") exceeded the limit of "+e.sanityConfig.maxPropOfCellsChanged.toFixed(2)+"."):M(e,"San | Rule and style change triggered by the sanity checks: the flicker index ("+e.flickerIndex.toFixed(1)+") exceeded the limit of "+e.sanityConfig.maxFlickerIndex.toFixed(1)+"."),de(e,!0),e.nCellChangedHistoric=15,e.meanColorChangeHistoric=10,e.brightness=127,e.maxBrightness=130,e.minBrightness=124,e.flickerIndex=0)}(e),function(e){e.nCellChangedHistoric<e.sanityConfig.minNumberOfCellsChanged&&(e.changeRuleFlag=!0,M(e,"San | Rule and style change triggered by the sanity checks: the number of cells recolored ("+e.nCellChangedHistoric.toFixed(0)+") was below the threshold of "+e.sanityConfig.minNumberOfCellsChanged.toFixed(0)+"."),de(e,!0),e.nCellChangedHistoric=20)}(e),function(e){const t=e.colorCount.slice(1).some((t=>t>e.sanityConfig.maxPropOfPlainColor));e.time>e.sanityConfig.gracePeriod&&t&&(e.changeRuleFlag=!0,M(e,"San | Rule and style change triggered by the sanity checks: a foreground color exceeded the threshold of "+e.sanityConfig.maxPropOfPlainColor.toFixed(3)+"% of the canvas."),de(e,!0),e.colorCount=new Array(e.nColors).fill(0))}(e))}function Ie(e){return console.log("Loading image:",e),new Promise(((t,i)=>{const r=function(){if("undefined"!=typeof window)return new window.Image;try{const{Image:e}=n(Object(function(){var e=new Error("Cannot find module 'canvas'");throw e.code="MODULE_NOT_FOUND",e}()));return new e}catch(e){throw console.error('The canvas module is not installed. Please run "npm install canvas" to install it.'),e}}();r.onload=()=>{console.log("Image loaded:",e);const i=function(e,t){if("undefined"!=typeof window){const n=document.createElement("canvas");return n.width=e,n.height=t,n}try{const{createCanvas:i}=n(Object(function(){var e=new Error("Cannot find module 'canvas'");throw e.code="MODULE_NOT_FOUND",e}()));return i(e,t)}catch(e){throw console.error('The canvas module is not installed. Please run "npm install canvas" to install it.'),e}}(r.width,r.height),a=i.getContext("2d");a.drawImage(r,0,0,r.width,r.height);const o=a.getImageData(0,0,i.width,i.height).data,s=[];for(let e=0;e<r.height;e++){const t=[];for(let n=0;n<r.width;n++){const i=4*(e*r.width+n),a=(o[i]+o[i+1]+o[i+2])/3;t.push(a>128?1:0)}s.push(t)}t(s)},r.onerror=()=>{console.error("Error loading image:",e),i(new Error("Error loading image"))},r.src=e}))}async function ye(e){e.config&&e.initialisationConfig?(null!=e.initialisationConfig.logo?await async function(e){console.log(`Attempting to load image ${e.initialisationConfig.logo}`);try{const t=await Ie(e.initialisationConfig.logo),n=new i(e.gridWidth,e.gridHeight),r=t[0].length/e.gridWidth,a=t.length/e.gridHeight,o=Math.max(r,a),s=Math.floor((e.gridWidth-t[0].length/o)/2),l=Math.floor((e.gridHeight-t.length/o)/2),d=0;for(let i=0;i<e.gridHeight;i++)for(let r=0;r<e.gridWidth;r++){if(r<s||(r-s)*o>=t[0].length||i<l||(i-l)*o>=t.length){n.set(i,r,d);continue}let e=Math.floor((r-s)*o);0===t[Math.floor((i-l)*o)][e]?n.set(i,r,0):n.set(i,r,1)}e.mask=n}catch(t){console.log("Image loading failed, not using a mask."),console.error("Error loading image:",t),e.mask=new i(e.gridWidth,e.gridHeight)}}(e):e.mask=new i(e.gridWidth,e.gridHeight),null!=e.initialisationConfig.background&&function(e){e.grid=new i(e.gridWidth,e.gridHeight),e.redraw=new i(e.gridWidth,e.gridHeight);let t=me(e);for(var n=0;n<e.gridHeight;n++)for(var r=0;r<e.gridWidth;r++)e.redraw.set(n,r,1),t(e.grid,n,r);if(null!==e.mask)for(t=me(e,!0),n=0;n<e.gridHeight;n++)for(r=0;r<e.gridWidth;r++)0===e.mask.get(n,r)&&t(e.grid,n,r)}(e),null!=e.initialisationConfig.seed&&function(e){let t=e.initialisationConfig.seed[0].length,n=e.initialisationConfig.seed.length,i=Math.floor((e.gridWidth-t)/2),r=Math.floor((e.gridHeight-n)/2);e.reinitialiseInTheTopHalf&&(r=Math.floor((e.gridHeight/2-n)/2));for(let a=0;a<n;a++)for(let n=0;n<t;n++)e.grid.set(a+r,n+i,e.initialisationConfig.seed[a][n])}(e)):function(e,t=1e4){Promise.resolve().then((()=>{e.grid=new i(e.gridWidth,e.gridHeight),e.redraw=new i(e.gridWidth,e.gridHeight);for(var n=0;n<e.gridHeight;n++)for(var r=0;r<e.gridWidth;r++)if(e.redraw.set(n,r,1),"gr"!=e.initialisation||1!==e.mask.get(n,r))if("gr2"!=e.initialisation||1!==e.mask.get(n,r)){for(var a=Math.random(),o=0;o<t;o++)if(a<(o+1)/(t+1)){e.grid.set(n,r,o);break}}else e.grid.set(n,r,3);else e.grid.set(n,r,0)}))}(e)}var Re={signature:"GIF",version:"89a",trailer:59,extensionIntroducer:33,applicationExtensionLabel:255,graphicControlExtensionLabel:249,imageSeparator:44,signatureSize:3,versionSize:3,globalColorTableFlagMask:128,colorResolutionMask:112,sortFlagMask:8,globalColorTableSizeMask:7,applicationIdentifierSize:8,applicationAuthCodeSize:3,disposalMethodMask:28,userInputFlagMask:2,transparentColorFlagMask:1,localColorTableFlagMask:128,interlaceFlagMask:64,idSortFlagMask:32,localColorTableSizeMask:7};function be(e=256){let t=0,n=new Uint8Array(e);return{get buffer(){return n.buffer},reset(){t=0},bytesView:()=>n.subarray(0,t),bytes:()=>n.slice(0,t),writeByte(e){i(t+1),n[t]=e,t++},writeBytes(e,r=0,a=e.length){i(t+a);for(let i=0;i<a;i++)n[t++]=e[i+r]},writeBytesView(e,r=0,a=e.byteLength){i(t+a),n.set(e.subarray(r,r+a),t),t+=a}};function i(e){var i=n.length;if(i>=e)return;e=Math.max(e,i*(i<1048576?2:1.125)>>>0),0!=i&&(e=Math.max(e,256));let r=n;n=new Uint8Array(e),t>0&&n.set(r.subarray(0,t),0)}}var Be=[0,1,3,7,15,31,63,127,255,511,1023,2047,4095,8191,16383,32767,65535];var ve=function(e,t,n,i,r=be(512),a=new Uint8Array(256),o=new Int32Array(5003),s=new Int32Array(5003)){let l=o.length,d=Math.max(2,i);a.fill(0),s.fill(0),o.fill(-1);let g=0,u=0,h=d+1,m=h,c=!1,p=m,f=(1<<p)-1,S=1<<h-1,C=S+1,I=S+2,y=0,R=n[0],b=0;for(let e=l;e<65536;e*=2)++b;b=8-b,r.writeByte(d),v(S);let B=n.length;for(let e=1;e<B;e++)e:{let t=n[e],i=(t<<12)+R,r=t<<b^R;if(o[r]===i){R=s[r];break e}let a=0===r?1:l-r;for(;o[r]>=0;)if(r-=a,r<0&&(r+=l),o[r]===i){R=s[r];break e}v(R),R=t,I<4096?(s[r]=I++,o[r]=i):(o.fill(-1),I=S+2,c=!0,v(S))}return v(R),v(C),r.writeByte(0),r.bytesView();function v(e){for(g&=Be[u],u>0?g|=e<<u:g=e,u+=p;u>=8;)a[y++]=255&g,y>=254&&(r.writeByte(y),r.writeBytesView(a,0,y),y=0),g>>=8,u-=8;if((I>f||c)&&(c?(p=m,f=(1<<p)-1,c=!1):(++p,f=12===p?1<<p:(1<<p)-1)),e==C){for(;u>0;)a[y++]=255&g,y>=254&&(r.writeByte(y),r.writeBytesView(a,0,y),y=0),g>>=8,u-=8;y>0&&(r.writeByte(y),r.writeBytesView(a,0,y),y=0)}}};function Ge(e,t,n){return e<<8&63488|t<<2&992|n>>3}function we(e,t,n,i){return e>>4|240&t|(240&n)<<4|(240&i)<<8}function We(e,t,n){return e>>4<<8|240&t|n>>4}function ke(e,t,n){return e<t?t:e>n?n:e}function Me(e){return e*e}function Pe(e,t,n){var i=0,r=1e100;let a=e[t],o=a.cnt,s=a.ac,l=a.rc,d=a.gc,g=a.bc;for(var u=a.fw;0!=u;u=e[u].fw){let t=e[u],a=t.cnt,m=o*a/(o+a);if(!(m>=r)){var h=0;n&&(h+=m*Me(t.ac-s))>=r||!((h+=m*Me(t.rc-l))>=r)&&(!((h+=m*Me(t.gc-d))>=r)&&(!((h+=m*Me(t.bc-g))>=r)&&(r=h,i=u)))}}a.err=r,a.nn=i}function Ae(e,t,n={}){let{format:i="rgb565",clearAlpha:r=!0,clearAlphaColor:a=0,clearAlphaThreshold:o=0,oneBitAlpha:s=!1}=n;if(!e||!e.buffer)throw new Error("quantize() expected RGBA Uint8Array data");if(!(e instanceof Uint8Array||e instanceof Uint8ClampedArray))throw new Error("quantize() expected RGBA Uint8Array data");let l=new Uint32Array(e.buffer),d=!1!==n.useSqrt,g="rgba4444"===i,u=function(e,t){let n=new Array("rgb444"===t?4096:65536),i=e.length;if("rgba4444"===t)for(let t=0;t<i;++t){let i=e[t],r=i>>24&255,a=i>>16&255,o=i>>8&255,s=255&i,l=we(s,o,a,r),d=l in n?n[l]:n[l]={ac:0,rc:0,gc:0,bc:0,cnt:0,nn:0,fw:0,bk:0,tm:0,mtm:0,err:0};d.rc+=s,d.gc+=o,d.bc+=a,d.ac+=r,d.cnt++}else if("rgb444"===t)for(let t=0;t<i;++t){let i=e[t],r=i>>16&255,a=i>>8&255,o=255&i,s=We(o,a,r),l=s in n?n[s]:n[s]={ac:0,rc:0,gc:0,bc:0,cnt:0,nn:0,fw:0,bk:0,tm:0,mtm:0,err:0};l.rc+=o,l.gc+=a,l.bc+=r,l.cnt++}else for(let t=0;t<i;++t){let i=e[t],r=i>>16&255,a=i>>8&255,o=255&i,s=Ge(o,a,r),l=s in n?n[s]:n[s]={ac:0,rc:0,gc:0,bc:0,cnt:0,nn:0,fw:0,bk:0,tm:0,mtm:0,err:0};l.rc+=o,l.gc+=a,l.bc+=r,l.cnt++}return n}(l,i),h=u.length,m=h-1,c=new Uint32Array(h+1);for(var p=0,f=0;f<h;++f){let e=u[f];if(null!=e){var S=1/e.cnt;g&&(e.ac*=S),e.rc*=S,e.gc*=S,e.bc*=S,u[p++]=e}}Me(t)/p<.022&&(d=!1);for(f=0;f<p-1;++f)u[f].fw=f+1,u[f+1].bk=f,d&&(u[f].cnt=Math.sqrt(u[f].cnt));var C,I,y;for(d&&(u[f].cnt=Math.sqrt(u[f].cnt)),f=0;f<p;++f){Pe(u,f,!1);var R=u[f].err;for(I=++c[0];I>1&&!(u[C=c[y=I>>1]].err<=R);I=y)c[I]=C;c[I]=f}var b=p-t;for(f=0;f<b;){for(var B;;){var v=c[1];if((B=u[v]).tm>=B.mtm&&u[B.nn].mtm<=B.tm)break;B.mtm==m?v=c[1]=c[c[0]--]:(Pe(u,v,!1),B.tm=f);R=u[v].err;for(I=1;(y=I+I)<=c[0]&&(y<c[0]&&u[c[y]].err>u[c[y+1]].err&&y++,!(R<=u[C=c[y]].err));I=y)c[I]=C;c[I]=v}var G=u[B.nn],w=B.cnt,W=G.cnt;S=1/(w+W);g&&(B.ac=S*(w*B.ac+W*G.ac)),B.rc=S*(w*B.rc+W*G.rc),B.gc=S*(w*B.gc+W*G.gc),B.bc=S*(w*B.bc+W*G.bc),B.cnt+=G.cnt,B.mtm=++f,u[G.bk].fw=G.fw,u[G.fw].bk=G.bk,G.mtm=m}let k=[];var M=0;for(f=0;;++M){let e=ke(Math.round(u[f].rc),0,255),t=ke(Math.round(u[f].gc),0,255),n=ke(Math.round(u[f].bc),0,255),i=255;if(g){if(i=ke(Math.round(u[f].ac),0,255),s){i=i<=("number"==typeof s?s:127)?0:255}r&&i<=o&&(e=t=n=a,i=0)}let l=g?[e,t,n,i]:[e,t,n];if(xe(k,l)||k.push(l),0==(f=u[f].fw))break}return k}function xe(e,t){for(let n=0;n<e.length;n++){let i=e[n],r=i[0]===t[0]&&i[1]===t[1]&&i[2]===t[2],a=!(i.length>=4&&t.length>=4)||i[3]===t[3];if(r&&a)return!0}return!1}function Ne(e,t,n,i,r){let a=0,o=1e100;for(let s=0;s<r.length;s++){let l=r[s],d=Oe(l[3]-i);d>o||(d+=Oe(l[0]-e),d>o||(d+=Oe(l[1]-t),d>o||(d+=Oe(l[2]-n),!(d>o)&&(o=d,a=s))))}return a}function Te(e,t,n,i){let r=0,a=1e100;for(let o=0;o<i.length;o++){let s=i[o],l=Oe(s[0]-e);l>a||(l+=Oe(s[1]-t),l>a||(l+=Oe(s[2]-n),!(l>a)&&(a=l,r=o)))}return r}function Oe(e){return e*e}function Fe(e={}){let{initialCapacity:t=4096,auto:n=!0}=e,i=be(t),r=new Uint8Array(256),a=new Int32Array(5003),o=new Int32Array(5003),s=!1;return{reset(){i.reset(),s=!1},finish(){i.writeByte(Re.trailer)},bytes:()=>i.bytes(),bytesView:()=>i.bytesView(),get buffer(){return i.buffer},get stream(){return i},writeHeader:l,writeFrame(e,t,d,g={}){let{transparent:u=!1,transparentIndex:h=0,delay:m=0,palette:c=null,repeat:p=0,colorDepth:f=8,dispose:S=-1}=g,C=!1;if(n?s||(C=!0,l(),s=!0):C=Boolean(g.first),t=Math.max(0,Math.floor(t)),d=Math.max(0,Math.floor(d)),C){if(!c)throw new Error("First frame must include a { palette } option");(function(e,t,n,i,r=8){let a=1,o=0,s=He(i.length)-1,l=a<<7|r-1<<4|o<<3|s,d=0,g=0;Ee(e,t),Ee(e,n),e.writeBytes([l,d,g])})(i,t,d,c,f),De(i,c),p>=0&&function(e,t){e.writeByte(33),e.writeByte(255),e.writeByte(11),Le(e,"NETSCAPE2.0"),e.writeByte(3),e.writeByte(1),Ee(e,t),e.writeByte(0)}(i,p)}let I=Math.round(m/10);!function(e,t,n,i,r){var a,o;e.writeByte(33),e.writeByte(249),e.writeByte(4),r<0&&(r=0,i=!1),i?(a=1,o=2):(a=0,o=0),t>=0&&(o=7&t),o<<=2;let s=0;e.writeByte(o|s|a),Ee(e,n),e.writeByte(r||0),e.writeByte(0)}(i,S,I,u,h);let y=Boolean(c)&&!C;(function(e,t,n,i){if(e.writeByte(44),Ee(e,0),Ee(e,0),Ee(e,t),Ee(e,n),i){let t=0,n=0,r=He(i.length)-1;e.writeByte(128|t|n|r)}else e.writeByte(0)})(i,t,d,y?c:null),y&&De(i,c),function(e,t,n,i,r=8,a,o,s){ve(n,i,t,r,e,a,o,s)}(i,e,t,d,f,r,a,o)}};function l(){Le(i,"GIF89a")}}function De(e,t){let n=1<<He(t.length);for(let i=0;i<n;i++){let n=[0,0,0];i<t.length&&(n=t[i]),e.writeByte(n[0]),e.writeByte(n[1]),e.writeByte(n[2])}}function Ee(e,t){e.writeByte(255&t),e.writeByte(t>>8&255)}function Le(e,t){for(var n=0;n<t.length;n++)e.writeByte(t.charCodeAt(n))}function He(e){return Math.max(Math.ceil(Math.log2(e)),1)}function qe(e){if(e.startRecordingGifFlag){M(e,"Gif | Starting the GIF recording...");const{data:t,width:n,height:i}=e.ctx.getImageData(0,0,3*e.gridWidth,3*e.gridHeight);e.gifPalette=Ae(t,16),e.gif=Fe(),e.recordingGif=!0,e.startRecordingGifFlag=!1}if(e.stopRecordingGifFlag){e.gif.finish(),e.gifOutput=e.gif.bytes();const r=new Blob([e.gifOutput],{type:"image/gif"}),a=URL.createObjectURL(r);if(e.recordingGif=!1,"Download"==e.gifMode){const e=document.createElement("a");e.href=a,e.download="output.gif",document.body.appendChild(e),e.click(),document.body.removeChild(e)}else"InAppWebView"==e.gifMode&&(t=r,n=function(e){window.flutter_inappwebview.callHandler("saveGif",e)},(i=new FileReader).onload=function(e){n(e.target.result)},i.readAsDataURL(t));e.stopRecordingGifFlag=!1,e.nRecordedFrames=0,M(e,"Gif | Stopped the GIF recording.")}var t,n,i;if(e.recordingGif){const{data:t,width:n,height:i}=e.ctx.getImageData(0,0,e.gridWidth,e.gridHeight),r=function(e,t,n="rgb565"){if(!e||!e.buffer)throw new Error("quantize() expected RGBA Uint8Array data");if(!(e instanceof Uint8Array||e instanceof Uint8ClampedArray))throw new Error("quantize() expected RGBA Uint8Array data");if(t.length>256)throw new Error("applyPalette() only works with 256 colors or less");let i=new Uint32Array(e.buffer),r=i.length,a="rgb444"===n?4096:65536,o=new Uint8Array(r),s=new Array(a);if("rgba4444"===n)for(let e=0;e<r;e++){let n=i[e],r=n>>24&255,a=n>>16&255,l=n>>8&255,d=255&n,g=we(d,l,a,r),u=g in s?s[g]:s[g]=Ne(d,l,a,r,t);o[e]=u}else{let e="rgb444"===n?We:Ge;for(let n=0;n<r;n++){let r=i[n],a=r>>16&255,l=r>>8&255,d=255&r,g=e(d,l,a),u=g in s?s[g]:s[g]=Te(d,l,a,t);o[n]=u}}return o}(t,e.gifPalette),a=e.gifPalette;e.gif.writeFrame(r,n,i,{palette:a,delay:e.targetCycleTime}),e.nRecordedFrames=e.nRecordedFrames+1,e.nRecordedFrames>1e3&&(e.stopRecordingGifFlag=!0,e.paused=!0,M(e,"Gif | The GIF recording recording reached 1000 frames, stopping."))}}var Ve=166320;function ze(e,t=null){const n=performance.now();e.paused?(e.step&&(Ue(e,t),e.step=!1),e.recordingGif&&qe(e)):Ue(e,t);const r=performance.now();e.frameExecutionTime=r-n,e.reinitialiseGridFlag&&(ye(e),e.reinitialiseGridFlag=!1,e.reinitialiseInTheTopHalf=!1,e.time=0),e.changeGridSizeFlag&&(e.gridHeight=e.tempGridHeight,e.gridWidth=e.tempGridWidth,e.imageData=new Uint8ClampedArray(4*e.gridWidth*e.gridHeight),e.redraw=new i(e.gridWidth,e.gridHeight),e.canvas=document.getElementById("gameCanvas"),e.canvas.width=e.gridWidth,e.canvas.height=e.gridHeight,e.ctx=e.canvas.getContext("2d",{willReadFrequently:!0}),ye(e),e.changeGridSizeFlag=!1),setTimeout((function(){requestAnimationFrame((()=>ze(e,t)))}),Math.max(0,e.targetCycleTime-e.frameExecutionTime))}function Ue(e,t){ge(e),null!=t&&t(e),Ce(e),Se(e),te(e),qe(e),e.time=(e.time+1)%Ve,e.randomisePeriodicityShiftAndTopology&&function(e){Math.random()<1e-4&&(e.gridPeriodicityShiftX=Math.floor(Math.random()*e.gridWidth),M(e,"Top | Monodromy along the vertical axis set to "+e.gridPeriodicityShiftX+" cells.")),Math.random()<1e-4&&(e.gridPeriodicityShiftY=Math.floor(Math.random()*e.gridHeight),M(e,"Top | Monodromy along the horizontal axis set to "+e.gridPeriodicityShiftY+" cells.")),Math.random()<1e-4&&(e.gridFlipX=!e.gridFlipX,se(e),e.gridFlipX?e.gridFlipY?M(e,"Top | Twisting the topology along the vertical axis. The cellular world is now a projective plane."):M(e,"Top | Twisting the topology along the vertical axis. The cellular world is now a Klein bottle."):e.gridFlipY?M(e,"Top | Untwisting the topology along the vertical axis. The cellular world is now a Klein bottle."):M(e,"Top | Untwisting the topology along the vertical axis. The cellular world is now a torus.")),Math.random()<1e-4&&(e.gridFlipY=!e.gridFlipY,se(e),e.gridFlipY?e.gridFlipX?M(e,"Top | Twisting the topology along the horizontal axis. The cellular world is now a projective plane."):M(e,"Top | Twisting the topology along the horizontal axis. The cellular world is now a Klein Bottle."):e.gridFlipX?M(e,"Top | Untwisting the topology along the horizontal axis. The cellular world is now a Klein Bottle."):M(e,"Top | Untwisting the topology along the horizontal axis. The cellular world is now a torus."))}(e),function(e){for(var t=0;t<e.colors.length;t++){var n=e.colors[t];n.drift>0&&(e.colors[t]=X(e,n))}}(e)}function Qe(e,t){if(e.saveEventData){var n=e.ruleClass.ruleChain[0].getName(),i=new Blob([n],{type:"text/plain"}),r=URL.createObjectURL(i),a=document.createElement("a");a.href=r,a.download="dataAutomata.txt",a.click()}}function je(e){document.getElementById("submitButton").addEventListener("click",(function(){!function(e){Object.keys(e).forEach((e=>{let t=document.getElementById(e);var n;t&&(n="checkbox"===t.type?t.checked:"number"===t.type||"range"===t.type?parseFloat(t.value):t.value,localStorage.setItem(e,n))})),location.reload()}(e)}))}function Je(e){document.getElementById("randomnessAmount").addEventListener("input",(function(){!function(e,t){e.randomnessAmount=parseFloat(t),document.getElementById("randomnessAmountValue").textContent=t}(e,this.value)}))}function Ye(e){let t=new ImageData(e.imageData,e.imageWidth,e.imageHeight);e.ctx.putImageData(t,e.canvasCornerX,e.canvasCornerY)}const Xe={"Blocky triangles":{name:"Blocky triangles",ruleConfig:{name:"Custom",rules:{"B23457/S378/I568|1:0/G10/R0":1},deterministic:!0,activityLevelForRuleWindowSize:32},randomnessConfig:{randomnessLogShift:0,squareVsRectangularMaskProbability:.7,maxSeedSize:10,seedingPatterns:{Random:{prob:1,mask:null},"Random p2h":{prob:1,mask:null},"Random p2v":{prob:1,mask:null},"Random d2a":{prob:1,mask:null},"Random d2b":{prob:1,mask:null},"Random g2":{prob:1,mask:null},"Random p4":{prob:1,mask:null},"Random d4":{prob:1,mask:null},"Random g4":{prob:1,mask:null},"Random r8":{prob:1,mask:null},Butterfly:{prob:1,mask:[[0,0,1,2],[0,2,0,0],[1,2,1,0]]},"Diamond wave":{prob:.001,mask:[[0,0],[1,1]]},"Oscillator I":{prob:2,mask:[[0,0,1,0],[1,2,2,0],[0,2,2,1],[0,1,0,0]]},"Oscillator II":{prob:2,mask:[[0,0,2,0,0,0,0],[0,1,1,0,0,1,0],[0,0,2,1,2,1,2],[0,0,1,0,1,0,0],[2,1,2,1,2,0,0],[0,1,0,0,1,1,0],[0,0,0,0,2,0,0]]},"Short-lived Star":{prob:.001,mask:[[1,0],[0,1]]},Snake:{prob:4,mask:[[0,1,2,1,2,1,0],[1,2,0,1,0,2,1],[1,2,0,1,0,2,1],[0,1,2,1,2,1,0]]},Spaceship:{prob:.001,mask:[[1,1],[2,0],[0,2]]},"Square wave":{prob:4,mask:[[1,1],[2,2]]},Star:{prob:4,mask:[[1,0,1],[0,0,0],[1,0,1]]},"Butterfly gun":{prob:.001,mask:[[0,2,1,0,0,0,0,0],[0,0,2,1,0,0,0,0],[2,0,0,2,1,0,0,0],[1,2,0,0,2,1,0,0],[0,1,0,2,1,0,2,1],[0,0,2,1,0,0,2,1]]}},seedMasks:{Random:null,"Random p2h":null,"Random p2v":null,"Random d2a":null,"Random d2b":null,"Random g2":null,"Random p4":null,"Random d4":null,"Random g4":null,"Random r8":null,Butterfly:[[0,0,1,2],[0,2,0,0],[1,2,1,0]],"Diamond wave":[[0,0],[1,1]],"Oscillator I":[[0,0,1,0],[1,2,2,0],[0,2,2,1],[0,1,0,0]],"Oscillator II":[[0,0,2,0,0,0,0],[0,1,1,0,0,1,0],[0,0,2,1,2,1,2],[0,0,1,0,1,0,0],[2,1,2,1,2,0,0],[0,1,0,0,1,1,0],[0,0,0,0,2,0,0]],"Short-lived Star":[[1,0],[0,1]],Snake:[[0,1,2,1,2,1,0],[1,2,0,1,0,2,1],[1,2,0,1,0,2,1],[0,1,2,1,2,1,0]],Spaceship:[[1,1],[2,0],[0,2]],"Square wave":[[1,1],[2,2]],Star:[[1,0,1],[0,0,0],[1,0,1]],"Butterfly gun":[[0,2,1,0,0,0,0,0],[0,0,2,1,0,0,0,0],[2,0,0,2,1,0,0,0],[1,2,0,0,2,1,0,0],[0,1,0,2,1,0,2,1],[0,0,2,1,0,0,2,1]]},seedMasksAsArrays:{Random:null,"Random p2h":null,"Random p2v":null,"Random d2a":null,"Random d2b":null,"Random g2":null,"Random p4":null,"Random d4":null,"Random g4":null,"Random r8":null,Butterfly:[[0,0,1,2],[0,2,0,0],[1,2,1,0]],"Diamond wave":[[0,0],[1,1]],"Oscillator I":[[0,0,1,0],[1,2,2,0],[0,2,2,1],[0,1,0,0]],"Oscillator II":[[0,0,2,0,0,0,0],[0,1,1,0,0,1,0],[0,0,2,1,2,1,2],[0,0,1,0,1,0,0],[2,1,2,1,2,0,0],[0,1,0,0,1,1,0],[0,0,0,0,2,0,0]],"Short-lived Star":[[1,0],[0,1]],Snake:[[0,1,2,1,2,1,0],[1,2,0,1,0,2,1],[1,2,0,1,0,2,1],[0,1,2,1,2,1,0]],Spaceship:[[1,1],[2,0],[0,2]],"Square wave":[[1,1],[2,2]],Star:[[1,0,1],[0,0,0],[1,0,1]],"Butterfly gun":[[0,2,1,0,0,0,0,0],[0,0,2,1,0,0,0,0],[2,0,0,2,1,0,0,0],[1,2,0,0,2,1,0,0],[0,1,0,2,1,0,2,1],[0,0,2,1,0,0,2,1]]},seedProb:{Random:1,"Random p2h":1,"Random p2v":1,"Random d2a":1,"Random d2b":1,"Random g2":1,"Random p4":1,"Random d4":1,"Random g4":1,"Random r8":1,Butterfly:1,"Diamond wave":.001,"Oscillator I":2,"Oscillator II":2,"Short-lived Star":.001,Snake:4,Spaceship:.001,"Square wave":4,Star:4,"Butterfly gun":.001}},styleConfig:{name:"Custom",style:"E4N[0|0:5]||E6C[0|0:8|0:6]||B1N[0|0:8]||B7C[0|0:4|0:2]",deterministic:!0},paletteConfig:{name:"Custom",recommended:!0,colorPattern:["Textured black","Textured white","Random color","Random color","Random color","Random color","Random color"],minNColors:3,sampledName:"Cartoon Cacophony",samplingPalettes:null,nColors:3},timeBetweenRuleChanges:null,timeBetweenStyleChanges:null,timeBetweenPaletteChanges:null},"Rainbow cartoon":{name:"Rainbow cartoon",ruleConfig:{name:"Custom",rules:{"B24568/S3478/I3458/G14/R0":1},deterministic:!0,activityLevelForRuleWindowSize:32},randomnessConfig:{randomnessLogShift:0,squareVsRectangularMaskProbability:.7,maxSeedSize:10,seedingPatterns:{Random:{prob:1,mask:null},"Random p2h":{prob:1,mask:null},"Random p2v":{prob:1,mask:null},"Random d2a":{prob:1,mask:null},"Random d2b":{prob:1,mask:null},"Random g2":{prob:1,mask:null},"Random p4":{prob:1,mask:null},"Random d4":{prob:1,mask:null},"Random g4":{prob:1,mask:null},"Random r8":{prob:1,mask:null},Glider:{prob:10,mask:[[0,0,1],[1,0,1],[0,1,1]]},Oscillator:{prob:.001,mask:[[1,1,1]]},"Spaceship 1":{prob:10,mask:[[1,0,0,1,0],[0,0,0,0,1],[1,0,0,0,1],[0,1,1,1,1]]},"Spaceship 2":{prob:10,mask:[[0,0,0,0,1,0],[0,0,0,0,0,1],[1,0,0,0,0,1],[0,1,1,1,1,1]]},"Spaceship 3":{prob:10,mask:[[0,1,1,1,1],[1,0,0,0,1],[0,0,0,0,1],[1,0,0,1,0]]}},seedMasks:{Random:null,"Random p2h":null,"Random p2v":null,"Random d2a":null,"Random d2b":null,"Random g2":null,"Random p4":null,"Random d4":null,"Random g4":null,"Random r8":null,Glider:[[0,0,1],[1,0,1],[0,1,1]],Oscillator:[[1,1,1]],"Spaceship 1":[[1,0,0,1,0],[0,0,0,0,1],[1,0,0,0,1],[0,1,1,1,1]],"Spaceship 2":[[0,0,0,0,1,0],[0,0,0,0,0,1],[1,0,0,0,0,1],[0,1,1,1,1,1]],"Spaceship 3":[[0,1,1,1,1],[1,0,0,0,1],[0,0,0,0,1],[1,0,0,1,0]]},seedMasksAsArrays:{Random:null,"Random p2h":null,"Random p2v":null,"Random d2a":null,"Random d2b":null,"Random g2":null,"Random p4":null,"Random d4":null,"Random g4":null,"Random r8":null,Glider:[[0,0,1],[1,0,1],[0,1,1]],Oscillator:[[1,1,1]],"Spaceship 1":[[1,0,0,1,0],[0,0,0,0,1],[1,0,0,0,1],[0,1,1,1,1]],"Spaceship 2":[[0,0,0,0,1,0],[0,0,0,0,0,1],[1,0,0,0,0,1],[0,1,1,1,1,1]],"Spaceship 3":[[0,1,1,1,1],[1,0,0,0,1],[0,0,0,0,1],[1,0,0,1,0]]},seedProb:{Random:1,"Random p2h":1,"Random p2v":1,"Random d2a":1,"Random d2b":1,"Random g2":1,"Random p4":1,"Random d4":1,"Random g4":1,"Random r8":1,Glider:10,Oscillator:.001,"Spaceship 1":10,"Spaceship 2":10,"Spaceship 3":10}},styleConfig:{name:"Custom",style:"E2N[0|0:4]||E7C[0|0:11]||B6C[0|0:11]||E2A6[0|0:12]||B5N[0|0:7]||B2C[1|0:8|0:5]||B5A4[1|0:8|0:0]||B5A4[0|0:8|0:13]||E3A4[0|0:2|0:4]",deterministic:!0},paletteConfig:{name:"Custom",recommended:!0,colorPattern:["Textured black","Rainbow color","Rainbow color","Rainbow color","Rainbow color","Rainbow color","Rainbow color"],minNColors:2,sampledName:"Discordant Disco",samplingPalettes:null,nColors:5},timeBetweenRuleChanges:null,timeBetweenStyleChanges:null,timeBetweenPaletteChanges:null},"Criss-Cross I":{name:"Criss-Cross I",ruleConfig:{name:"Custom",rules:{"B23|11:0/S3|13:0.1.2/I/G6/R50":1},deterministic:!0,activityLevelForRuleWindowSize:2,sampledRuleTemplate:"B23|11:0/S3|13:0.1.2/I/G{6}/R50"},randomnessConfig:{randomnessLogShift:-.5,squareVsRectangularMaskProbability:.7,maxSeedSize:10,seedingPatterns:{Random:{prob:1,mask:null},"Random p2h":{prob:1,mask:null},"Random p2v":{prob:1,mask:null},"Random d2a":{prob:1,mask:null},"Random d2b":{prob:1,mask:null},"Random g2":{prob:1,mask:null},"Random p4":{prob:1,mask:null},"Random d4":{prob:1,mask:null},"Random g4":{prob:1,mask:null},"Random r8":{prob:1,mask:null},Butterfly:{prob:.001,mask:[[0,0,1,2],[0,2,0,0],[1,2,1,0]]},"Diamond wave":{prob:.001,mask:[[0,0],[1,1]]},"Oscillator I":{prob:.001,mask:[[0,0,1,0],[1,2,2,0],[0,2,2,1],[0,1,0,0]]},"Oscillator II":{prob:.001,mask:[[0,0,2,0,0,0,0],[0,1,1,0,0,1,0],[0,0,2,1,2,1,2],[0,0,1,0,1,0,0],[2,1,2,1,2,0,0],[0,1,0,0,1,1,0],[0,0,0,0,2,0,0]]},"Short-lived Star":{prob:.001,mask:[[1,0],[0,1]]},Snake:{prob:.001,mask:[[0,1,2,1,2,1,0],[1,2,0,1,0,2,1],[1,2,0,1,0,2,1],[0,1,2,1,2,1,0]]},Spaceship:{prob:.001,mask:[[1,1],[2,0],[0,2]]},"Square wave":{prob:.001,mask:[[1,1],[1,1]]},Star:{prob:.001,mask:[[1,0,1],[0,0,0],[1,0,1]]},"Butterfly gun":{prob:30,mask:[[0,2,1,0,0,0,0,0],[0,0,2,1,0,0,0,0],[2,0,0,2,1,0,0,0],[1,2,0,0,2,1,0,0],[0,1,0,2,1,0,2,1],[0,0,2,1,0,0,2,1]]}},seedMasks:{Random:null,"Random p2h":null,"Random p2v":null,"Random d2a":null,"Random d2b":null,"Random g2":null,"Random p4":null,"Random d4":null,"Random g4":null,"Random r8":null,Butterfly:[[0,0,1,2],[0,2,0,0],[1,2,1,0]],"Diamond wave":[[0,0],[1,1]],"Oscillator I":[[0,0,1,0],[1,2,2,0],[0,2,2,1],[0,1,0,0]],"Oscillator II":[[0,0,2,0,0,0,0],[0,1,1,0,0,1,0],[0,0,2,1,2,1,2],[0,0,1,0,1,0,0],[2,1,2,1,2,0,0],[0,1,0,0,1,1,0],[0,0,0,0,2,0,0]],"Short-lived Star":[[1,0],[0,1]],Snake:[[0,1,2,1,2,1,0],[1,2,0,1,0,2,1],[1,2,0,1,0,2,1],[0,1,2,1,2,1,0]],Spaceship:[[1,1],[2,0],[0,2]],"Square wave":[[1,1],[1,1]],Star:[[1,0,1],[0,0,0],[1,0,1]],"Butterfly gun":[[0,2,1,0,0,0,0,0],[0,0,2,1,0,0,0,0],[2,0,0,2,1,0,0,0],[1,2,0,0,2,1,0,0],[0,1,0,2,1,0,2,1],[0,0,2,1,0,0,2,1]]},seedMasksAsArrays:{Random:null,"Random p2h":null,"Random p2v":null,"Random d2a":null,"Random d2b":null,"Random g2":null,"Random p4":null,"Random d4":null,"Random g4":null,"Random r8":null,Butterfly:[[0,0,1,2],[0,2,0,0],[1,2,1,0]],"Diamond wave":[[0,0],[1,1]],"Oscillator I":[[0,0,1,0],[1,2,2,0],[0,2,2,1],[0,1,0,0]],"Oscillator II":[[0,0,2,0,0,0,0],[0,1,1,0,0,1,0],[0,0,2,1,2,1,2],[0,0,1,0,1,0,0],[2,1,2,1,2,0,0],[0,1,0,0,1,1,0],[0,0,0,0,2,0,0]],"Short-lived Star":[[1,0],[0,1]],Snake:[[0,1,2,1,2,1,0],[1,2,0,1,0,2,1],[1,2,0,1,0,2,1],[0,1,2,1,2,1,0]],Spaceship:[[1,1],[2,0],[0,2]],"Square wave":[[1,1],[1,1]],Star:[[1,0,1],[0,0,0],[1,0,1]],"Butterfly gun":[[0,2,1,0,0,0,0,0],[0,0,2,1,0,0,0,0],[2,0,0,2,1,0,0,0],[1,2,0,0,2,1,0,0],[0,1,0,2,1,0,2,1],[0,0,2,1,0,0,2,1]]},seedProb:{Random:1,"Random p2h":1,"Random p2v":1,"Random d2a":1,"Random d2b":1,"Random g2":1,"Random p4":1,"Random d4":1,"Random g4":1,"Random r8":1,Butterfly:.001,"Diamond wave":.001,"Oscillator I":.001,"Oscillator II":.001,"Short-lived Star":.001,Snake:.001,Spaceship:.001,"Square wave":.001,Star:.001,"Butterfly gun":30}},styleConfig:{name:"Custom",style:"E3C[0|0:3]||E4C[0|2:3|2:5]||E2N[0|0:2|0:5]",deterministic:!0},paletteConfig:{name:"Custom",colorPattern:["Random color","Random color","Random color","Random color","Random color","Random color","Random color"],minNColors:2,sampledName:"Chaotic Carnival",samplingPalettes:null,nColors:2},timeBetweenRuleChanges:null,timeBetweenStyleChanges:null,timeBetweenPaletteChanges:null},"Baffling Bats I":{name:"Baffling Bats I",ruleConfig:{name:"Custom",rules:{"B2|11:0.2.4/S23|13:0/I/G11/R0":1},deterministic:!0,activityLevelForRuleWindowSize:32,sampledRuleTemplate:"B2[456]|11:0.2.4/S23[56]|13:0/I[45678]|0:0/G{10|11|12|13|14|15}"},randomnessConfig:{randomnessLogShift:0,squareVsRectangularMaskProbability:.7,maxSeedSize:20,seedingPatterns:{Random:{prob:1,mask:null},"Random p2h":{prob:1,mask:null},"Random p2v":{prob:1,mask:null},"Random d2a":{prob:1,mask:null},"Random d2b":{prob:1,mask:null},"Random g2":{prob:1,mask:null},"Random p4":{prob:1,mask:null},"Random d4":{prob:1,mask:null},"Random g4":{prob:1,mask:null},"Random r8":{prob:1,mask:null},Butterfly:{prob:.001,mask:[[0,0,1,2],[0,2,0,0],[1,2,1,0]]},"Diamond wave":{prob:.001,mask:[[0,0],[1,1]]},"Oscillator I":{prob:.001,mask:[[0,0,1,0],[1,2,2,0],[0,2,2,1],[0,1,0,0]]},"Oscillator II":{prob:.001,mask:[[0,0,2,0,0,0,0],[0,1,1,0,0,1,0],[0,0,2,1,2,1,2],[0,0,1,0,1,0,0],[2,1,2,1,2,0,0],[0,1,0,0,1,1,0],[0,0,0,0,2,0,0]]},"Short-lived Star":{prob:.001,mask:[[1,0],[0,1]]},Snake:{prob:.001,mask:[[0,1,2,1,2,1,0],[1,2,0,1,0,2,1],[1,2,0,1,0,2,1],[0,1,2,1,2,1,0]]},Spaceship:{prob:4,mask:[[1,1],[2,0],[0,2]]},"Square wave":{prob:4,mask:[[1,1],[1,1]]},Star:{prob:.001,mask:[[1,0,1],[0,0,0],[1,0,1]]},"Butterfly gun":{prob:.001,mask:[[0,2,1,0,0,0,0,0],[0,0,2,1,0,0,0,0],[2,0,0,2,1,0,0,0],[1,2,0,0,2,1,0,0],[0,1,0,2,1,0,2,1],[0,0,2,1,0,0,2,1]]}},seedMasks:{Random:null,"Random p2h":null,"Random p2v":null,"Random d2a":null,"Random d2b":null,"Random g2":null,"Random p4":null,"Random d4":null,"Random g4":null,"Random r8":null,Butterfly:[[0,0,1,2],[0,2,0,0],[1,2,1,0]],"Diamond wave":[[0,0],[1,1]],"Oscillator I":[[0,0,1,0],[1,2,2,0],[0,2,2,1],[0,1,0,0]],"Oscillator II":[[0,0,2,0,0,0,0],[0,1,1,0,0,1,0],[0,0,2,1,2,1,2],[0,0,1,0,1,0,0],[2,1,2,1,2,0,0],[0,1,0,0,1,1,0],[0,0,0,0,2,0,0]],"Short-lived Star":[[1,0],[0,1]],Snake:[[0,1,2,1,2,1,0],[1,2,0,1,0,2,1],[1,2,0,1,0,2,1],[0,1,2,1,2,1,0]],Spaceship:[[1,1],[2,0],[0,2]],"Square wave":[[1,1],[1,1]],Star:[[1,0,1],[0,0,0],[1,0,1]],"Butterfly gun":[[0,2,1,0,0,0,0,0],[0,0,2,1,0,0,0,0],[2,0,0,2,1,0,0,0],[1,2,0,0,2,1,0,0],[0,1,0,2,1,0,2,1],[0,0,2,1,0,0,2,1]]},seedMasksAsArrays:{Random:null,"Random p2h":null,"Random p2v":null,"Random d2a":null,"Random d2b":null,"Random g2":null,"Random p4":null,"Random d4":null,"Random g4":null,"Random r8":null,Butterfly:[[0,0,1,2],[0,2,0,0],[1,2,1,0]],"Diamond wave":[[0,0],[1,1]],"Oscillator I":[[0,0,1,0],[1,2,2,0],[0,2,2,1],[0,1,0,0]],"Oscillator II":[[0,0,2,0,0,0,0],[0,1,1,0,0,1,0],[0,0,2,1,2,1,2],[0,0,1,0,1,0,0],[2,1,2,1,2,0,0],[0,1,0,0,1,1,0],[0,0,0,0,2,0,0]],"Short-lived Star":[[1,0],[0,1]],Snake:[[0,1,2,1,2,1,0],[1,2,0,1,0,2,1],[1,2,0,1,0,2,1],[0,1,2,1,2,1,0]],Spaceship:[[1,1],[2,0],[0,2]],"Square wave":[[1,1],[1,1]],Star:[[1,0,1],[0,0,0],[1,0,1]],"Butterfly gun":[[0,2,1,0,0,0,0,0],[0,0,2,1,0,0,0,0],[2,0,0,2,1,0,0,0],[1,2,0,0,2,1,0,0],[0,1,0,2,1,0,2,1],[0,0,2,1,0,0,2,1]]},seedProb:{Random:1,"Random p2h":1,"Random p2v":1,"Random d2a":1,"Random d2b":1,"Random g2":1,"Random p4":1,"Random d4":1,"Random g4":1,"Random r8":1,Butterfly:.001,"Diamond wave":.001,"Oscillator I":.001,"Oscillator II":.001,"Short-lived Star":.001,Snake:.001,Spaceship:4,"Square wave":4,Star:.001,"Butterfly gun":.001}},styleConfig:{name:"Custom",style:"E6N[0|0:4.5]||B2C[0|6:2]||E8C[0|0:2]||B1C[0|0:6]||B2A7[1|2:1]||E4N[0|2:6]",deterministic:!0},paletteConfig:{name:"Custom",recommended:!0,colorPattern:["Textured black","Textured white","Random color","Random color","Random color","Random color","Random color"],minNColors:3,sampledName:"Cartoon Cacophony",samplingPalettes:null,nColors:5},timeBetweenRuleChanges:null,timeBetweenStyleChanges:null,timeBetweenPaletteChanges:null},"Wavy Lines I":{name:"Wavy Lines I",ruleConfig:{name:"Custom",rules:{"B24567/S13467|13:1/I123/G35/R30":1},deterministic:!0,activityLevelForRuleWindowSize:32,sampledRuleTemplate:"B2[45678]/S13[45678]|{11|13}:1/I1[2345678]/G{25|30|35|40|45|50}/R{10|30|100}"},randomnessConfig:{randomnessLogShift:0,squareVsRectangularMaskProbability:.7,maxSeedSize:20,seedingPatterns:{Random:{prob:1,mask:null},"Random p2h":{prob:1,mask:null},"Random p2v":{prob:1,mask:null},"Random d2a":{prob:1,mask:null},"Random d2b":{prob:1,mask:null},"Random g2":{prob:1,mask:null},"Random p4":{prob:1,mask:null},"Random d4":{prob:1,mask:null},"Random g4":{prob:1,mask:null},"Random r8":{prob:1,mask:null},Butterfly:{prob:.001,mask:[[0,0,1,2],[0,2,0,0],[1,2,1,0]]},"Diamond wave":{prob:.001,mask:[[0,0],[1,1]]},"Oscillator I":{prob:.001,mask:[[0,0,1,0],[1,2,2,0],[0,2,2,1],[0,1,0,0]]},"Oscillator II":{prob:.001,mask:[[0,0,2,0,0,0,0],[0,1,1,0,0,1,0],[0,0,2,1,2,1,2],[0,0,1,0,1,0,0],[2,1,2,1,2,0,0],[0,1,0,0,1,1,0],[0,0,0,0,2,0,0]]},"Short-lived Star":{prob:.001,mask:[[1,0],[0,1]]},Snake:{prob:.001,mask:[[0,1,2,1,2,1,0],[1,2,0,1,0,2,1],[1,2,0,1,0,2,1],[0,1,2,1,2,1,0]]},Spaceship:{prob:4,mask:[[1,1],[2,0],[0,2]]},"Square wave":{prob:4,mask:[[1,1],[1,1]]},Star:{prob:.001,mask:[[1,0,1],[0,0,0],[1,0,1]]},"Butterfly gun":{prob:.001,mask:[[0,2,1,0,0,0,0,0],[0,0,2,1,0,0,0,0],[2,0,0,2,1,0,0,0],[1,2,0,0,2,1,0,0],[0,1,0,2,1,0,2,1],[0,0,2,1,0,0,2,1]]}},seedMasks:{Random:null,"Random p2h":null,"Random p2v":null,"Random d2a":null,"Random d2b":null,"Random g2":null,"Random p4":null,"Random d4":null,"Random g4":null,"Random r8":null,Butterfly:[[0,0,1,2],[0,2,0,0],[1,2,1,0]],"Diamond wave":[[0,0],[1,1]],"Oscillator I":[[0,0,1,0],[1,2,2,0],[0,2,2,1],[0,1,0,0]],"Oscillator II":[[0,0,2,0,0,0,0],[0,1,1,0,0,1,0],[0,0,2,1,2,1,2],[0,0,1,0,1,0,0],[2,1,2,1,2,0,0],[0,1,0,0,1,1,0],[0,0,0,0,2,0,0]],"Short-lived Star":[[1,0],[0,1]],Snake:[[0,1,2,1,2,1,0],[1,2,0,1,0,2,1],[1,2,0,1,0,2,1],[0,1,2,1,2,1,0]],Spaceship:[[1,1],[2,0],[0,2]],"Square wave":[[1,1],[1,1]],Star:[[1,0,1],[0,0,0],[1,0,1]],"Butterfly gun":[[0,2,1,0,0,0,0,0],[0,0,2,1,0,0,0,0],[2,0,0,2,1,0,0,0],[1,2,0,0,2,1,0,0],[0,1,0,2,1,0,2,1],[0,0,2,1,0,0,2,1]]},seedMasksAsArrays:{Random:null,"Random p2h":null,"Random p2v":null,"Random d2a":null,"Random d2b":null,"Random g2":null,"Random p4":null,"Random d4":null,"Random g4":null,"Random r8":null,Butterfly:[[0,0,1,2],[0,2,0,0],[1,2,1,0]],"Diamond wave":[[0,0],[1,1]],"Oscillator I":[[0,0,1,0],[1,2,2,0],[0,2,2,1],[0,1,0,0]],"Oscillator II":[[0,0,2,0,0,0,0],[0,1,1,0,0,1,0],[0,0,2,1,2,1,2],[0,0,1,0,1,0,0],[2,1,2,1,2,0,0],[0,1,0,0,1,1,0],[0,0,0,0,2,0,0]],"Short-lived Star":[[1,0],[0,1]],Snake:[[0,1,2,1,2,1,0],[1,2,0,1,0,2,1],[1,2,0,1,0,2,1],[0,1,2,1,2,1,0]],Spaceship:[[1,1],[2,0],[0,2]],"Square wave":[[1,1],[1,1]],Star:[[1,0,1],[0,0,0],[1,0,1]],"Butterfly gun":[[0,2,1,0,0,0,0,0],[0,0,2,1,0,0,0,0],[2,0,0,2,1,0,0,0],[1,2,0,0,2,1,0,0],[0,1,0,2,1,0,2,1],[0,0,2,1,0,0,2,1]]},seedProb:{Random:1,"Random p2h":1,"Random p2v":1,"Random d2a":1,"Random d2b":1,"Random g2":1,"Random p4":1,"Random d4":1,"Random g4":1,"Random r8":1,Butterfly:.001,"Diamond wave":.001,"Oscillator I":.001,"Oscillator II":.001,"Short-lived Star":.001,Snake:.001,Spaceship:4,"Square wave":4,Star:.001,"Butterfly gun":.001}},styleConfig:{name:"Custom",style:"E1C[0|3:0]||E2N[0|3:1]||E1C[0|7:1]||B2A3[0|8:0.1]",deterministic:!0},paletteConfig:{name:"Custom",colorPattern:["Random color","Random color","Random color","Random color","Random color","Random color","Random color"],minNColors:2,samplingPalettes:null,nColors:3},timeBetweenRuleChanges:null,timeBetweenStyleChanges:null,timeBetweenPaletteChanges:null},"Shark Fins I":{name:"Shark Fins I",ruleConfig:{name:"Custom",rules:{"B2458/S346|10:0/I24568|1:0/G70/R0":1},deterministic:!0,activityLevelForRuleWindowSize:64,sampledRuleTemplate:"B2[345678]/S[12345678]|{0|1|2|3|4|5|6|7|8|9|10|11|12|13|14}:0/I[12345678]|{0|1|2|3|4|5|6|7|8|9|10|11|12|13|14}:0/G{25|30|35|40|45|50|55|60|65|70|75|80|90|100}"},randomnessConfig:{randomnessLogShift:0,squareVsRectangularMaskProbability:.7,maxSeedSize:20,seedingPatterns:{Random:{prob:1,mask:null},"Random p2h":{prob:1,mask:null},"Random p2v":{prob:1,mask:null},"Random d2a":{prob:1,mask:null},"Random d2b":{prob:1,mask:null},"Random g2":{prob:1,mask:null},"Random p4":{prob:1,mask:null},"Random d4":{prob:1,mask:null},"Random g4":{prob:1,mask:null},"Random r8":{prob:1,mask:null},Butterfly:{prob:.001,mask:[[0,0,1,2],[0,2,0,0],[1,2,1,0]]},"Diamond wave":{prob:.001,mask:[[0,0],[1,1]]},"Oscillator I":{prob:.001,mask:[[0,0,1,0],[1,2,2,0],[0,2,2,1],[0,1,0,0]]},"Oscillator II":{prob:.001,mask:[[0,0,2,0,0,0,0],[0,1,1,0,0,1,0],[0,0,2,1,2,1,2],[0,0,1,0,1,0,0],[2,1,2,1,2,0,0],[0,1,0,0,1,1,0],[0,0,0,0,2,0,0]]},"Short-lived Star":{prob:.001,mask:[[1,0],[0,1]]},Snake:{prob:.001,mask:[[0,1,2,1,2,1,0],[1,2,0,1,0,2,1],[1,2,0,1,0,2,1],[0,1,2,1,2,1,0]]},Spaceship:{prob:4,mask:[[1,1],[2,0],[0,2]]},"Square wave":{prob:4,mask:[[1,1],[1,1]]},Star:{prob:.001,mask:[[1,0,1],[0,0,0],[1,0,1]]},"Butterfly gun":{prob:.001,mask:[[0,2,1,0,0,0,0,0],[0,0,2,1,0,0,0,0],[2,0,0,2,1,0,0,0],[1,2,0,0,2,1,0,0],[0,1,0,2,1,0,2,1],[0,0,2,1,0,0,2,1]]}},seedMasks:{Random:null,"Random p2h":null,"Random p2v":null,"Random d2a":null,"Random d2b":null,"Random g2":null,"Random p4":null,"Random d4":null,"Random g4":null,"Random r8":null,Butterfly:[[0,0,1,2],[0,2,0,0],[1,2,1,0]],"Diamond wave":[[0,0],[1,1]],"Oscillator I":[[0,0,1,0],[1,2,2,0],[0,2,2,1],[0,1,0,0]],"Oscillator II":[[0,0,2,0,0,0,0],[0,1,1,0,0,1,0],[0,0,2,1,2,1,2],[0,0,1,0,1,0,0],[2,1,2,1,2,0,0],[0,1,0,0,1,1,0],[0,0,0,0,2,0,0]],"Short-lived Star":[[1,0],[0,1]],Snake:[[0,1,2,1,2,1,0],[1,2,0,1,0,2,1],[1,2,0,1,0,2,1],[0,1,2,1,2,1,0]],Spaceship:[[1,1],[2,0],[0,2]],"Square wave":[[1,1],[1,1]],Star:[[1,0,1],[0,0,0],[1,0,1]],"Butterfly gun":[[0,2,1,0,0,0,0,0],[0,0,2,1,0,0,0,0],[2,0,0,2,1,0,0,0],[1,2,0,0,2,1,0,0],[0,1,0,2,1,0,2,1],[0,0,2,1,0,0,2,1]]},seedMasksAsArrays:{Random:null,"Random p2h":null,"Random p2v":null,"Random d2a":null,"Random d2b":null,"Random g2":null,"Random p4":null,"Random d4":null,"Random g4":null,"Random r8":null,Butterfly:[[0,0,1,2],[0,2,0,0],[1,2,1,0]],"Diamond wave":[[0,0],[1,1]],"Oscillator I":[[0,0,1,0],[1,2,2,0],[0,2,2,1],[0,1,0,0]],"Oscillator II":[[0,0,2,0,0,0,0],[0,1,1,0,0,1,0],[0,0,2,1,2,1,2],[0,0,1,0,1,0,0],[2,1,2,1,2,0,0],[0,1,0,0,1,1,0],[0,0,0,0,2,0,0]],"Short-lived Star":[[1,0],[0,1]],Snake:[[0,1,2,1,2,1,0],[1,2,0,1,0,2,1],[1,2,0,1,0,2,1],[0,1,2,1,2,1,0]],Spaceship:[[1,1],[2,0],[0,2]],"Square wave":[[1,1],[1,1]],Star:[[1,0,1],[0,0,0],[1,0,1]],"Butterfly gun":[[0,2,1,0,0,0,0,0],[0,0,2,1,0,0,0,0],[2,0,0,2,1,0,0,0],[1,2,0,0,2,1,0,0],[0,1,0,2,1,0,2,1],[0,0,2,1,0,0,2,1]]},seedProb:{Random:1,"Random p2h":1,"Random p2v":1,"Random d2a":1,"Random d2b":1,"Random g2":1,"Random p4":1,"Random d4":1,"Random g4":1,"Random r8":1,Butterfly:.001,"Diamond wave":.001,"Oscillator I":.001,"Oscillator II":.001,"Short-lived Star":.001,Snake:.001,Spaceship:4,"Square wave":4,Star:.001,"Butterfly gun":.001}},styleConfig:{name:"Custom",style:"B2N[1|7:0]||B2A3[1|3:1.2]||E2N[1|5:0]",deterministic:!0},paletteConfig:{name:"Custom",recommended:!0,colorPattern:["Textured black","Textured white","Random color","Random color","Random color","Random color","Random color"],minNColors:3,sampledName:"Cartoon Cacophony",samplingPalettes:null,nColors:4},timeBetweenRuleChanges:null,timeBetweenStyleChanges:null,timeBetweenPaletteChanges:null}};function $e(e,t,n){return{probabilities:{0:e,1:t},weight:n}}const Ke={Mixed:[$e(1,0,3),$e(.8,.2,3),$e(.5,.5,2),$e(0,1,2)],Static:[$e(1,0,1)],"Almost static":[$e(.8,.2,1)],"Half-dynamic":[$e(.5,.5,1)],Dynamic:[$e(0,1,1)]};const _e={Test:{name:"Test",showInApp:!1,nConditions:null,conditionLevels:Ke.Static,conditionLevelsName:"Static",neighbourhoodGeometryType:null,periodicityLength:1,deterministic:!1},TestFixedStyle:{name:"TestFixStyle",showInApp:!1,style:"E2C[1|14:10]||E8N[1|14:10]",deterministic:!0},"Mixed Safe":{name:"Mixed Safe",showInApp:!0,nConditions:null,conditionLevels:Ke.Static,conditionLevelsName:"Static",neighbourhoodGeometryType:null,periodicityLength:1,deterministic:!1},Mixed:{name:"Mixed",showInApp:!0,nConditions:null,conditionLevels:Ke.Mixed,conditionLevelsName:"Mixed",neighbourhoodGeometryType:null,periodicityLength:1,deterministic:!1},"Mixed static":{name:"Mixed static",showInApp:!1,nConditions:null,conditionLevels:Ke.Static,conditionLevelsName:"Static",neighbourhoodGeometryType:null,periodicityLength:1,deterministic:!1},"Mixed almost static":{name:"Mixed almost static",showInApp:!1,nConditions:null,conditionLevels:Ke["Almost static"],conditionLevelsName:"Almost static",neighbourhoodGeometryType:null,periodicityLength:1,deterministic:!1},"Mixed half-dynamic":{name:"Mixed half-dynamic",showInApp:!1,nConditions:null,conditionLevels:Ke["Half-dynamic"],conditionLevelsName:"Half-dynamic",neighbourhoodGeometryType:null,periodicityLength:1,deterministic:!1},"Mixed dynamic":{name:"Mixed dynamic",showInApp:!0,nConditions:null,conditionLevels:Ke.Dynamic,conditionLevelsName:"Dynamic",neighbourhoodGeometryType:null,periodicityLength:1,deterministic:!1},"Mixed with periodicity":{name:"Mixed with periodicity",showInApp:!0,nConditions:null,conditionLevels:Ke.Mixed,conditionLevelsName:"Mixed",neighbourhoodGeometryType:null,periodicityLength:null,deterministic:!1},Custom:{name:"Custom",showInApp:!1,style:null},"No style":{name:"No style"},GROuternetI:{name:"GROuternetI",style:"E1C[0|2:1]||E3N[0|4:0]||E4A[0|0:0]",deterministic:!0,showInApp:!1},GROuternetII:{name:"GROuternetII",showInApp:!1,style:"E5A3[0|3:1|8:2]||E6C[0|0:1]||B3C[0|0:0]||B0C[0|2:2]",deterministic:!0,showInApp:!1},GROuternetIb:{name:"GROuternetIb",showInApp:!1,style:"E2C[0|2:1]||E1C[0|0:2]||B3A3[0|0:1|0:0]||B2A3[0|0:0]",deterministic:!0,showInApp:!1},GROuternetIIb:{name:"GROuternetIIb",showInApp:!1,style:"B0C[0|0:1|0:2]||B1A3[0|0:2|0:0]||E3A3[0|0:1|0:2]||E1N[0|0:0]||E4C[0|0:0]",deterministic:!0,showInApp:!1},GROuternetIc:{name:"GROuternetIc",showInApp:!1,style:"B3A3[0|10:0|2:2]||B3A3[0|11:2]||E4A4[0|11:0|11:2]||E4N[0|11:2|11:1]",deterministic:!0,showInApp:!1},GROuternetIIc:{name:"GROuternetIIc",showInApp:!1,style:"B1A3[0|10:0|2:2]||B5N[0|0:0|2:2]||E3C[0|0:0|0:1]",deterministic:!0,showInApp:!1},Checkerboard:{name:"Checkerboard",showInApp:!0,style:"E3A6[0|11:0|13:1]||E3N[0|13:0]||B2N[0|11:2]||E5N[0|11:2]||E2C[0|13:1|11:0]||E4A6[0|13:2|13:0]",deterministic:!0},Comics:{name:"Comics",showInApp:!0,style:"B3C[0|2:2|2:0]||B3N[0|2:1]||B0A3[0|2:0]||E3C[0|2:0]||B1N[0|2:0|2:2]||E4C[0|2:0]||E1A3[0|2:0|2:1]",deterministic:!0},Labyrinth:{name:"Labyrinth",showInApp:!0,style:"E1C[1|0:1|0:2]||E3A5[1|0:2|0:3]||E5A3[1|0:2]||E7C[1|0:2]",deterministic:!0},"Old Wall":{name:"Old Wall",showInApp:!0,style:"E1A5[1|0:1.2]||E4A5[1|8:1]||B4C[1|0:2.3]||E4C[1|0:2]",deterministic:!0},Pointillism:{name:"Pointillism I",showInApp:!0,style:"B0C[1|0:4|0:2]||B6A5[1|1:2|0:3]||E3A4[1|10:2]||E4A5[1|0:0|1:3]",deterministic:!0},Rich:{name:"Rich I",showInApp:!0,style:"B1N[1|0:3]||E1N[0|0:2]||B6N[1|0:0.1.8]||B4N[1|0:1]||B2A6[0|0:4]||B1A5[1|0:4.7]||B0C[1|0:7]||B7C[0|0:9.11]||B6C[0|0:4]",deterministic:!0},"Stained Glass":{name:"Stained Glass",showInApp:!0,style:"E2C[1|0:0]1||E8N[1|0:0]",deterministic:!0},"Zen Garden":{name:"Zen Garden",showInApp:!0,style:"B4A2[0|0:5.7]||E7C[0|0:1.7]||B3C[0|0:7]||B2N[0|0:1]||B2A9[0|0:5]||B4A5[1|0:0]",deterministic:!0}},Ze=(Object.keys(_e).filter((e=>null!=_e[e].conditionLevels&&0!=_e[e].showInApp)),Object.keys(_e).filter((e=>_e[e].hasOwnProperty("style")&&_e[e].showInApp)),{Mixed:{name:"Mixed",recommended:!0,samplingPalettes:{"Cartoon Cacophony":7,"Chaotic Carnival":4,"Primary Pop":1,"Secondary Seizure":1,"Cloudy Canvas":1,"Discordant Disco":2,"Black Blanc":4,"Foggy Fluctuations":1,"Oscillating Overcast":1,"Rainbow Rampage":1,"Saturated Satire":1,"Shadow Shock":2,"Homogenous Hues":3,"Black + Homogenous Hues":3,"Alternating Altercation":1,"Tint Train":1,"Grim Grisaille":1}},"Mixed Safe":{name:"Mixed Safe",recommended:!0,samplingPalettes:{"Cartoon Cacophony":6,"Chaotic Carnival":4,"Primary Pop":1,"Secondary Seizure":1,"Discordant Disco":3,"Rainbow Rampage":1,"Saturated Satire":1,"Shadow Shock":4,"Homogenous Hues":2,"Black + Homogenous Hues":4}},"Cartoon Cacophony":{name:"Cartoon Cacophony",recommended:!0,colorPattern:["Textured black","Textured white","Random color","Random color","Random color","Random color","Random color"],minNColors:3},"Chaotic Carnival":{name:"Chaotic Carnival",recommended:!0,colorPattern:["Random color","Random color","Random color","Random color","Random color","Random color","Random color"],minNColors:2},"Primary Pop":{name:"Primary Pop",colorPattern:["Black","Basic color","Basic color","Basic color","Basic color","Basic color","Basic color"],minNColors:3},"Secondary Seizure":{name:"Secondary Seizure",colorPattern:["Black","Secondary color","Secondary color","Secondary color","Secondary color","Secondary color","Secondary color"],minNColors:3},"Cloudy Canvas":{name:"Cloudy Canvas",colorPattern:["Textured black","Textured white","Random grey","Random grey"],minNColors:4},"Discordant Disco":{name:"Discordant Disco",recommended:!0,colorPattern:["Textured black","Rainbow color","Rainbow color","Rainbow color","Rainbow color","Rainbow color","Rainbow color"],minNColors:2},"Black Blanc":{name:"Black Blanc",recommended:!0,colorPattern:["Textured black","Textured white"],minNColors:2},"Foggy Fluctuations":{name:"Foggy Fluctuations",colorPattern:["Random grey","Random grey","Random grey","Random grey","Random grey","Random grey","Random grey"],minNColors:4},"Shadow Shock":{name:"Shadow Shock",colorPattern:["Random grey","Saturated color","Random grey","Random grey","Saturated color","Random grey","Random grey"],minNColors:4},"Grim Grisaille":{name:"Grim Grisaille",colorPattern:["Grisaille","Hue and saturation constrained color","Hue and saturation constrained color","Hue and saturation constrained color","Hue and saturation constrained color","Hue and saturation constrained color","Hue and saturation constrained color"],colorDependency:"First",minNColors:3},"Oscillating Overcast":{name:"Oscillating Overcast",recommended:!0,colorPattern:["Brightness oscillator","Brightness oscillator","Brightness oscillator","Brightness oscillator","Brightness oscillator","Brightness oscillator","Brightness oscillator"],minNColors:4},"Rainbow Rampage":{name:"Rainbow Rampage",colorPattern:["Rainbow color","Rainbow color","Rainbow color","Rainbow color","Rainbow color","Rainbow color","Rainbow color"],minNColors:4},"Saturated Satire":{name:"Saturated Satire",colorPattern:["Saturated color","Saturated color","Saturated color","Saturated color","Saturated color","Saturated color","Saturated color"],minNColors:4},"Homogenous Hues":{name:"Homogenous Hues",recommended:!0,colorPattern:["Random color","Hue constrained color","Hue constrained color","Hue constrained color","Hue constrained color","Hue constrained color","Hue constrained color"],colorDependency:"First",minNColors:4},"Black + Homogenous Hues":{name:"Black + Homogenous Hues",recommended:!0,colorPattern:["Textured black","Random color","Hue constrained color","Hue constrained color","Hue constrained color","Hue constrained color","Hue constrained color"],colorDependency:"Second",minNColors:4},"Alternating Altercation":{name:"Alternating Altercation",colorPattern:["Repulsive brightness color","Repulsive brightness color","Repulsive brightness color","Repulsive brightness color","Repulsive brightness color","Repulsive brightness color","Repulsive brightness color"],colorDependency:"Previous",minNColors:4},"Tint Train":{name:"Tint Train",colorPattern:["Random color","Hue constrained color","Hue constrained color","Hue constrained color","Hue constrained color","Hue constrained color","Hue constrained color"],colorDependency:"Previous",minNColors:4},"View Generations":{name:"View Generations",hideInApp:!1,colorPattern:["Black","White","Red","Orange","Dark Yellow","Green","Azure","Blue","Violet","Majenta","Rose"],minNColors:10},GR:{name:"GR",hideInApp:!0,colorPattern:["Black","GR blue","GR grey","GR yellow"],minNColors:4},GROuternet:{name:"GROuternet",hideInApp:!0,colorPattern:["Black","GR grey","GR blue","GR yellow"],minNColors:4},GROuternet2:{name:"GROuternet2",hideInApp:!0,colorPattern:["GR grey","Black","GR yellow","GR blue"],minNColors:4},"CGA-4-0":{name:"CGA-4-0",colorPattern:["Black","CGA light green","CGA light red","CGA yellow"],minNColors:4},"CGA-4-1":{name:"CGA-4-1",colorPattern:["Black","White","CGA light cyan","CGA light magenta"],minNColors:4},"CGA-16":{name:"CGA-16",colorPattern:["CGA color","CGA color","CGA color","CGA color","CGA color","CGA color","CGA color","CGA color"],minNColors:4},GRMouse:{name:"GRMouse",hideInApp:!0,colorPattern:["transparent","GR blue","Black","GR yellow"],minNColors:4},Test:{name:"Test",hideInApp:!0,colorPattern:["Rainbow color","Rainbow color","Rainbow color","Rainbow color","Rainbow color","Rainbow color","Rainbow color"],minNColors:2}}),et=(Object.keys(Ze).filter((e=>null!=Ze[e].samplingPalettes)),Object.keys(Ze).filter((e=>!0===Ze[e].recommended)),Object.keys(Ze).filter((e=>!Ze[e].hideInApp)),2e4),tt=2e3,nt=5e3,it=1e4,rt={Mixed:{name:"Mixed",ruleConfig:L.Mixed,styleConfig:_e.Mixed,paletteConfig:Ze.Mixed,randomnessConfig:D.Default,timeBetweenRuleChanges:et,timeBetweenStyleChanges:tt,timeBetweenPaletteChanges:it},MixedDyn:{name:"MixedDyn",hideInApp:!0,ruleConfig:L.Mixed,styleConfig:_e["Mixed dynamic"],paletteConfig:Ze.Mixed,randomnessConfig:D.Default,timeBetweenRuleChanges:et,timeBetweenStyleChanges:tt,timeBetweenPaletteChanges:it},"Mixed Safe":{name:"Mixed Safe",ruleConfig:L["Mixed Safe"],styleConfig:_e["Mixed Safe"],paletteConfig:Ze["Mixed Safe"],randomnessConfig:D.Default,timeBetweenRuleChanges:et,timeBetweenStyleChanges:tt,timeBetweenPaletteChanges:it},Safe:{name:"Safe",ruleConfig:L["BB (modified)"],styleConfig:_e["Mixed Safe"],paletteConfig:Ze.Mixed,randomnessConfig:D.Default,timeBetweenRuleChanges:et,timeBetweenStyleChanges:tt,timeBetweenPaletteChanges:it},"View Generations":{name:"View Generations",ruleConfig:L.Mixed,styleConfig:_e["No style"],paletteConfig:Ze["View Generations"],randomnessConfig:D.Default,timeBetweenRuleChanges:0,timeBetweenStyleChanges:0,timeBetweenPaletteChanges:0},"Art deco":{name:"Art deco",ruleConfig:L["Spiky Spillers"],styleConfig:_e["Mixed Safe"],paletteConfig:Ze["Oscillating Overcast"],randomnessConfig:D.Default,timeBetweenRuleChanges:et,timeBetweenStyleChanges:tt},"Classy Classics":{name:"Classy Classics",ruleConfig:L["Classy Classics"],styleConfig:_e["No style"],paletteConfig:Ze["Primary Pop"],randomnessConfig:D.Default,timeBetweenRuleChanges:nt,timeBetweenStyleChanges:tt},"Retro Remix":{name:"Retro Remix",ruleConfig:L.Mixed,styleConfig:_e["No style"],paletteConfig:Ze["Primary Pop"],randomnessConfig:D.Default,timeBetweenRuleChanges:nt,timeBetweenStyleChanges:tt},"CW Logo":{name:"CW Logo",hideInApp:!0,doubleRule:!0,ruleConfig:L.Mixed,styleConfig:_e["Mixed Safe"],styleConfig2:_e["Mixed Safe"],paletteConfig:Ze.Mixed,randomnessConfig:D.Default},GR:{name:"GR",hideInApp:!0,doubleRule:!0,ruleConfig:L["BB (modified)"],styleConfig:_e["Mixed Safe"],styleConfig2:_e["Mixed Safe"],paletteConfig:Ze.GR,randomnessConfig:D.Default,timeBetweenRuleChanges:et,timeBetweenStyleChanges:tt},GROuternet:{name:"GROuternet",hideInApp:!0,doubleRule:!0,ruleConfig:L["BB (outernet)"],styleConfig:_e.GROuternetI,styleConfig2:_e.GROuternetII,paletteConfig:Ze.GROuternet},GROuternetNoLogo:{name:"GROuternetNoLogo",hideInApp:!0,doubleRule:!0,ruleConfig:L["BB (outernet)"],styleConfig:_e.GROuternetII,styleConfig2:_e.GROuternetII,paletteConfig:Ze.GROuternet},GROuternetb:{name:"GROuternetb",hideInApp:!0,doubleRule:!0,ruleConfig:L["BB (outernetb)"],styleConfig:_e.GROuternetIb,styleConfig2:_e.GROuternetIIb,paletteConfig:Ze.GROuternet2},GROuternetc:{name:"GROuternetc",hideInApp:!0,doubleRule:!0,ruleConfig:L["BB (outernetc)"],styleConfig:_e.GROuternetIc,styleConfig2:_e.GROuternetIIc,paletteConfig:Ze.GROuternet2},GRMouse:{name:"GRMouse",hideInApp:!0,ruleConfig:L["BB (modified)"],styleConfig:_e["Mixed Safe"],styleConfig2:_e["Mixed Safe"],paletteConfig:Ze.GRMouse,randomnessConfig:D.Default,timeBetweenRuleChanges:et,timeBetweenStyleChanges:tt},"Test rule no style":{name:"Test rule no style",hideInApp:!0,ruleConfig:L.Test,styleConfig:_e["No style"],paletteConfig:Ze["Cartoon Cacophony"],randomnessConfig:D.Default},"Test rule":{name:"Retro Remix",ruleConfig:L.Test,styleConfig:_e["Mixed Safe"],paletteConfig:Ze.Mixed,randomnessConfig:D.Default,timeBetweenRuleChanges:nt,timeBetweenStyleChanges:tt},Custom:{name:"Custom",hideInApp:!0,ruleConfig:L.Custom,styleConfig:_e.Custom,paletteConfig:Ze["Cartoon cacophony"],randomnessConfig:D.Default}},at=(Object.keys(rt).filter((e=>!rt[e].hasOwnProperty("hideInApp")||!rt[e].hideInApp)),Object.keys(Xe).filter((e=>!Xe[e].hasOwnProperty("hideInApp")||!Xe[e].hideInApp)),{Vaccuum:{name:"Vaccuum",hideInApp:!1,background:"Vaccuum",seed:null},Random:{name:"Random",hideInApp:!1,background:"Random",seed:null},"Random g4":{name:"Random g4",hideInApp:!0,background:"Random g4",enforceSquareCanvas:!0},"CW Logo":{name:"CW Logo",background:"Vaccuum",seed:null,logo:"BackgroundWelcomeScreen2.png",backgroundOnLogo:"First style state"},GR1:{name:"Vaccuum",hideInApp:!0,background:"Vaccuum",seed:null,logo:"grLogoOuternet6.png",backgroundOnLogo:"Random"},"Square 2x2":{name:"Square 2x2",hideInApp:!1,background:"Vaccuum",seed:[[1,1],[1,1]]}}),ot=(Object.keys(at).filter((e=>"hideInApp"in at[e]&&1!=at[e].hideInApp)),{Default:{name:"Default",gracePeriod:100,maxColorChange:330,maxFlickerIndex:10,maxPropOfCellsChanged:.5,minNumberOfCellsChanged:3,maxPropOfPlainColor:.99,activityLevelWindowSize:50,flickerIndexWindowSize:100},"No flicker":{name:"No flicker",gracePeriod:30,maxColorChange:200,maxFlickerIndex:4,maxPropOfCellsChanged:.5,minNumberOfCellsChanged:3,maxPropOfPlainColor:.97,activityLevelWindowSize:30,flickerIndexWindowSize:30},Strict:{name:"Strict",gracePeriod:30,maxColorChange:150,maxFlickerIndex:5,maxPropOfCellsChanged:.4,minNumberOfCellsChanged:15,maxPropOfPlainColor:.95,activityLevelWindowSize:30,flickerIndexWindowSize:30}}),st={"Ancient Greece I":{name:"Ancient Greece I",condition:"E1C[0|2:1]",deterministic:!0},"Bars I":{name:"Bars I",condition:"B1N[0|4:0]",deterministic:!0},"Blobs I":{name:"Blobs I",condition:"E3C[1|0:9]",deterministic:!0},"Diagonal I":{name:"Diagonal I",condition:"E4A2[0|4:2|3:0]",deterministic:!0},"Diamonds I":{name:"Diamonds I",condition:"E4C[1|0:4|0:8]",deterministic:!0},"Diamonds II":{name:"Diamonds II",condition:"E4C[1|0:5|0:7]",deterministic:!0},"Dots I":{name:"Dots I",condition:"B1C[0|9:0]",deterministic:!0},"Glyph I":{name:"Glyph I",condition:"B1N[0|4:2|3:0]",deterministic:!0},"Glyph II":{name:"Glyph II",condition:"E3C[0|7:2|3:1]",deterministic:!0},"Glyph III":{name:"Glyph III",condition:"E2C[0|7:2|4:0]",deterministic:!0},"Lines I":{name:"Lines I",condition:"B0A2[0|0:0|0:2]",deterministic:!0},"Morse I":{name:"Morse I",condition:"E4A3[1|0:4|0:7]",deterministic:!0},"Morse II":{name:"Morse II",condition:"B0A3[0|7:1|4:0]",deterministic:!0},"Morse III":{name:"Morse I",condition:"B0A3[0|4:0]",deterministic:!0},"Silouhette I":{name:"Silouhette I",condition:"E1C[0|0:0|0:1]",deterministic:!0},"Sparse blinkers I":{name:"Sparse blinkers I",condition:"B4N[1|0:6|0:2]"},"Stained glass I":{name:"Stained glass I",condition:"E8N[1|0:0]",deterministic:!0},"Stripes I":{name:"Stripes I",condition:"E1A4[0|3:0]",deterministic:!0}};Object.keys(st).reduce(((e,t)=>(e[st[t].condition]=t,e)),{}),Object.keys(st).filter((e=>!0===st[e].recommended)),Object.keys(st).filter((e=>!st[e].hideInApp));console.log("Loading main.js");var lt={gridHeight:192,gridWidth:192,targetCycleTime:0,addRandomness:!0,randomnessAmount:-1.5,randomisePeriodicityShiftAndTopology:!0,gridPeriodicityShiftX:null,gridPeriodicityShiftY:null,gridFlipX:!1,gridFlipY:!1,metaRule:"Variable",initialisation:"random",ruleSwitchPeriod:2e4,ruleEvolvePeriod:2e3,config:rt.Mixed,initialisationConfig:at.Vaccuum,sanityConfig:ot.Default},dt=new class{constructor({gridHeight:e=200,gridWidth:t=200,widthMult:n=1,heightMult:r=1,targetCycleTime:a=100,addRandomness:o=!0,randomnessAmount:s=-2,randomisePeriodicityShiftAndTopology:l=!0,randomSeedingInMaskOnly:d=!1,gridPeriodicityShiftX:g=null,gridPeriodicityShiftY:u=null,gridFlipX:h=!1,gridFlipY:m=!1,metaRule:c="VariableGR",initialisation:p="random",useLogo:f=!1,config:S=null,initialisationConfig:C=null,sanityConfig:I=null}={}){this.config=S,this.initialisationConfig=C,this.sanityConfig=I,this.paused=!1,this.step=!1,this.targetCycleTime=a,this.gridHeight=e,this.gridWidth=t,this.widthMult=n,this.heightMult=r,this.imageHeight=this.heightMult*this.gridHeight,this.imageWidth=this.widthMult*this.gridWidth,this.grid=new i(this.gridWidth,this.gridHeight),this.gridPeriodicityShiftX=g,null==this.gridPeriodicityShiftX&&(this.gridPeriodicityShiftX=Math.floor(1e3*Math.random())%this.gridWidth),this.gridPeriodicityShiftY=u,null==this.gridPeriodicityShiftY&&(this.gridPeriodicityShiftY=Math.floor(1e3*Math.random())%this.gridHeight),this.gridFlipX=h,this.gridFlipY=m,this.mask=null,this.findNeighbour=null,this.tempGridHeight=null,this.tempGridWidth=null,this.imageData=new Uint8ClampedArray(4*this.imageWidth*this.imageHeight).fill(0),this.redraw=new i(this.gridWidth,this.gridHeight),this.initialisation=p,this.useLogo=f,this.colors=[],this.nColors=4,this.addRandomness=o,this.randomnessAmount=s,this.randomisePeriodicityShiftAndTopology=l,this.randomSeedingInMaskOnly=d,this.reinitialiseGridFlag=!1,this.reinitialiseInTheTopHalf=!1,this.changeGridSizeFlag=!1,this.seedSampler=null,this.metaRule=c,this.ruleClass=null,this.updateCellValue=null,this.updateCellValueAuxiliary=null,this.currentRuleAndStyle=null,this.sampledRuleTemplate=null,this.time=0,this.ruleLogSwitchProbability=-25,this.styleLogEvolveProbability=-25,this.paletteLogSwitchProbability=-25,this.changeMetaRuleFlag=!0,this.changeRuleFlag=!1,this.changeBaseRuleFlag=!1,this.changeStyleFlag=!1,this.evolveStyleFlag=!1,this.reloadColorPaletteFlag=!1,this.logMultiplicativeFactor=0,this.logMultiplicativeEvolveFactor=0,this.logMultiplicativePaletteFactor=0,this.pauseEvolution=!1,this.activityLevel=0,this.activityLevelForRule=0,this.activeCells=0,this.nCellChangedHistoric=0,this.meanColorChangeHistoric=0,this.brightness=127,this.maxBrightness=130,this.minBrightness=124,this.diffBrightness=0,this.relCellChanged=0,this.flickerIndex=0,this.colorCount=[0,0,0,0],this.frameExecutionTime=0,this.logEvents=[],this.enableSanityChecks=!0,this.gif=null,this.gifMode="Download",this.startRecordingGifFlag=!1,this.stopRecordingGifFlag=!1,this.recordingGif=!1,this.nRecordedFrames=0,this.saveEventData=!1,this.updateGlobalDataFromConfig()}deepCopyInstance(e){const t=Object.create(Object.getPrototypeOf(e));for(let n in e)e.hasOwnProperty(n)&&("object"==typeof e[n]&&null!==e[n]?t[n]=JSON.parse(JSON.stringify(e[n])):t[n]=e[n]);return Object.getOwnPropertyNames(Object.getPrototypeOf(e)).forEach((n=>{"constructor"!==n&&(t[n]=e[n])})),t}resampleRuleClass(){this.ruleClass=new V(this)}updateGlobalDataFromConfig(){"timeBetweenStyleChanges"in this.config?this.logMultiplicativeEvolveFactor=25/this.config.timeBetweenStyleChanges:this.logMultiplicativeEvolveFactor=0,"timeBetweenRuleChanges"in this.config?this.logMultiplicativeFactor=25/this.config.timeBetweenRuleChanges:this.logMultiplicativeFactor=0,"timeBetweenPaletteChanges"in this.config&&(this.logMultiplicativePaletteFactor=25/this.config.timeBetweenPaletteChanges)}determineColorPalette(){_(this)}reloadColor(e){!function(e,t){let n=e.config.paletteConfig.colorPattern[t],i=e.colors.map((e=>e.name)),r=$(e,n,i);r.keepWithinRange(),e.colors[t]=r;let a="color "+t.toString();0==t&&(a="background color");let o=[a.charAt(0).toUpperCase()+a.slice(1)];for(let n=t+1;n<e.colors.length;n++)o.includes(e.colors[n].referenceColorName)&&(e.colors[n]=K(e,e.config.paletteConfig.colorPattern[n],i,n),o.push("Color "+n.toString()));M(e,"Col | Set the "+a+" to "+e.config.paletteConfig.colorPattern[t]+".")}(this,e)}adjustColorNumber(e){!function(e,t){let n=e.colors.map((e=>e.name));if(t>e.nColors)for(var i=e.nColors;i<t;i++){let t=e.config.paletteConfig.colorPattern[i];e.colors.push(K(e,t,n,i)),n.push(e.colors[i].name)}else t<e.nColors&&(e.colors=e.colors.slice(0,t));e.nColors=t,e.colorCount=new Array(e.nColors).fill(0)}(this,e)}}(lt);!function(e){e.canvasCornerX=0,e.canvasCornerY=0,e.canvas=document.getElementById("gameCanvas"),e.canvas.width=e.imageWidth,e.canvas.height=e.imageHeight,e.ctx=e.canvas.getContext("2d",{willReadFrequently:!0})}(dt),window.onload=function(){!function(e){document.getElementById("addRandomness").addEventListener("change",(function(){e.addRandomness=this.checked}))}(dt),function(e){document.getElementById("fullscreenButton").addEventListener("click",(function(){e.canvas.requestFullscreen?e.canvas.requestFullscreen():e.canvas.mozRequestFullScreen?e.canvas.mozRequestFullScreen():e.canvas.webkitRequestFullscreen?e.canvas.webkitRequestFullscreen():e.canvas.msRequestFullscreen&&e.canvas.msRequestFullscreen()}))}(dt),function(e){e.canvas.addEventListener("mousemove",(function(t){if(t.shiftKey){var n=e.canvas.getBoundingClientRect(),i=t.clientX-n.left,r=t.clientY-n.top,a=n.width/e.gridWidth,o=n.height/e.gridHeight,s=Math.floor(i/a),l=Math.floor(r/o);e.grid.set(l,s,1)}}))}(dt),function(e){e.canvas.addEventListener("mousedown",(function(t){var n=e.canvas.getBoundingClientRect(),i=t.clientX-n.left,r=t.clientY-n.top,a=n.width/e.gridWidth,o=n.height/e.gridHeight,s=Math.floor(i/a),l=Math.floor(r/o);t.shiftKey||t.ctrlKey?t.shiftKey&&!t.ctrlKey?(e.grid.set(l,(s+1)%e.gridWidth,1),e.grid.set(l,s,1),e.grid.set((l+1)%e.gridHeight,s,1)):!t.shiftKey&&t.ctrlKey?(e.grid.set(l,s,1),e.grid.set((l+1)%e.gridHeight,s,1)):t.shiftKey&&t.ctrlKey&&(e.grid.set(l,s,1),e.grid.set(l,(s+1)%e.gridWidth,1)):(e.grid.set((l+1)%e.gridHeight,(s+1)%e.gridWidth,1),e.grid.set((l-1+e.gridHeight)%e.gridHeight,(s+1)%e.gridWidth,1),e.grid.set((l-1+e.gridHeight)%e.gridHeight,(s-1+e.gridWidth)%e.gridWidth,1),e.grid.set((l+1)%e.gridHeight,(s-1+e.gridWidth)%e.gridWidth,1))}))}(dt),je(dt),Je(dt),function(e){document.getElementById("gridPeriodicityShiftX").addEventListener("input",(function(){let t=parseInt(this.value);isNaN(t)&&(t=0),e.gridPeriodicityShiftX=t,se(e)})),document.getElementById("gridPeriodicityShiftY").addEventListener("input",(function(){let t=parseInt(this.value);isNaN(t)&&(t=0),e.gridPeriodicityShiftY=t,se(e)})),document.getElementById("gridFlipX").addEventListener("change",(function(){e.gridFlipX=this.checked,se(e)})),document.getElementById("gridFlipY").addEventListener("change",(function(){e.gridFlipY=this.checked,se(e)}))}(dt),function(e){document.getElementById("targetCycleTime").addEventListener("input",(function(){let t=parseInt(this.value);isNaN(t)&&(t=0),e.targetCycleTime=t}))}(dt),function(e){document.getElementById("colorPalette").addEventListener("change",(function(){e.colorPalette=this.value,_(e)}))}(dt),function(e){document.getElementById("metaRule").addEventListener("change",(async function(){e.metaRule=this.value,e.changeMetaRuleFlag=!0,e.currentRuleAndStyle=e.ruleClass.getName()}))}(dt),function(e){document.getElementById("changeRule").addEventListener("click",(function(){e.changeRuleFlag=!0})),document.getElementById("changeBaseRule").addEventListener("click",(function(){e.changeBaseRuleFlag=!0})),document.getElementById("changeColoringRule").addEventListener("click",(function(){e.changeStyleFlag=!0})),document.getElementById("evolveColoringRule").addEventListener("click",(function(){e.evolveStyleFlag=!0})),null!==document.getElementById("reinitialiseGrid")&&document.getElementById("reinitialiseGrid").addEventListener("click",(function(){e.reinitialiseGridFlag=!0})),null!==document.getElementById("recordGif")&&document.getElementById("recordGif").addEventListener("click",(function(){e.recordingGif?(e.recordingGif=!1,e.stopRecordingGifFlag=!0,this.textContent="Record gif"):(e.recordingGif=!0,e.startRecordingGifFlag=!0,this.textContent="Stop recording")}))}(dt),function(e){document.getElementById("changeColor").addEventListener("click",(function(){e.reloadColorPaletteFlag=!0}))}(dt),function(e){document.getElementById("saveEventCheckbox").addEventListener("change",(function(){e.saveEventData=this.checked})),document.getElementById("likeButton").addEventListener("click",(function(){Qe(e)})),document.getElementById("dislikeButton").addEventListener("click",(function(){Qe(e)}))}(dt),function(e){const t=document.getElementById("playPauseButton");t.addEventListener("click",(()=>{e.paused=!e.paused,t.textContent=e.paused?"Pause":"Play",console.log("Paused",e.paused)})),document.getElementById("stepButton").addEventListener("click",(()=>{e.paused=!0,e.step=!0}))}(dt),function(e){Object.keys(e).forEach((t=>{let n=localStorage.getItem(t);null!==n&&("boolean"==typeof e[t]?e[t]="true"===n:"number"==typeof e[t]?e[t]=parseFloat(n):e[t]=n)}))}(dt),function(e){Object.keys(e).forEach((t=>{let n=document.getElementById(t);n&&("checkbox"===n.type?n.checked=e[t]:n.value=e[t])}))}(dt),function(e){e.canvas.width=Math.max(e.imageHeight,e.imageWidth),e.canvas.height=Math.max(e.imageHeight,e.imageWidth),e.canvasCornerX=0,e.canvasCornerY=0;var t=document.getElementById("gameCanvas");if(e.imageHeight>e.imageWidth){var n=Math.floor(e.imageWidth/e.imageHeight*800);t.style.width=n+"px",t.style.height="800px",t.width=n*e.imageHeight/800,t.height=e.imageHeight}else{var i=Math.floor(e.imageHeight/e.imageWidth*800);t.style.width="800px",t.style.height=i+"px",t.width=e.imageWidth,t.height=i*e.imageWidth/800}e.imageData=new Uint8ClampedArray(4*e.imageWidth*e.imageHeight)}(dt),se(dt),function(e){e.stagingConfigs={...rt,...Xe},e.ruleConfigs=L,e.styleConfigs=_e,e.conditionConfigs=st,e.paletteConfigs=Ze,e.colorConfigs=z,e.sanityConfigs=ot,e.randomnessConfigs=D,e.initialisationConfigs=at,e.seedingConfigs=O}(dt),function(e){te(e,!0)}(dt);let e=atob("c2FtMzE0MTUuZ2l0aHViLmlv");window.location.hostname!==e&&""!==window.location.hostname||ye(dt).then((()=>{ze(dt,Ye)})).catch((e=>{console.error("Error initialising the grid: ",e)}))}})();
(()=>{"use strict";var e={},t={};function i(n){var r=t[n];if(void 0!==r)return r.exports;var a=t[n]={exports:{}};return e[n](a,a.exports,i),a.exports}class n{constructor(e,t){this.width=e,this.height=t,this.data=new Uint8Array(this.width*this.height),this.rows=new Array(this.height),this.transposed=!1,this.get=this.getNormal,this.set=this.setNormal}static fromArray(e,t=!1,i=!1,r=!1){const a=e.length,o=e[0].length,s=new n(o,a);for(let t=0;t<a;t++){r&&(t=a-t-1);for(let n=0;n<o;n++)i&&(n=o-n-1),s.set(t,n,e[t][n])}return t&&s.transpose(),s}toArray(){const e=[];for(let t=0;t<this.height;t++){const i=[];for(let e=0;e<this.width;e++)i.push(this.get(t,e));e.push(i)}return e}clone(){const e=new n;for(let t in this)this.hasOwnProperty(t)&&("object"==typeof this[t]&&null!==this[t]?e[t]=JSON.parse(JSON.stringify(this[t])):e[t]=this[t]);return e}transpose(){[this.width,this.height]=[this.height,this.width],[this.get,this.set]=this.transposed?[this.getNormal,this.setNormal]:[this.getTransposed,this.setTransposed],this.transposed=!this.transposed}flipX(){for(let e=0;e<this.height;e++)for(let t=0;t<this.width/2;t++){const i=this.get(e,t);this.set(e,t,this.get(e,this.width-t-1)),this.set(e,this.width-t-1,i)}}flipY(){for(let e=0;e<this.height/2;e++)for(let t=0;t<this.width;t++){const i=this.get(e,t);this.set(e,t,this.get(this.height-e-1,t)),this.set(this.height-e-1,t,i)}}getNormal(e,t){return this.data[e*this.width+t]}setNormal(e,t,i){this.data[e*this.width+t]=i}getTransposed(e,t){return this.data[t*this.height+e]}setTransposed(e,t,i){this.data[t*this.height+e]=i}}const r=15,a=new Uint8Array([0,1,2,7,-1,3,6,5,4]);function o(e,t,i,n,r,o,s,l){const d=n.height-1,g=n.width-1,h=n.data,u=n.width;for(var m,c,p=r[0],S=r[1],f=-1;f<=1;f++)for(var I=-1;I<=1;I++){if(0==f&&0==I)continue;if(m=f+1,c=I+1,0==t||0==i||t==d||i==g)var[C,R]=e.findNeighbour(e,t,i,f,I);else var C=t+f,R=i+I;const n=h[C*u+R],r=n%o;if(r>0&&(p[r-1+s*a[3*m+c]]+=1),0==l)continue;S[Math.floor(n/o)%l+l*a[3*m+c]]+=1}return[p,S]}const s="mix";function l(e){let t=Object.values(e).reduce(((e,t)=>e+t),0),i=Object.values(e).reduce(((e,i,n)=>[...e,i/t+(e[n-1]||0)]),[]);return function(){let t=Math.random(),n=i.findIndex((e=>t<e));return Object.keys(e)[n]}}function d(e){return e.replace(/\[([0-9a-h]+)\]|\{([0-9A-Za-z|]+)\}/g,((e,t,i)=>{if(t){let e="";for(const i of t)Math.random()>.5&&(e+=i);return e}if(i){const e=i.split("|");return e[Math.floor(Math.random()*e.length)]}}))}const g=5e3;var h=new Date(0);function u(e,t){const i=new Date,n=`[${i.toLocaleTimeString()}] ${t}`;if(e.logEvents.length>0){const n=e.logEvents[e.logEvents.length-1];if(t==n.substring(n.indexOf("] ")+2)&&i-h<g)return}e.logEvents.push(n),e.logEvents.length>50&&(e.logEvents=e.logEvents.slice(-50)),h=i,console.log(n)}function m(e,t,i){let n=[],r=[];for(var a of e)n.push(Math.floor(a/t)%8),r.push(a%t+1);n=Array.from(new Set(n)),n.sort(((e,t)=>e-t)),r=Array.from(new Set(r)),r.sort(((e,t)=>e-t));var o="N"+[0,1,2,3,4,5,6,7].map((e=>n.includes(e)?"":"abcdefgh"[e])).join(""),s=r.join(".");return o+String(i)+":"+s}function c(e,t){var i,n,r=[];if(null==e||""==e){i=[];for(let e=0;e<8;e++)i.push(e),r.push(e*t);n=2}else{var a=e.split(":");[i,n]=function(e){const t={a:0,b:1,c:2,d:3,e:4,f:5,g:6,h:7};var i=[0,1,2,3,4,5,6,7],n=2;for(let r of e)t.hasOwnProperty(r)&&(i=i.filter((e=>e!==t[r]))),p(r)&&(n=parseInt(r));return[i,n]}(a[0]);var o=a[1];if(o&&o.length>0)for(var s of o.split("."))if(""!=s&&parseInt(s)<t-1)for(var l of i)r.push(l*t+parseInt(s)-1);0==r.length&&r.push(parseInt(i)*t)}return[r,n]}function p(e){return/\d/.test(e)}class S{constructor(){this.nStates=void 0}updateRule(e,t,i,n){throw new Error("Must override method")}getName(){throw new Error("Must override method")}}class f extends S{constructor(e){super(),this.seedingPatterns=this.getSeedingPatterns(),this.constructSeedingSampler(e,!0),this.randomnessLogShift=0}getSeedingPatterns(){throw new Error("Must override method")}constructSeedingSampler(e,t=!0,i=!0,n=!1){t&&null!=e.config.ruleConfig.randomnessConfig?e.config.randomnessConfig=JSON.parse(JSON.stringify(e.config.ruleConfig.randomnessConfig)):t&&(e.config.randomnessConfig=JSON.parse(JSON.stringify(e.randomnessConfigs.Generations))),i||null==e.config.randomnessConfig.sampledSeedingPreset?(e.config.randomnessConfig.sampledSeedingPreset=l(e.config.randomnessConfig.seedingWeightsWeights)(),u(e,"Rand | Sampled seeding weights "+e.config.randomnessConfig.sampledSeedingPreset+"."),e.config.randomnessConfig.sampledSeedingWeights=e.config.randomnessConfig.seedingWeights[e.config.randomnessConfig.sampledSeedingPreset]):n&&null!=e.config.randomnessConfig.sampledSeedingPreset&&null!=e.config.randomnessConfig.seedingWeights[e.config.randomnessConfig.sampledSeedingPreset]&&(e.config.randomnessConfig.sampledSeedingWeights=e.config.randomnessConfig.seedingWeights[e.config.randomnessConfig.sampledSeedingPreset],u(e,"Rand | Changed seeding weights "+e.config.randomnessConfig.sampledSeedingPreset+".")),e.seedSampler=l({...e.config.randomnessConfig.sampledSeedingWeights,...e.config.randomnessConfig.randomSeedingWeights})}}class I extends f{constructor(e,t,i){super(e),null!=t||i||(t=I.generateRule()),i||this.initialiseRule(e,t)}updateRule(e,t,i,n){var r=e%this.nStates;return 1==r&&this.survive.includes(this.neighbourhood[1].reduce(((e,t)=>e+i[0][(t+this.shiftS)%this.nNeighbours]),0))?t=1:r>0&&r<this.nStates-1?t+=1:r==this.nStates-1?t=0:0==r&&this.birth.includes(this.neighbourhood[0].reduce(((e,t)=>e+i[0][(t+this.shiftB)%this.nNeighbours]),0))?t=1:0==r&&this.inhibited.includes(this.neighbourhood[2].reduce(((e,t)=>e+i[0][(t+this.shiftI)%this.nNeighbours]),0))&&(t=this.nStates-1),t}setTimeShifts(e){this.shiftB=this.neighbourhoodRotation[0]*e%8*(this.nStates-1),this.shiftS=this.neighbourhoodRotation[1]*e%8*(this.nStates-1),this.shiftI=this.neighbourhoodRotation[2]*e%8*(this.nStates-1),this.nNeighbours=8*(this.nStates-1)}getRuleString(e,t,i,n,r){let a=e.map(((e,t)=>m(e,r-1,this.neighbourhoodRotation[t]))),o=`B${t.join("")}`;return"N:1"!=a[0]&&(o+=`|${a[0]}`),o+=`/S${i.join("")}`,"N:1"!=a[1]&&(o+=`|${a[1]}`),o+=`/I${n.join("")}`,"N:1"!=a[2]&&(o+=`|${a[2]}`),o+=`/G${r}`,o}getNeighbourhoodFromString(e,t,i){var[n,r]=c(e,this.nStates-1);return this.neighbourhood[t]=n,this.neighbourhoodRotation[t]=r,i[t]=this.neighbourhood[t].length,i}initialiseRule(e,t,i=null){this.ruleString=d(t);const n=this.ruleString.split("/");this.neighbourhood=[0,0,0],this.neighbourhoodRotation=[2,2,2],this.inhibited=[],this.nStates=Number(n[n.length-1].substring(1));var r=[8,8,8];for(var a of n)if("B"==a[0]){let e=0,[t,i]=a.substring(1).split("|");this.birth=new Uint8Array(t.split("").map(Number)),r=this.getNeighbourhoodFromString(i,e,r),this.birth=new Uint8Array(Array.from(this.birth).filter((t=>t<=r[e])))}else if("S"==a[0]){let e=1,[t,i]=a.substring(1).split("|");this.survive=new Uint8Array(t.split("").map(Number)),r=this.getNeighbourhoodFromString(i,e,r),this.survive=new Uint8Array(Array.from(this.survive).filter((t=>t<=r[e])))}else if("I"==a[0]){let e=2,[t,i]=a.substring(1).split("|");this.inhibited=new Uint8Array(t.split("").map(Number)),r=this.getNeighbourhoodFromString(i,e,r),this.inhibited=new Uint8Array(Array.from(this.inhibited).filter((t=>t<=r[e])))}this.ruleString=this.getRuleString(this.neighbourhood,this.birth,this.survive,this.inhibited,this.nStates),null==i&&(i=t),u(e,"Rul | Sampled rulestring "+this.ruleString+" from the rule template "+i+".")}static generateRule(e){let t=Math.floor(10*Math.random())+3,i=[8,8,8];null==e&&(e=[Math.floor(Math.random()*r*(t-1)),Math.floor(Math.random()*r*(t-1)),Math.floor(Math.random()*r*(t-1))]);let n=[Math.floor(e[0]/(t-1))%r,Math.floor(e[1]/(t-1))%r,Math.floor(e[2]/(t-1))%r];for(let e=0;e<3;e++)i[e]=(o=void 0,o=8,[1,2].includes(a=n[e])?o=4:[3,5,7,9].includes(a)?o=3:[4,6,8,10].includes(a)?o=5:[11,13].includes(a)?o=6:[12,14].includes(a)&&(o=2),o);var a,o;let s=this.generateRandomArray(1,i[0]);0==s.length&&(s=[2]);let l=this.generateRandomArray(1,i[1]),d=this.generateRandomArray(1,i[2]);return d=d.filter((e=>!s.includes(e)&&!l.includes(e)&&2!=e)),this.getRuleString(e,s,l,d,t)}static generateRandomArray(e,t){let i=[];for(let n=e;n<=t;n++)Math.random()<.5&&i.push(n);return i}getName(){return this.ruleString}getSeedingPatterns(){return{random:{prob:1,mask:null}}}setRuleElement(e,t,i){if("B"==e)if("neighbours"==t)this.birth=i.split("").map(Number);else{let e=Math.floor(this.neighbourhood[0]/(nStates-1))%r,n=this.neighbourhood[0]%(nStates-1);"neighbourhood"==t?this.neighbourhood[0]=i*(nStates-1)+n:"state"==t&&(this.neighbourhood[0]=e*(nStates-1)+i)}else if("S"==e)if("neighbours"==t)this.survive=i.split("").map(Number);else{let e=Math.floor(this.neighbourhood[1]/(nStates-1))%r,n=this.neighbourhood[1]%(nStates-1);"neighbourhood"==t?this.neighbourhood[1]=i*(nStates-1)+n:"state"==t&&(this.neighbourhood[1]=e*(nStates-1)+i)}else if("I"==e)if("neighbours"==t)this.inhibited=i.split("").map(Number);else{let e=Math.floor(this.neighbourhood[2]/(nStates-1))%r,n=this.neighbourhood[2]%(nStates-1);"neighbourhood"==t?this.neighbourhood[2]=i*(nStates-1)+n:"state"==t&&(this.neighbourhood[2]=e*(nStates-1)+i)}}}class C extends I{constructor(e,t,i=null){super(e,null,!0),this.initialiseRule(e,t),e.birth3=this.birth[0]**3,e.ruleRegularisationSeed=this.ruleRegularisationSeed}updateRule(e,t,i,n,r){var a=e%this.nStates;return 1==a&&this.survive.includes(this.neighbourhood[1].reduce(((e,t)=>e+i[0][(t+this.shiftS)%this.nNeighbours]),0))&&Math.random()>r/4-.05?t=1:a>0&&a<this.nStates-1?t+=1:a==this.nStates-1?t=0:0==a&&this.birth.includes(this.neighbourhood[0].reduce(((e,t)=>e+i[0][(t+this.shiftB)%this.nNeighbours]),0))&&Math.random()>r-.05?t=1:0==a&&this.inhibited.includes(this.neighbourhood[2].reduce(((e,t)=>e+i[0][(t+this.shiftI)%this.nNeighbours]),0))&&(t=this.nStates-1),t}getName(){return`${this.ruleString}/R${this.ruleRegularisationSeed.toFixed(0)}`}initialiseRule(e,t){if(t.includes("R")){var i=t;t=d(t),this.ruleRegularisationSeed=parseFloat(t.split("R")[1]);const n=t.split("/").slice(0,-1).join("/");super.initialiseRule(e,n,i)}else super.initialiseRule(e,t),this.ruleRegularisationSeed=0}}const R="A",y="C",b="E",B="B";class v{constructor(e,t,i,n,r,a,o,s,l,d=null){this.type=e,this.threshold=t,this.inactivation=i,this.modulo=n,this.domain=r,this.neighbourhoodIndices=a,this.neighbourhoodRotation=o,this.periodicity=d,this.nStatesPrimary=s,this.nStatesSecondary=l,this.shift=0,this.neighbourhoodRotation=2,this.nStates=0==this.domain?this.nStatesPrimary-1:this.nStatesSecondary,this.nNeighbours=8*this.nStates,this.testInactive=function(e,t){return e==y?function(e){return 0==e}:e==R?function(e){return e%t==0}:function(e){return!0}}(this.inactivation,this.modulo),this.testValue=function(e,t,i,n,r){return t==b?function(t,a){return n.reduce(((e,n)=>e+t[i][(n+a)%r]),0)==e}:t==B?function(t,a){return n.reduce(((e,n)=>e+t[i][(n+a)%r]),0)>e}:void 0}(this.threshold,this.type,this.domain,this.neighbourhoodIndices,this.nNeighbours),this.testPeriodicity=function(e){let t;return t=null==e?function(e){return!0}:function(t){return e[t%e.length]},t}(d)}test(e,t,i){return this.testValue(e,this.shift)&&this.testInactive(t)&&this.testPeriodicity(i)}setTimeShifts(e){this.shift=this.neighbourhoodRotation*e%8*this.nStates}name(){var e="";null!=this.periodicity&&this.periodicity.length>1&&(e=this.periodicity.map((e=>e?"1":"0")).join(""));var t=`${this.domain}|`;t+=m(this.neighbourhoodIndices,this.nStates,this.neighbourhoodRotation);var i=this.inactivation;return this.inactivation==R&&(i+=this.modulo),`${this.type}${this.threshold}${i}[${t}]${e}`}static fromName(e,t,i){var n=null,r=4;e.startsWith(b)?n=b:e.startsWith(B)&&(n=B);var a=e.substring(n.length),o=parseInt(a.substring(0,1)),s=null;(a=a.substring(1)).startsWith(y)?s=y:a.startsWith(R)?(isNaN(a.charAt(1))||(r=parseInt(a.charAt(1)),a=a.substring(1)),s=R):a.startsWith("N")&&(s="N");var l=(a=a.substring(s.length)).split("[")[1].split("]")[0].split("|"),d=parseInt(l[0]),[g,h]=c(l[1],0==d?t-1:i),u=null;return(a=a.split("]")[1]).length>0&&(u=a.split("").map((e=>"1"===e))),new v(n,o,s,r,d,g,h,t,i,u)}static shuffleArray(e){for(let t=e.length-1;t>0;t--){const i=Math.floor(Math.random()*(t+1));[e[t],e[i]]=[e[i],e[t]]}return e}static sampleRandomGenerations(e,t){const i=e[t]-1;let n=[];for(let e=0;e<i;e++)Math.random()<1/i&&n.push(e);return 0==n.length?n.push(Math.floor(Math.random()*i)):n.length>6&&(n=this.shuffleArray(n).slice(0,6)),n.sort(((e,t)=>e-t)),n}static randomSample(e,t,i=null,n=null){var r=[e,t];const a=[b,B],o=a[Math.floor(Math.random()*a.length)],s=[y,R,"N"],g=s[Math.floor(Math.random()*s.length)];null===i&&(i={0:2/3,1:1/3});var h=l(i);const u=parseInt(h()),m=this.sampleRandomGenerations(r,u),[p,S,f]=function(e,t){const i=e.join(".");for(var n=d("N[abcdefgh]{0|1|2|3|4|5|6|7}");n.length<4;)n=d("N[abcdefgh]{0|1|2|3|4|5|6|7}");n+=":"+i;const[r,a]=c(n,t);return[r,a,n.length-2]}(m,r[u]);var I,C=0;if(C=o===B?Math.floor(Math.random()*f):Math.floor(Math.random()*f)+1,I=Math.random()<.5&&g==R?Math.floor(5*Math.random())+2:0==u?e:t,Math.random()<.2)G=null;else{var G;null==n&&(n=Math.floor(20*Math.random())+2);do{G=new Array(n).fill(0).map((()=>Math.random()<.5))}while(!G.includes(!0))}return new v(o,C,g,I,u,p,S,e,t,G)}}class G extends S{constructor(e,t,i,n,r=4,a=!0){super(),this.conditions=e,this.nStates=this.conditions.length+1,this.nStatesPrimary=r,this.conditionLevels=t,this.neighbourhoodGeometryType=i,this.periodicityLength=n,this.logStyleChange=a}updateRule(e,t,i,n){t=0;for(let r=0;r<this.conditions.length;r++)if(this.conditions[r].test(i,e,n)){t=r+1;break}return t}getName(){return this.conditions.map((e=>e.name())).join("||")}setTimeShifts(e){this.conditions.forEach((t=>t.setTimeShifts(e)))}static sampleRule(e,t,i,n=!0){var r=t.nConditions,a=t.chosenConditionLevels,o=t.neighbourhoodGeometryType,s=t.periodicityLength,l=[];null==r&&(r=Math.floor(8*Math.random())+2),null==s&&(s=this.samplePeriodicityLength());var d=r+1;for(let e=0;e<r;e++)l.push(v.randomSample(i,d,a,s));var g=new G(l,a,o,s,i,n);return n&&u(e,"Sty | Sampled style "+g.getName()+"."),g}static samplePeriodicityLength(){var e=Math.random();return e<.2?null:e<.6?1:e<.7?2:e<.8?3:e<.9?4:Math.floor(20*Math.random())+5}static ruleFromNames(e,t){var i=(e=d(e)).split("||"),n=i.map((e=>v.fromName(e,t,i.length+1)));return new G(n,null,s,null)}evolveRule(e,t=null){var i,n=this.conditions.length;null==t&&(t=this.conditionLevels),i=2==n?Math.floor(2*Math.random())+1:10==n?Math.floor(2*Math.random()):Math.floor(3*Math.random());var r=e.config.styleConfig.nDeterministicConditions??0;0==i?this.removeCondition(e,r):1==i?this.changeCondition(e,t,r):this.addCondition(e)}addCondition(e){var t=this.conditions.slice(),i=v.randomSample(this.nStatesPrimary,this.nStates,this.conditionLevels,this.neighbourhoodGeometryType,this.periodicityLength);this.logStyleChange&&u(e,"Sty | Adding condition "+i.name()+" to the current style "+this.getName()+". New style: "+this.getName()+".");t.push(i),this.conditions=t}removeCondition(e,t,i=!1){var n=this.conditions.slice(),r=n.length-1;i||(r=Math.floor(Math.random()*(n.length-t))+t);var a=(r+1).toString();this.logStyleChange&&u(e,"Sty | Removing condition "+a+" from the current style "+this.getName()+". New style: "+this.getName()+".");n.splice(r,1)[0],this.conditions=n}changeCondition(e,t,i){var n=this.conditions.slice(),r=Math.floor(Math.random()*(n.length-i))+i,a=(r+1).toString();this.logStyleChange&&u(e,"Sty | Replacing condition "+a+" from the current style "+this.getName()+". New style: "+this.getName()+".");n[r]=v.randomSample(this.nStatesPrimary,this.nStates,t,this.neighbourhoodGeometryType,this.periodicityLength),this.conditions=n}}const W={"Beating Beacons":{Beacon:[[1,1],[1,1]],"Cruiser I":[[0,0,0,0,1,1,0,0,0,0],[0,0,0,1,2,2,1,0,0,0],[0,0,1,2,0,0,2,1,0,0],[0,0,2,0,0,0,0,2,0,0],[0,1,0,0,0,0,0,0,1,0],[0,2,0,0,0,0,0,0,2,0],[1,0,0,0,0,0,0,0,0,1],[2,0,0,0,0,0,0,0,0,2]],"Cruiser II":[[0,0,0,0,1,1,0,0,0,0],[0,0,0,0,2,2,0,0,0,0],[0,0,0,1,0,0,1,0,0,0],[0,0,0,2,0,0,2,0,0,0],[0,0,1,0,0,0,0,1,0,0],[0,1,2,0,0,0,0,2,1,0],[1,2,0,0,0,0,0,0,2,1],[2,0,0,0,0,0,0,0,0,2]],"Cruiser III":[[0,0,0,0,1,1,0,0,0,0],[0,0,0,1,2,2,1,0,0,0],[0,0,1,2,0,0,2,1,0,0],[0,1,2,0,0,0,0,2,1,0],[1,2,0,0,0,0,0,0,2,1],[2,0,0,0,0,0,0,0,0,2]],"Cruiser IV":[[0,0,0,0,1,1,0,0,0,0],[0,0,0,0,2,2,0,0,0,0],[0,0,0,1,0,0,1,0,0,0],[0,0,0,2,0,0,2,0,0,0],[0,0,1,0,0,0,0,1,0,0],[0,0,2,0,0,0,0,2,0,0],[0,1,0,0,0,0,0,0,1,0],[0,2,0,0,0,0,0,0,2,0],[1,0,0,0,0,0,0,0,0,1],[2,0,0,0,0,0,0,0,0,2]],"Diamond Wave":[[1,1]],"Double Wave":[[0,0,0,2,0],[0,1,1,2,2],[0,1,1,1,0],[2,2,1,1,0],[0,2,0,0,0]],"Gunning Ship":[[0,0,0,0,1,1,0,0,0,0],[0,0,0,1,1,1,1,0,0,0],[0,0,0,0,1,1,0,0,0,0],[0,0,1,1,3,3,1,1,0,0],[0,0,1,1,3,3,1,1,0,0],[0,1,1,1,5,5,1,1,1,0],[0,2,2,1,5,5,1,2,2,0],[1,1,2,1,7,7,1,2,1,1],[2,4,4,2,7,7,2,4,4,2],[0,0,4,0,0,0,0,4,0,0]],"Glitching Ship":[[0,0,0,1,1,0,0,0],[0,0,1,1,1,1,0,0],[0,0,1,2,2,1,0,0],[0,1,1,2,2,1,1,0],[0,0,1,4,4,1,0,0],[1,1,1,4,4,1,1,1],[0,1,1,6,6,1,1,0],[0,0,1,6,6,1,0,0],[0,0,0,8,8,0,0,0],[0,0,0,8,8,0,0,0]],Ship:[[1,1],[2,2]],Shuttle:[[0,1,1,0],[1,1,1,1],[2,2,2,2]],"Triangular Wave":[[0,1,1,0],[0,1,1,0],[1,1,1,1],[2,2,2,2]],"Wing v1":[[1,1,0],[2,2,1],[0,0,2]],"Wing v2":[[1,1,0,0],[2,2,1,0],[0,0,2,1],[0,0,0,2]],"Wing v3":[[1,1,0,0,0],[2,2,1,0,0],[0,0,2,1,0],[0,0,0,2,1],[0,0,0,0,2]]},"Bilious Billows":{Caterpillar:[[1,2,1],[3,4,3]],"Caterpillar II":[[1,2,2,1],[3,4,4,3],[0,0,0,0],[0,0,0,0],[1,2,1,0],[3,4,3,0]],"Caterpillar III":[[0,1,3,2],[3,4,6,5],[6,7,9,8]],"Diagonal Caterpillar":[[0,0,0,1,0],[0,0,5,4,2],[0,9,8,6,3],[13,12,10,7,0],[0,14,11,0,0]],Spinner:[[0,1,2,1,0],[0,4,5,3,0],[2,6,8,7,5],[8,10,11,9,13],[9,12,13,14,0]],"Wave I":[[0,1],[1,1],[1,1],[0,1]],"Wave II":[[0,1],[1,1],[1,1],[1,1],[0,1]],"Wave III":[[1,0],[1,1],[1,1],[0,1]],"Wave IV":[[0,0,1,0,0,0],[0,0,1,0,0,0],[0,0,1,1,1,1],[1,1,1,1,0,0],[0,0,0,1,0,0],[0,0,0,1,0,0]]},"Brian's Brain":{Butterfly:[[0,0,1,2],[0,2,0,0],[1,2,1,0]],"Butterfly Bomber":[[0,2,1,0,0,0,0,0],[0,0,2,1,0,0,0,0],[2,0,0,2,1,0,0,0],[1,2,0,0,2,1,0,0],[0,1,0,2,1,0,2,1],[0,0,2,1,0,0,2,1]],"Diamond Wave":[[1,1]],"Oscillator I":[[0,0,1,0],[1,2,2,0],[0,2,2,1],[0,1,0,0]],"Oscillator II":[[0,0,2,0,0,0,0],[0,1,1,0,0,1,0],[0,0,2,1,2,1,2],[0,0,1,0,1,0,0],[2,1,2,1,2,0,0],[0,1,0,0,1,1,0],[0,0,0,0,2,0,0]],"Short-lived Star":[[1,0],[0,1]],Snake:[[0,1,2,1,2,1,0],[1,2,0,1,0,2,1],[1,2,0,1,0,2,1],[0,1,2,1,2,1,0]],Spaceship:[[1,1],[2,2]],"Square Wave":[[1,1],[1,1]],Star:[[1,0,1],[0,0,0],[1,0,1]]},"Cranky Crawlers":{Crawler:[[2,1,1,2],[0,2,2,0],[0,3,3,0]],"Crawler Twins":[[1,1,0,0,1,1],[2,2,0,0,2,2]],"Double Crawler":[[1,1]],"Double Crawler II":[[1,1],[1,0]],Quartet:[[1,1],[1,1]]},"Crummy Cruisers":{Cruiser:[[1,1],[1,1],[1,1],[2,2]],Quartet:[[1,1],[1,1]],Ship:[[1,1],[2,2]],"Wide Quartet":[[1,1,0,0,1,1],[1,1,0,0,1,1],[0,0,1,1,0,0],[0,0,1,1,0,0],[1,1,0,0,1,1],[1,1,0,0,1,1]],"Quartet XXL":[[1,1,0,0,1,1,0,0,1,1],[1,1,0,0,1,1,0,0,1,1],[0,0,1,1,2,2,1,1,0,0],[0,0,1,1,0,0,1,1,0,0],[1,1,2,0,0,0,0,2,1,1],[1,1,2,0,0,0,0,2,1,1],[0,0,1,1,0,0,1,1,0,0],[0,0,1,1,2,2,1,1,0,0],[1,1,0,0,1,1,0,0,1,1],[1,1,0,0,1,1,0,0,1,1]],"Double Ship":[[1,1]],"Twisted Quartet":[[0,0,1,1],[0,0,1,1],[1,1,0,0],[1,1,0,0]],"Burning Cruiser":[[2,1,1,2],[2,1,1,2],[2,2,2,2]],"Burning Ship":[[0,1,1],[0,1,1],[1,1,1]],"Double Cruiser II":[[1,1,0,0,1,1],[1,1,0,0,1,1],[2,2,1,1,2,2],[0,0,1,1,0,0],[0,0,2,2,0,0]],"Double Cruiser I":[[1,1,0,0,1,1],[1,1,0,0,1,1],[1,1,1,1,1,1],[2,2,1,1,2,2],[0,0,2,2,0,0]],"Triple Trouble":[[1,1,0,0,1,1,0,0,1,1],[1,1,0,0,1,1,0,0,1,1],[2,2,1,1,2,2,1,1,2,2],[0,0,1,1,0,0,1,1,0,0],[0,0,2,2,0,0,2,2,0,0]],"Triple Trouble II":[[1,1,0,0,1,1,0,0,1,1],[1,1,0,0,1,1,0,0,1,1],[1,1,0,0,1,1,0,0,1,1],[2,2,1,1,2,2,1,1,2,2],[0,0,1,1,0,0,1,1,0,0],[0,0,2,2,0,0,2,2,0,0]],"Triple ship":[[1,1,0,0,1,1,0,0,1,1],[2,2,0,0,2,2,0,0,2,2],[0,0,1,1,0,0,1,1,0,0],[0,0,2,2,0,0,2,2,0,0]],"Triple Trouble III":[[1,1,0,0,1,1,0,0,1,1],[2,2,1,1,2,2,1,1,2,2],[0,0,1,1,0,0,1,1,0,0],[0,0,2,2,0,0,2,2,0,0]],"Burning Cruiser II":[[0,0,0,1,1,0,0,0],[0,0,0,1,1,0,0,0],[2,1,1,2,2,1,1,2],[2,1,1,0,0,1,1,2],[2,2,2,0,0,2,2,2]]},"Extravagant Extenders":{"Binary Star":[[0,1,0,0],[1,1,1,0],[0,1,1,1],[0,0,1,0]],Extender:[[0,1,1,0],[1,1,1,1],[2,1,1,2],[0,2,2,0]],"Extender Gun":[[0,1,1,0],[0,1,2,1],[0,1,1,2],[0,1,5,4],[0,1,1,5],[0,1,8,7],[2,3,4,8],[4,5,0,0],[6,7,9,0],[9,2,0,0]],"Quadruple Extender I":[[1,1],[1,1]],"Quadruple Extender II":[[0,1,1,0],[1,1,1,1],[1,1,1,1],[0,1,1,0]],"Quadruple Scout":[[1,0,0,0,0,1],[0,1,1,1,1,0],[0,1,1,1,1,0],[0,1,1,1,1,0],[0,1,1,1,1,0],[1,0,0,0,0,1]],Scout:[[1,1],[2,2]],"Star I":[[0,1,0],[1,1,1],[0,1,0]],"Star II":[[0,6,6,6,0,0],[0,1,2,5,0,0],[6,6,1,1,1,0],[6,2,1,1,6,6],[6,4,5,3,2,6],[0,0,0,0,0,6]]},"Fancy Fans":{"Asymmetric Wing v7":[[1,2,0,0,0,0],[1,2,0,0,0,0],[0,1,2,2,0,0],[0,0,1,1,2,2],[0,0,0,0,1,1]],"Asymmetric Wing v8":[[2,2,0,0,0,0,0,0],[1,1,2,2,0,0,0,0],[0,0,1,1,2,2,0,0],[0,0,0,0,1,1,2,2],[0,0,0,0,0,0,1,1]],"Asymmetric Wing v6":[[2,2,0,0,0,0],[1,1,2,2,0,0],[0,0,1,1,2,2],[0,0,0,0,1,1]],"Asymmetric Wing v10":[[2,2,0,0,0,0,0,0,0,0],[1,1,2,2,0,0,0,0,0,0],[0,0,1,1,2,2,0,0,0,0],[0,0,0,0,1,1,2,2,0,0],[0,0,0,0,0,0,1,1,2,2],[0,0,0,0,0,0,0,0,1,1]],"Double Walker":[[1],[1],[1]],"Inverted Wing v12":[[1,2,2,0,0,0,0,0,0,0],[0,1,1,2,2,0,0,0,0,0],[0,0,0,1,1,2,0,0,0,0],[0,0,0,0,0,1,2,0,0,0],[0,0,0,0,0,0,1,2,0,0],[0,0,0,0,0,0,0,1,2,0],[0,0,0,0,0,0,0,1,2,0],[0,0,0,0,0,0,0,0,1,2],[0,0,0,0,0,0,0,0,1,2],[0,0,0,0,0,0,0,0,0,1]],Quartet:[[1,1,1,1],[1,0,0,1],[1,0,0,1],[1,1,1,1]],Quintet:[[1,1,0,0,0,0,0],[1,0,1,0,0,0,0],[0,1,1,1,0,0,1],[0,0,0,1,1,1,1],[0,0,0,0,0,1,1]],"Ship v4":[[1,2,0,0],[0,1,2,0],[0,0,1,2],[0,0,0,1]],"Ship v5":[[1,2,0,0,0],[0,1,2,0,0],[0,0,1,2,0],[0,0,0,1,2],[0,0,0,0,1]],"Ship v6":[[1,2,0,0,0,0],[0,1,2,0,0,0],[0,0,1,2,0,0],[0,0,0,1,2,0],[0,0,0,0,1,2],[0,0,0,0,0,1]],"Ship v7":[[1,2,0,0,0,0,0],[0,1,2,0,0,0,0],[0,0,1,2,0,0,0],[0,0,0,1,2,0,0],[0,0,0,0,1,2,0],[0,0,0,0,0,1,2],[0,0,0,0,0,0,1]],"Ship v8":[[1,2,0,0,0,0,0,0],[0,1,2,0,0,0,0,0],[0,0,1,2,0,0,0,0],[0,0,0,1,2,0,0,0],[0,0,0,0,1,2,0,0],[0,0,0,0,0,1,2,0],[0,0,0,0,0,0,1,2],[0,0,0,0,0,0,0,1]],"Ship v9":[[1,2,0,0,0,0,0,0,0],[0,1,2,0,0,0,0,0,0],[0,0,1,2,0,0,0,0,0],[0,0,0,1,2,0,0,0,0],[0,0,0,0,1,2,0,0,0],[0,0,0,0,0,1,2,0,0],[0,0,0,0,0,0,1,2,0],[0,0,0,0,0,0,0,1,2],[0,0,0,0,0,0,0,0,1]],"Ship v10":[[1,2,0,0,0,0,0,0,0,0],[0,1,2,0,0,0,0,0,0,0],[0,0,1,2,0,0,0,0,0,0],[0,0,0,1,2,0,0,0,0,0],[0,0,0,0,1,2,0,0,0,0],[0,0,0,0,0,1,2,0,0,0],[0,0,0,0,0,0,1,2,0,0],[0,0,0,0,0,0,0,1,2,0],[0,0,0,0,0,0,0,0,1,2],[0,0,0,0,0,0,0,0,0,1]],"Trio II":[[1,2,0,0,0],[1,2,0,0,0],[1,2,0,0,0],[0,1,2,2,2],[0,0,1,1,1]],Walker:[[0,1,3,0],[1,2,4,7],[0,5,6,8]],Wave:[[1,1,1],[1,0,1],[1,1,1]],"Wing v8":[[1,2,0,0,0,0],[1,2,0,0,0,0],[0,1,2,0,0,0],[0,1,2,2,0,0],[0,0,1,1,2,2],[0,0,0,0,1,1]],"Wing v9":[[1,2,0,0,0,0,0],[1,2,0,0,0,0,0],[0,1,2,0,0,0,0],[0,1,2,0,0,0,0],[0,0,1,2,2,0,0],[0,0,0,1,1,2,2],[0,0,0,0,0,1,1]],"Wing v10":[[1,2,0,0,0,0,0,0,0],[0,1,2,0,0,0,0,0,0],[0,0,1,2,0,0,0,0,0],[0,0,0,1,2,0,0,0,0],[0,0,0,1,2,2,0,0,0],[0,0,0,0,1,1,2,0,0],[0,0,0,0,0,0,1,2,0],[0,0,0,0,0,0,0,1,2],[0,0,0,0,0,0,0,0,1]],"Wing v11":[[1,2,0,0,0,0,0,0,0,0],[1,2,0,0,0,0,0,0,0,0],[0,1,2,0,0,0,0,0,0,0],[0,0,1,2,0,0,0,0,0,0],[0,0,0,1,2,0,0,0,0,0],[0,0,0,0,1,2,0,0,0,0],[0,0,0,0,0,1,2,0,0,0],[0,0,0,0,0,0,1,2,0,0],[0,0,0,0,0,0,0,1,2,2],[0,0,0,0,0,0,0,0,1,1]],"Wing v12":[[1,2,0,0,0,0,0,0,0,0],[1,2,0,0,0,0,0,0,0,0],[0,1,2,0,0,0,0,0,0,0],[0,1,2,0,0,0,0,0,0,0],[0,0,1,2,0,0,0,0,0,0],[0,0,0,1,2,0,0,0,0,0],[0,0,0,0,1,2,0,0,0,0],[0,0,0,0,0,1,2,2,0,0],[0,0,0,0,0,0,1,1,2,2],[0,0,0,0,0,0,0,0,1,1]],"Wing v12b":[[1,2,0,0,0,0,0,0,0,0],[1,2,0,0,0,0,0,0,0,0],[0,1,2,0,0,0,0,0,0,0],[0,0,1,2,0,0,0,0,0,0],[0,0,0,1,2,0,0,0,0,0],[0,0,0,1,2,2,0,0,0,0],[0,0,0,0,1,1,2,0,0,0],[0,0,0,0,0,0,1,2,0,0],[0,0,0,0,0,0,0,1,2,2],[0,0,0,0,0,0,0,0,1,1]],"Wing v13":[[1,2,0,0,0,0,0,0,0,0],[1,2,0,0,0,0,0,0,0,0],[0,1,2,0,0,0,0,0,0,0],[0,1,2,0,0,0,0,0,0,0],[0,0,1,2,0,0,0,0,0,0],[0,0,1,2,0,0,0,0,0,0],[0,0,0,1,2,2,0,0,0,0],[0,0,0,0,1,1,2,2,0,0],[0,0,0,0,0,0,1,1,2,2],[0,0,0,0,0,0,0,0,1,1]]},"Flaming Flaneries":{Dancer:[[0,3,1,1,3,0],[0,0,1,1,0,0],[3,0,1,1,1,0],[0,2,3,3,0,3],[0,3,1,2,2,3],[3,2,0,0,0,3],[3,0,0,3,0,0]],"Diamond Wave":[[1,1]],Dragger:[[0,3,1,1,3,0,0],[0,0,1,1,0,0,0],[0,1,1,1,1,0,0],[3,0,3,3,1,0,0],[3,2,2,2,1,3,0],[3,0,0,0,2,3,0],[0,0,0,1,3,3,3],[0,0,3,2,0,2,3],[0,0,0,0,1,3,3]],Fly:[[0,0,0,3,1,1,3,0],[0,0,0,0,1,1,0,0],[0,0,0,1,2,2,0,0],[0,0,1,1,2,1,0,0],[0,0,0,1,0,0,1,0],[0,3,0,1,3,0,2,2],[3,0,2,3,2,1,3,1],[3,2,3,0,3,3,0,0],[0,3,3,0,3,3,3,3],[0,3,0,0,3,0,2,0]],Jumper:[[0,0,3,1,1,3,0,0],[0,0,0,1,1,0,0,0],[0,0,1,1,1,1,0,0],[0,0,1,3,3,1,0,0],[0,3,1,2,2,1,3,0],[3,0,1,1,1,1,0,3],[3,2,2,1,1,2,2,3],[1,3,3,1,1,3,3,1],[3,2,2,2,2,2,2,3],[3,0,0,0,0,0,0,3]],"Kite Wave":[[0,1],[1,1],[1,1]],"Ship Layer":[[0,3,1,1,3,0],[0,0,1,1,0,0],[3,0,1,1,0,3],[0,2,3,3,2,0],[0,3,1,1,3,0],[3,2,0,0,2,3],[3,0,0,0,0,3]],"Ship Layer II":[[3,1,1,3,0,0,3,1,1,3],[0,1,1,0,0,0,0,1,1,0],[1,1,1,0,3,3,0,1,1,1],[0,3,3,1,0,0,1,3,3,0],[2,2,3,1,1,1,1,3,2,2],[0,1,1,1,0,0,1,1,1,0],[3,3,0,2,1,1,2,0,3,3],[0,2,3,1,0,0,1,3,2,0]],"Ship I":[[1,1],[2,2]],"Ship II":[[0,3,1,1,3],[0,0,2,2,0],[3,1,3,3,3],[0,2,0,0,0],[3,3,3,0,0]],"Ship III":[[0,3,1,1,3,0],[0,0,2,2,0,0],[3,1,3,3,1,3],[0,2,0,0,2,0],[3,3,3,3,3,3]],"Ship IV":[[0,3,1,1,3,0],[0,0,2,2,0,0],[0,3,3,3,1,3],[0,0,0,0,2,0],[0,0,3,1,3,3],[0,0,0,2,0,0],[0,3,1,3,3,0],[0,0,2,0,0,0],[3,1,3,3,0,0],[0,2,0,0,0,0]],"Ship V":[[0,0,0,3,1,1,3,0,0,0],[0,0,0,0,2,2,0,0,0,0],[0,0,3,1,3,3,1,3,0,0],[0,0,0,2,0,0,2,0,0,0],[0,3,1,3,3,3,3,1,3,0],[0,0,2,0,0,0,0,2,0,0],[3,1,3,3,0,0,3,3,1,3],[0,2,0,0,0,0,0,0,2,0],[3,3,3,0,0,0,0,3,3,3]],"Ship VI":[[3,1,1,3,0],[0,2,2,0,0],[3,3,3,1,3],[0,0,0,2,0],[0,3,1,3,3],[0,0,2,0,0],[0,3,3,1,3],[0,0,0,2,0],[0,3,1,3,3],[0,0,2,0,0]],"Ship VII":[[3,1,1,3,0,0,3,1,1,3],[0,2,2,0,0,0,0,2,2,0],[3,3,3,1,3,3,1,3,3,3],[0,0,0,2,0,0,2,0,0,0],[0,3,1,3,3,3,3,1,3,0],[0,0,2,0,0,0,0,2,0,0],[0,3,3,3,0,0,3,3,3,0]],Snake:[[3,1,3,3,1,3],[0,2,0,0,2,0],[3,1,3,3,1,3]],"Square Wave":[[1,1],[1,1]],Star:[[0,1,0],[1,1,1],[0,1,0]],Stretchers:[[1,1],[1,0]],"Thruster I":[[3,1,1,3,0,0,0],[0,2,2,0,0,0,0],[3,3,3,1,3,0,0],[0,0,0,2,0,0,0],[0,3,1,3,1,3,0],[0,0,2,0,2,0,0],[3,1,3,0,3,1,3],[0,2,0,2,0,2,0],[3,3,1,3,1,3,3]],"Thruster II":[[3,1,1,3,0,0],[0,2,2,0,0,0],[3,3,3,1,3,0],[0,0,0,2,0,0],[0,3,1,3,1,3],[0,0,2,0,2,0],[0,3,1,0,3,3]],"Thruster III":[[3,1,1,3,0,0,0,0],[0,2,2,0,0,0,0,0],[3,3,3,1,3,0,0,0],[0,0,0,2,0,0,0,0],[0,3,1,3,1,3,0,0],[0,0,2,0,2,0,0,0],[0,3,3,1,3,1,3,0],[0,0,0,0,0,2,0,0],[0,0,3,3,1,3,1,3],[0,0,0,2,3,0,2,0]],"Walker I":[[0,3,1,1,3,0],[0,0,1,1,0,0],[3,1,2,2,0,0],[1,1,2,1,0,0],[0,1,0,0,1,0],[0,2,3,0,2,2]],"Walker II":[[0,3,1,1,3,0],[0,0,2,2,0,0],[0,3,3,3,3,0],[0,0,0,0,0,0],[0,3,1,1,3,0],[0,0,1,1,0,0],[3,1,2,2,0,0],[1,1,2,1,0,0],[0,1,0,0,1,0],[0,2,3,0,2,2]]},"Fuming Fumblers":{"Fuming Ship I":[[1,1,1,1],[3,1,1,3],[5,1,1,5],[7,1,1,7],[9,1,1,9]],"Fuming Ship II":[[0,0,1,1,1,1,0,0],[0,0,3,1,1,3,0,0],[0,1,5,1,1,5,1,0],[0,3,7,1,1,7,3,0],[1,5,9,1,1,9,5,1],[3,7,0,0,0,0,7,3]],"Quartet I":[[0,1,1,0],[1,2,2,1],[1,2,2,1],[0,1,1,0]],"Quartet II":[[1,1,0,0,1,1],[1,0,0,0,0,1],[0,0,1,1,0,0],[0,0,1,1,0,0],[1,0,0,0,0,1],[1,1,0,0,1,1]],"Ship I":[[0,1,0],[2,1,2],[4,3,4],[6,5,6],[8,7,8],[10,9,10]],"Ship II":[[0,1,0,0],[2,1,2,0],[4,3,4,0],[6,5,6,2],[8,7,8,4],[10,9,10,6],[0,0,0,8]],"Ship III":[[0,0,1,0,0],[0,2,1,2,0],[0,4,3,4,0],[2,6,5,6,2],[4,8,7,8,4],[6,10,9,10,6],[8,0,0,0,8]],"Ship IV":[[0,1,0,0,0],[2,1,2,0,0],[4,3,4,0,0],[6,5,6,2,0],[8,7,8,4,0],[10,9,10,6,2],[0,0,0,8,4],[0,0,0,0,6],[0,0,0,0,8]],"Ship V":[[0,0,0,1,0,0,0],[0,0,2,1,2,0,0],[0,0,4,3,4,0,0],[0,2,6,5,6,2,0],[0,4,8,7,8,4,0],[2,6,10,9,10,6,2],[4,8,0,0,0,8,4],[6,0,0,0,0,0,6],[8,0,0,0,0,0,8]],Star:[[0,1,0],[1,0,1],[0,1,0]],Supernova:[[0,0,0,0,1,1,0,0],[0,1,0,0,1,1,1,0],[1,1,1,0,0,1,0,0],[1,1,0,0,0,0,0,0],[0,0,0,0,0,0,1,1],[0,0,1,0,0,1,1,1],[0,1,1,1,0,0,1,0],[0,0,1,1,0,0,0,0]],Walker:[[0,0,2,0],[1,3,4,6],[2,5,7,8],[4,6,9,10],[0,8,0,0]]},"Game of Life":{Glider:[[0,0,1],[1,0,1],[0,1,1]],Oscillator:[[1,1,1]],"Spaceship 1":[[1,0,0,1,0],[0,0,0,0,1],[1,0,0,0,1],[0,1,1,1,1]],"Spaceship 2":[[0,0,0,0,1,0],[0,0,0,0,0,1],[1,0,0,0,0,1],[0,1,1,1,1,1]],"Spaceship 3":[[0,1,1,1,1],[1,0,0,0,1],[0,0,0,0,1],[1,0,0,1,0]]},Generations:{"Diamond Wave":[[1,1]],Spaceship:[[1,1],[2,2]],"Square Wave":[[1,1],[1,1]],Quartet:[[0,1,1,0],[1,2,2,1],[1,2,2,1],[0,1,1,0]]},"Giant Galleons":{"Quartet I":[[0,0,1,0,0],[0,0,1,0,0],[1,1,0,1,1],[0,0,1,0,0],[0,0,1,0,0]],"Quartet II":[[0,1,1,0],[1,0,0,1],[1,0,0,1],[0,1,1,0]],"Quartet III":[[0,1,1,1,0],[1,0,0,0,1],[1,0,0,0,1],[1,0,0,0,1],[0,1,1,1,0]],"Quartet IV":[[1,0,1,0,1],[0,1,0,1,0],[1,0,1,0,1],[0,1,0,1,0],[1,0,1,0,1]],"Ship I":[[1,1]],"Ship II":[[0,1,1,0],[1,0,0,1]],"Ship III":[[0,1,1,1,0],[1,0,0,0,1]],"Ship IV":[[0,1,1,1,1,0],[1,0,0,0,0,1]],"Ship V":[[0,0,1,1,0,0],[0,1,0,0,1,0],[0,1,0,0,1,0],[1,0,0,0,0,1],[1,0,0,0,0,1]],Supernova:[[0,1,0],[1,0,1],[0,1,0]],Wave:[[1,1,1]]},"Growing Gliders":{"Double Glider I":[[1,1]],"Double Glider II":[[0,1],[1,1]],"Glider I":[[1,1],[2,2]],"Glider II":[[1,1,1,1],[2,2,2,2]],"Glider III":[[1,1,0,0,1,1],[2,2,1,1,2,2],[0,0,2,2,0,0]],"Glider IV":[[1,1,0,0,0,1,1],[2,2,1,1,1,2,2],[0,0,2,2,2,0,0]],"Glider V":[[1,1,0,0,0,0,1,1],[2,2,1,1,1,1,2,2],[0,0,2,2,2,2,0,0]],"Glider VI":[[1,1,0,0,0,0,0,1,1],[2,2,1,1,1,1,1,2,2],[0,0,2,2,2,2,2,0,0]],"Glider VII":[[1,1,0,0,0,0,0,0,1,1],[2,2,1,1,1,1,1,1,2,2],[0,0,2,2,2,2,2,2,0,0]],"Glider VIII":[[1,1,0,0,0,0,0,0,1,1],[2,2,1,0,0,0,0,1,2,2],[0,0,2,1,1,1,1,2,0,0],[0,0,0,2,2,2,2,0,0,0]],"Glider IX":[[1,1,1,1,1,1,1,1,1,1],[2,2,1,2,2,2,2,1,2,2],[0,0,2,0,0,0,0,2,0,0]],"Glider Gun":[[0,6,1,1,0,0,1,1,6,0],[0,0,1,1,0,0,1,1,0,0],[6,1,3,3,1,1,3,3,1,6],[0,1,3,3,1,1,3,3,1,0],[0,3,5,5,1,1,5,5,3,0],[0,3,5,5,0,0,5,5,3,0],[0,0,0,0,5,5,0,0,0,0],[0,0,0,0,5,5,0,0,0,0],[0,0,0,0,5,5,0,0,0,0],[0,0,0,0,3,3,0,0,0,0]],"Quadruple Glider":[[1,1],[1,1]],"Ship I":[[1,1,1],[2,2,2]],"Ship II":[[8,1,1,1,1,1,1,1,8],[0,2,1,1,2,1,1,2,0],[0,3,1,2,3,2,1,3,0],[0,4,1,3,4,3,1,4,0],[0,5,1,4,5,4,1,5,0],[0,6,2,5,6,5,2,6,0]],"Ship III":[[2,1,1,2],[0,1,2,0],[0,2,0,0]],"Ship IV":[[2,1,1,1,2],[0,1,2,1,0],[0,2,3,2,0]]},"Hefty Hulls":{"12 Ships":[[0,0,0,0,1,1,0,0,0,0],[0,0,0,0,1,1,0,0,0,0],[0,0,0,1,0,0,1,0,0,0],[0,0,1,1,0,0,1,1,0,0],[1,1,0,0,0,0,0,0,1,1],[1,1,0,0,0,0,0,0,1,1],[0,0,1,1,0,0,1,1,0,0],[0,0,0,1,0,0,1,0,0,0],[0,0,0,0,1,1,0,0,0,0],[0,0,0,0,1,1,0,0,0,0]],"12 Ships II":[[1,1,0,0,0,0,0,0,1,1],[1,1,0,0,0,0,0,0,1,1],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,1,0,0,0,0],[0,0,0,1,1,1,1,0,0,0],[0,0,0,1,1,1,1,0,0,0],[0,0,0,0,1,1,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[1,1,0,0,0,0,0,0,1,1],[1,1,0,0,0,0,0,0,1,1]],"12 Ships III":[[1,1,0,0,1,1,0,0,1,1],[1,1,0,0,1,1,0,0,1,1],[0,0,0,1,1,1,1,0,0,0],[0,0,1,1,1,1,1,1,0,0],[1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1],[0,0,1,1,1,1,1,1,0,0],[0,0,0,1,1,1,1,0,0,0],[1,1,0,0,1,1,0,0,1,1],[1,1,0,0,1,1,0,0,1,1]],"16 Ships":[[1,1,0,0,0,0,0,0,1,1],[1,1,0,0,1,1,0,0,1,1],[0,0,0,0,1,1,0,0,0,0],[0,0,0,1,1,1,1,0,0,0],[0,1,1,1,1,1,1,1,1,0],[0,1,1,1,1,1,1,1,1,0],[0,0,0,1,1,1,1,0,0,0],[0,0,0,0,1,1,0,0,0,0],[1,1,0,0,1,1,0,0,1,1],[1,1,0,0,0,0,0,0,1,1]],"20 Ships":[[1,1,0,0,1,1,0,0,1,1],[1,1,0,0,1,1,0,0,1,1],[0,0,0,0,1,1,0,0,0,0],[0,0,0,1,1,1,1,0,0,0],[1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1],[0,0,0,1,1,1,1,0,0,0],[0,0,0,0,1,1,0,0,0,0],[1,1,0,0,1,1,0,0,1,1],[1,1,0,0,1,1,0,0,1,1]],"28 Ships":[[0,0,1,0,0,1,0,0],[0,0,1,0,0,1,0,0],[1,1,1,1,1,1,1,1],[0,0,1,0,0,1,0,0],[0,0,1,0,0,1,0,0],[1,1,1,1,1,1,1,1],[0,0,1,0,0,1,0,0],[0,0,1,0,0,1,0,0]],"Diamond Wave":[[1,1]],Doublet:[[0,1,0],[1,1,1],[1,1,1],[0,1,0]],"Flamboyant Ship":[[0,0,0,0,1,1,0,0,0,0],[0,0,0,1,2,2,1,0,0,0],[0,0,1,1,3,3,1,1,0,0],[0,1,0,2,4,4,2,0,1,0],[1,2,1,3,5,5,3,1,2,1],[1,1,0,4,6,6,4,0,1,1],[1,4,2,5,7,7,5,2,4,1],[3,1,1,6,8,8,6,1,1,3],[3,6,4,7,9,9,7,4,6,3],[5,4,1,8,10,10,8,1,4,5]],"Gun I":[[1,1,0,0,0,0,0,0],[2,2,1,2,0,0,1,2],[3,3,1,2,0,0,0,0],[0,0,2,1,1,2,0,0],[0,0,0,0,2,0,0,0]],"Gun II":[[0,0,1,1,0,0,0,0,0,0],[0,1,2,2,0,0,0,0,0,0],[1,1,3,3,0,0,0,0,0,0],[2,2,4,4,1,1,0,0,0,0],[1,3,5,5,1,1,1,0,0,0],[4,4,6,6,1,3,1,1,0,0],[3,5,7,7,1,2,0,1,1,0],[6,6,8,8,1,1,1,3,2,1],[5,7,9,9,1,6,1,3,2,1],[8,8,0,0,3,4,0,0,0,0]],Octet:[[0,1,0],[1,1,1],[0,1,0]],"Octet II":[[1,1,0,0,0,0,0,1],[0,1,1,0,0,0,1,1],[0,0,1,1,0,1,1,0],[0,0,0,0,0,1,0,0],[0,0,1,0,0,0,0,0],[0,1,1,0,1,1,0,0],[1,1,0,0,0,1,1,0],[1,0,0,0,0,0,1,1]],"Octet III":[[0,0,0,0,0,1,1,0],[1,1,1,0,0,0,1,0],[1,0,1,1,0,1,1,0],[0,0,0,0,0,1,0,0],[0,0,1,0,0,0,0,0],[0,1,1,0,1,1,0,1],[0,1,0,0,0,1,1,1],[0,1,1,0,0,0,0,0]],"Octet IV":[[0,1,0,0,1,0],[1,0,1,1,0,1],[0,1,1,1,1,0],[0,1,1,1,1,0],[1,0,1,1,0,1],[0,1,0,0,1,0]],"Octet V":[[0,0,1,1,1,1,0,0],[0,0,1,0,0,1,0,0],[1,1,1,1,1,1,1,1],[1,0,1,0,0,1,0,1],[1,0,1,0,0,1,0,1],[1,1,1,1,1,1,1,1],[0,0,1,0,0,1,0,0],[0,0,1,1,1,1,0,0]],"Octet VI":[[1,1,0,0,0,0,0,0,1,1],[1,1,0,0,0,0,0,0,1,1],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[1,1,0,0,0,0,0,0,1,1],[1,1,0,0,0,0,0,0,1,1]],"Octet VII":[[1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1]],"Quadruple Gun":[[0,0,1,1,0,0,0,0],[0,0,1,1,0,0,0,0],[0,0,0,0,0,0,1,1],[0,0,0,0,0,0,1,1],[1,1,0,0,0,0,0,0],[1,1,0,0,0,0,0,0],[0,0,0,0,1,1,0,0],[0,0,0,0,1,1,0,0]],Quartet:[[1,1],[1,1]],"Quartet II":[[0,0,0,0,1,1,0,0,0,0],[0,0,0,1,1,1,1,0,0,0],[0,0,0,1,0,0,1,0,0,0],[0,1,1,1,0,0,1,1,1,0],[1,1,0,0,0,0,0,0,1,1],[1,1,0,0,0,0,0,0,1,1],[0,1,1,1,0,0,1,1,1,0],[0,0,0,1,0,0,1,0,0,0],[0,0,0,1,1,1,1,0,0,0],[0,0,0,0,1,1,0,0,0,0]],"Quartet III":[[0,0,0,0,1,1,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[1,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,1],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,1,0,0,0,0]],Ship:[[1,1],[2,2]],"Ship II":[[1,1,0,0,0,0,0,1,1],[2,2,0,0,0,0,0,2,2],[3,3,1,1,0,1,1,3,3],[4,4,0,2,2,2,0,4,4],[5,5,3,3,0,3,3,5,5],[6,6,0,4,4,4,0,6,6],[7,7,5,5,0,5,5,7,7]],"Ship III":[[1,1,0,0,0,0,0,1,1],[3,1,0,0,0,0,0,1,3],[4,2,2,1,0,1,2,2,4],[5,3,1,1,2,1,1,3,5],[6,4,4,3,0,3,4,4,6]],"Wing II":[[1,1,0,0],[2,2,1,0],[3,3,1,1],[4,4,2,0],[5,5,3,3],[0,0,4,2],[0,0,5,5]],"Wing I":[[1,1,0,0],[2,2,0,0],[3,3,1,0],[0,0,2,0],[0,0,3,1],[0,0,0,2],[0,0,0,3]],"Wing III":[[1,1,0,0,0],[2,2,0,0,0],[0,3,1,0,0],[0,0,2,1,0],[0,0,0,2,1],[0,0,0,0,2]],"Wings I":[[0,0,1,1,0,0],[0,0,2,2,0,0],[0,1,3,3,1,0],[0,2,0,0,2,0],[1,3,0,0,3,1],[2,0,0,0,0,2],[3,0,0,0,0,3]],"Wings II":[[0,0,1,1,0,0],[0,1,2,2,1,0],[1,1,3,3,1,1],[0,2,4,4,2,0],[3,3,5,5,3,3],[2,4,0,0,4,2],[5,5,0,0,5,5]],"Wings III":[[0,0,0,1,1,0,0,0],[0,0,0,2,2,0,0,0],[0,0,1,3,3,1,0,0],[0,1,2,0,0,2,1,0],[1,2,0,0,0,0,2,1],[2,0,0,0,0,0,0,2]],"Wing IV":[[1,1,0,0,0,0],[2,2,1,0,0,0],[3,3,1,1,0,0],[4,4,2,0,1,0],[5,5,3,1,2,1],[6,6,4,0,1,1],[1,7,5,2,4,1],[8,8,6,1,1,3],[9,9,7,4,6,0],[10,10,8,1,0,0]]},"Leggy Legends":{Ship:[[1,1],[2,2]],"Double Ship":[[1],[1]],Quartet:[[1,1],[1,1]],"Growing Wings":[[1,1,1],[2,2,2]],"Wide Ship":[[1,1,1,1],[2,2,2,2]],"Extra Wide Ship":[[1,1,1,1,1,1],[2,2,2,2,2,2]],"Flying Saucer":[[1,1,1,1,1,1,1,1,1,1],[2,2,2,2,2,2,2,2,2,2]],Mothership:[[0,0,0,0,1,1,0,0,0,0],[1,1,1,1,2,2,1,1,1,1],[2,2,2,2,2,2,2,2,2,2]],"Triple Trouble":[[1,1,0,0,1,1,0,0,1,1],[1,1,1,1,2,2,1,1,1,1],[2,2,2,2,2,2,2,2,2,2]],"Triple Trouble II":[[0,0,0,0,1,1,0,0,0,0],[1,1,0,0,2,2,0,0,1,1],[1,1,1,1,2,2,1,1,1,1],[2,2,2,2,2,2,2,2,2,2]],Dreadnought:[[0,0,0,0,1,1,0,0,0,0],[0,0,0,0,2,2,0,0,0,0],[0,0,0,0,3,3,0,0,0,0],[1,1,0,0,4,4,0,0,1,1],[1,1,1,1,5,5,1,1,1,1],[2,2,2,2,0,0,2,2,2,2]],"Siamese Ships":[[1,1,0,0,0,0,1,1],[2,2,1,0,0,1,2,2],[3,3,2,1,1,2,3,3],[0,0,3,2,2,3,0,0]],Jellyfish:[[0,8,1,1,1,1,1,8,0],[0,0,2,1,1,1,2,0,0],[8,1,3,1,2,1,3,1,8],[0,2,4,2,3,2,4,2,0],[8,3,5,3,4,3,5,3,8],[0,4,6,4,5,4,6,4,0]],Cuttlefish:[[1,1,1,1,1,1],[2,1,1,1,1,2],[0,2,2,2,2,0]],Octopus:[[0,8,1,1,1,1,8,0],[0,0,2,1,1,2,0,0],[8,1,3,1,1,3,1,8],[0,2,4,1,1,4,2,0],[0,0,0,2,2,0,0,0]],Trilobit:[[1,1,1,1,1,1,1],[2,1,1,1,1,1,2],[0,1,2,1,2,1,0],[0,2,0,1,0,2,0],[0,0,0,2,0,0,0]]},"Pace Parade":{"Double Ship":[[1,1,1]],Explosion:[[0,0,0,0,1,0,0,0],[0,0,0,1,0,0,0,0],[0,0,1,0,1,1,0,0],[1,0,1,0,0,0,1,0],[0,1,0,0,0,1,0,1],[0,0,1,1,0,1,0,0],[0,0,0,0,1,0,0,0],[0,0,0,1,0,0,0,0]],Glider:[[0,0,3,0,0],[4,2,1,8,5],[0,8,7,6,3],[0,0,4,2,1]],Jellyfish:[[0,0,1,1,1,1,1,0,0],[1,2,4,2,6,2,4,2,1]],"Micro Mole":[[0,1,0],[3,6,3],[8,1,8]],"Mini Mole":[[0,1,3,1,0],[0,4,6,4,0],[2,7,0,7,2]],Plodder:[[2,5,2],[7,0,7],[2,5,2],[7,0,7]],Quartet:[[1,1,1],[1,1,1],[1,1,1]],"Ship I":[[0,1,0],[2,3,2]],"Ship II":[[0,1,1,0],[2,3,3,2]],"Slow Mole":[[0,1,3,2,0,0],[0,4,6,5,3,0],[2,7,2,8,6,1],[0,0,0,1,2,0]],Supernova:[[0,0,1,1,0,0],[0,1,0,0,1,0],[1,0,0,0,0,1],[1,0,0,0,0,1],[0,1,0,0,1,0],[0,0,1,1,0,0]]},"Repeating Replicants":{Pulsar:[[0,1,0],[1,6,1],[0,1,0]],"Diamond Wave":[[1],[1]],"Square Wave":[[1,1],[1,1]],Ship:[[1,1],[2,2]],Delta:[[0,0,0,1,1,0,0,0],[0,0,1,2,2,1,0,0],[0,1,1,3,3,1,1,0],[1,2,3,4,4,3,2,1],[1,0,0,0,0,0,0,1],[3,0,0,0,0,0,0,3]],"Twisted Cross":[[0,0,1,1,0,0],[0,0,5,4,0,0],[1,4,6,6,5,1],[1,5,6,6,4,1],[0,0,4,5,0,0],[0,0,1,1,0,0]]},"Rowdy Rowers I":{"Rower I":[[0,1,1,0],[1,1,1,1],[1,2,2,1],[3,4,4,3]],"Rower II":[[1,1,1],[1,1,1],[1,3,1],[4,0,4]],"Runner I":[[0,0,0,1,0,0],[0,0,1,1,1,0],[0,0,1,2,1,1],[0,0,4,4,1,0],[4,2,0,0,0,0],[0,3,0,0,0,0]],"Runner II":[[0,0,0,1,1,0,0,0],[0,0,1,1,1,1,1,0],[0,0,1,2,2,2,1,0],[0,0,4,4,4,2,1,1],[4,2,0,0,0,3,2,0],[0,3,0,0,0,0,0,0]],Skipper:[[0,1,1,0],[1,1,1,1],[1,2,2,1],[3,4,4,4]],Star:[[0,3,2,0],[4,1,1,1],[0,1,1,0]]},"Rowdy Rowers II":{"Rower Gun":[[0,0,0,0,0,1,0,0,0],[0,0,0,0,1,1,1,1,0],[0,0,0,0,1,2,1,1,0],[0,0,0,5,4,4,1,1,0],[0,1,1,4,6,6,3,0,0],[1,1,1,3,2,7,0,0,0],[0,1,1,1,5,8,9,0,8],[0,0,1,0,7,4,7,0,8],[0,0,0,0,0,6,0,0,0]],"Rower I":[[0,1,1,0],[1,1,1,1],[1,2,2,1],[3,4,4,3]],"Rower II":[[1,1,1],[1,1,1],[1,3,1],[4,0,4]],Spinner:[[0,0,0,1,0,0],[0,1,1,1,1,0],[0,1,2,1,1,1],[1,1,3,4,1,6],[1,1,2,5,0,0],[1,2,2,1,5,6],[0,1,2,3,1,5],[0,1,1,1,4,0]],Star:[[0,3,2,0],[4,1,1,1],[0,1,1,0]]},"Skewed Schooners":{"Skewed Schooner":[[0,0,2,1,0],[0,0,3,1,1],[0,6,4,4,1],[0,7,4,5,0],[10,8,8,4,0],[11,8,9,0,0],[12,12,8,0,0],[12,0,0,0,0],[0,12,0,0,0]],"Double Wedge":[[1,1],[1,1]],"Doublet I":[[0,1,1],[0,2,0],[1,1,0]],"Doublet II":[[0,1,0],[0,1,1],[0,2,0],[1,1,0],[1,0,0]],"Doublet III":[[0,0,0,1,1,0,1],[0,0,0,2,1,0,1],[0,0,0,0,0,0,0],[1,2,0,0,0,0,0],[1,1,0,0,0,0,0],[0,0,0,0,0,0,0],[1,1,0,0,0,0,0]],Triplet:[[0,0,0,1],[0,0,2,1],[0,2,0,0],[1,1,0,0]],Wedge:[[1,1],[2,1]]},Snake:{Caterpillar:[[0,1,0],[1,2,1]],Octet:[[1,0,0,1],[0,1,1,0],[0,1,1,0],[1,0,0,1]],Oscillator:[[0,0,1],[0,1,0],[1,0,0]],Puffer:[[0,0,1,1,0,0],[0,0,1,1,0,0],[0,1,1,1,1,0],[0,0,1,1,0,0],[1,3,1,1,3,1],[2,1,3,3,1,2],[1,3,1,1,3,1],[0,1,1,1,1,0],[0,7,6,6,7,0],[7,7,6,6,7,7]],"Ship I":[[1,1],[2,2]],"Ship II":[[0,1,1,0],[1,2,2,1],[2,0,0,2]],"Ship III":[[0,0,0,1,1,0,0,0],[0,0,1,2,2,1,0,0],[0,1,2,0,0,2,1,0],[1,2,0,0,0,0,2,1],[2,0,0,0,0,0,0,2]],"Ship IV":[[0,0,1,1,0,0,1,1,0,0],[0,1,2,2,0,0,2,2,1,0],[1,2,3,3,0,0,3,3,2,1],[2,0,4,4,1,1,4,4,0,2],[0,0,0,0,2,2,0,0,0,0]],"Ship V":[[0,0,0,0,1,1,0,0,0,0],[0,0,0,0,2,2,0,0,0,0],[0,0,0,0,3,3,0,0,0,0],[0,0,1,1,4,4,1,1,0,0],[0,0,2,2,0,0,2,2,0,0],[0,0,3,3,0,0,3,3,0,0],[1,1,4,4,0,0,4,4,1,1],[2,2,0,0,0,0,0,0,2,2]],Snake:[[0,1,1,0],[1,1,1,1],[0,2,2,0]],"Square Wave":[[0,1,1,0],[1,2,2,1],[1,2,2,1],[0,1,1,0]],Stretcher:[[1,1,0],[2,2,1],[2,2,1]],Trailer:[[0,1,1,0,0,0],[1,1,1,0,0,0],[1,1,2,1,0,0],[3,3,3,2,2,0],[1,4,3,1,1,1]],"Triangular Wave":[[0,1,1,0],[0,2,2,0],[1,3,3,1],[2,0,0,2]],Wing:[[1,1,0,0,0,0],[2,2,1,0,0,0],[0,0,2,1,0,0],[0,0,0,2,1,0],[0,0,0,0,2,1],[0,0,0,0,0,2]]},"Spicy Spirals":{"Asymmetric cruiser":[[0,0,0,1,1,0,0,0,0],[0,0,1,1,1,1,0,0,0],[0,1,0,1,1,0,1,0,0],[0,2,1,2,2,2,1,0,0],[1,3,2,3,3,1,2,1,0],[2,4,1,1,1,3,1,0,0],[3,0,2,0,0,2,3,4,0],[4,0,0,0,0,4,0,0,3],[0,0,0,0,0,4,0,0,4]],Beetle:[[0,0,0,1,1,0,0,0],[0,1,1,1,1,1,1,0],[0,2,1,1,1,1,2,0],[1,0,0,1,1,0,0,1],[2,1,0,2,2,0,1,2],[0,2,2,1,1,2,2,0],[1,0,2,1,1,2,0,1],[2,1,1,0,0,1,1,2],[0,2,1,0,0,1,2,0],[1,0,0,2,2,0,0,1]],"Crooked Ship":[[0,0,1,1,0,0,0],[0,2,1,1,2,1,1],[1,1,2,1,0,2,2],[2,2,0,1,0,0,0],[0,0,1,1,1,1,1],[1,0,2,1,1,2,2],[2,2,0,0,0,0,0]],"Diamond Wave":[[1,1]],"Guarded Shuttle":[[0,1,1,0],[2,1,1,2]],Jellyfish:[[0,0,1,1,0,0,1,1,0,0],[0,1,1,1,1,1,1,1,1,0],[1,0,2,2,1,1,2,2,0,1],[1,1,1,3,3,3,3,1,1,1]],Quartet:[[1,1],[1,1]],"Shuttle I":[[0,1,1,0],[1,1,1,1]],"Shuttle II":[[0,0,1,1,0,0],[0,1,1,1,1,0],[0,0,1,1,0,0],[1,1,1,1,1,1]],Spiral:[[0,1,7,0],[2,1,1,1],[2,1,1,1],[2,0,1,0],[0,1,0,0]],"Squid I":[[0,0,0,0,1,1,0,0,0,0],[0,0,0,2,1,1,2,0,0,0],[0,0,1,1,1,1,1,1,0,0],[0,1,1,1,1,1,1,1,1,0],[0,0,2,1,1,1,1,2,0,0],[2,1,1,1,1,1,1,1,1,2],[2,1,3,2,1,1,2,3,1,2]],"Squid II":[[0,0,0,0,1,1,0,0,0,0],[0,0,0,1,1,1,1,0,0,0],[0,0,1,0,1,1,0,1,0,0],[0,2,1,1,1,1,1,1,2,0],[0,2,1,1,1,1,1,1,2,0],[1,3,4,3,2,2,3,4,3,1],[2,4,5,2,3,3,2,5,4,2],[3,5,6,6,4,4,6,6,5,3],[0,4,5,2,2,2,2,5,4,0],[0,6,0,5,4,4,5,0,6,0]],"Squid III":[[0,0,0,1,1,0,0,0],[0,0,1,1,1,1,0,0],[0,1,0,1,1,0,1,0],[0,2,1,1,1,1,2,0],[1,3,1,1,1,1,3,1],[2,4,4,3,3,4,4,2],[3,5,4,2,2,4,5,3],[4,6,5,4,4,5,6,4],[5,0,4,5,5,4,0,5],[6,1,1,0,0,1,1,6]],Tadpole:[[0,1,1,0],[1,1,1,2]],"Wing I":[[0,0,0,1,1,0,0,0],[0,0,1,0,0,1,0,0],[0,1,0,0,0,0,1,0],[1,0,0,0,0,0,0,1]],"Wing II":[[0,1,1,0,0,0],[1,0,0,1,0,0],[0,0,0,0,1,0],[0,0,0,0,0,1]],"Wings Deployer":[[0,1,1,0],[0,1,1,0],[5,1,1,5],[4,1,1,4]]},"Spiky Spillers":{"Diamond Wave":[[1,1]],Stretchers:[[1,1],[1,0]],"Square Wave":[[1,1],[1,1]],"Kite Wave":[[0,1],[1,1],[1,1]],"Spiky Wave":[[1,1],[1,1],[1,1]],Ship:[[1,1],[2,2]],Walker:[[1,1,1,1,1],[2,1,2,1,2],[0,1,0,2,0],[0,2,0,0,0]],Jumper:[[1,1,1,1,1],[2,1,2,1,2],[0,2,0,2,0]],Angel:[[1,1,0,0,0,0,0,0,1,1],[2,2,1,0,0,0,0,1,2,2],[3,3,2,1,0,0,1,2,3,3],[0,0,3,2,0,0,2,3,0,0],[0,0,4,3,1,1,3,4,0,0],[0,0,5,4,2,2,4,5,0,0],[0,0,0,5,3,3,5,0,0,0],[0,0,0,0,4,4,0,0,0,0]],"Ship II":[[1,1,1],[2,1,2],[0,2,0]],"1d Automaton":[[1,1,1,1,1,1,1,1,1,1],[2,1,2,2,2,2,2,2,2,2],[3,3,3,3,3,3,3,3,3,3]],"1d Automaton II":[[1,1,1,1,1,1,1,1,1,1],[2,1,2,2,2,2,2,2,1,2],[3,3,3,3,3,3,3,3,3,3]],"Fancy Ship I":[[0,0,0,0,1,1,0,0,0,0],[0,0,0,0,2,2,0,0,0,0],[0,0,0,1,3,3,1,0,0,0],[0,0,1,2,4,4,2,1,0,0],[1,1,2,3,0,0,3,2,1,1],[2,1,3,4,0,0,4,3,1,2],[3,1,4,0,0,0,0,4,1,3],[0,2,0,0,0,0,0,0,2,0],[0,3,0,0,0,0,0,0,3,0]],"Fancy Ship II":[[0,0,0,0,1,1,0,0,0,0],[0,0,0,0,2,2,0,0,0,0],[0,0,0,1,3,3,1,0,0,0],[0,0,1,1,4,4,1,1,0,0],[0,1,2,1,5,5,1,2,1,0],[1,2,3,1,6,6,1,3,2,1],[2,3,4,1,7,7,1,4,3,2],[3,0,5,1,8,8,1,5,0,3],[0,0,6,2,9,9,2,6,0,0],[0,0,0,3,0,0,3,0,0,0]],"Fancy Ship III":[[1,1,0,0,0,0,0,0,1,1],[2,2,0,0,1,1,0,0,2,2],[3,3,1,0,2,2,0,1,3,3],[0,0,2,1,3,3,1,2,0,0],[0,0,3,2,4,4,2,3,0,0],[0,0,4,3,5,5,3,4,0,0],[0,0,5,4,0,0,4,5,0,0],[0,0,0,5,0,0,5,0,0,0]],"Fancy Ship IV":[[0,0,0,0,1,1,0,0,0,0],[0,0,0,0,2,2,0,0,0,0],[0,1,1,0,3,3,0,1,1,0],[1,2,2,1,4,4,1,2,2,1],[2,0,3,2,5,5,2,3,0,2],[0,0,4,3,6,6,3,4,0,0],[0,0,5,4,7,7,4,5,0,0],[0,0,0,5,8,8,5,0,0,0]],"Fancy Ship V":[[0,0,0,0,1,1,0,0,0,0],[0,0,0,1,2,2,1,0,0,0],[0,0,1,1,3,3,1,1,0,0],[0,1,2,1,4,4,1,2,1,0],[1,2,3,1,5,5,1,3,2,1],[2,3,4,2,0,0,2,4,3,2],[3,4,0,3,0,0,3,0,4,3],[4,0,0,4,0,0,4,0,0,4],[0,0,0,5,0,0,5,0,0,0]],"Fancy Ship VI":[[0,0,0,0,1,1,0,0,0,0],[0,0,0,0,2,2,0,0,0,0],[0,0,0,1,3,3,1,0,0,0],[0,0,1,1,4,4,1,1,0,0],[0,1,1,2,5,5,2,1,1,0],[1,1,2,0,0,0,0,2,1,1],[2,2,0,0,0,0,0,0,2,2]]},"Star Wars":{Snake:[[0,1,2,1,2,1,0],[1,2,0,1,0,2,1],[1,2,0,1,0,2,1],[0,1,2,1,2,1,0]],"Gun 0":[[1,2,3],[0,1,0],[1,1,0],[0,1,0],[0,1,0],[1,1,0],[0,1,2],[3,0,1]],"Gun 1":[[0,0,1,0,0,0,0,0,0],[0,1,1,1,0,0,1,2,0],[3,0,1,0,0,0,1,0,3],[0,0,1,1,0,1,1,1,0],[0,0,1,1,0,0,1,0,0],[0,0,2,0,0,3,2,1,0]],"Gun 2":[[0,0,0,1,0,1,0,0],[0,1,2,0,1,1,1,0],[1,2,3,1,1,0,1,1],[1,2,3,0,0,1,1,0],[0,0,0,0,1,2,0,0]],"Gun 3":[[0,0,0,0,0,3,2,0],[0,0,1,0,0,1,0,0],[1,1,1,1,1,1,1,1],[0,1,0,0,0,0,1,0],[0,1,0,0,0,0,1,0],[1,1,1,0,0,1,1,1],[0,1,0,0,0,0,1,0]],"Gun 4":[[0,0,0,1,0,0],[0,0,1,1,1,3],[0,0,0,1,0,2],[0,0,0,0,0,1],[0,1,0,1,1,0],[1,1,1,1,1,1],[0,1,0,0,1,0]],"Gun 5":[[0,1,1,2,0],[2,0,1,0,3],[3,1,1,1,0],[0,1,0,2,1]],"Gun 6":[[0,0,0,2,0],[3,0,1,1,0],[2,1,1,1,3],[1,0,1,0,2],[0,0,0,1,0]],"Gun 7":[[0,1,0,0,1,0,0,0,0,0],[1,1,1,2,2,1,0,3,2,0],[0,1,0,2,0,1,0,0,1,0],[0,1,2,2,1,1,1,1,1,1],[0,0,1,0,0,1,0,0,1,0]],"Gun 8":[[0,0,0,0,3,2,0,0],[0,0,0,0,1,0,3,0],[0,0,1,2,0,1,0,0],[0,0,2,3,1,1,0,0],[3,1,0,1,0,1,1,1],[2,0,1,1,1,0,1,3],[0,3,0,0,1,1,1,0],[0,0,0,0,1,3,0,0]],"Gun 9":[[0,0,0,1,0,3,0,0],[0,0,2,0,1,0,2,1],[0,0,3,1,1,1,2,1],[0,0,1,0,1,0,3,0],[3,0,1,0,1,0,0,0],[2,1,1,1,3,0,0,0],[1,0,1,0,2,0,0,0],[0,0,0,0,1,3,0,0]],"Gun 10":[[0,0,1,1,3,0,1,0],[0,1,0,2,2,1,1,1],[1,1,1,0,0,0,1,0],[0,1,0,0,0,0,3,0]],"Gun 11":[[0,3,2,1,1,2,3,0],[0,0,1,0,0,1,0,0],[1,1,1,1,1,1,1,1],[2,3,0,0,0,0,3,2]],"Gun 12":[[0,2,3,0,0,1,0,0,0],[1,0,1,1,1,1,0,3,0],[0,1,1,0,0,1,1,2,1],[0,0,1,1,1,1,0,2,1],[0,1,2,0,0,0,3,0,0]],"Gun 13":[[0,0,0,0,3,0,0,0,0],[0,0,0,0,2,0,0,0,0],[0,0,1,0,1,0,1,0,0],[0,2,3,1,1,1,3,2,0],[1,0,1,0,0,0,1,0,1],[1,1,1,1,0,1,1,1,1],[2,0,1,0,2,0,1,0,2],[0,3,0,1,0,1,0,3,0]],"Gun 14":[[0,0,0,1,0,1,0,0,0],[1,0,1,0,1,0,1,0,1],[2,1,1,1,1,1,1,1,2],[0,1,0,1,0,1,0,1,0],[0,1,0,0,1,0,0,1,0],[1,1,1,1,1,1,1,1,1],[0,1,0,0,1,0,0,1,0]],"Gun 15":[[0,1,0,0,0,0],[1,1,1,0,0,0],[0,1,0,0,1,0],[0,0,0,1,1,1],[0,0,0,0,1,0]],Star:[[0,0,0,1,0,0,0],[0,0,1,1,1,0,0],[0,1,0,0,0,1,0],[1,1,0,0,0,1,1],[0,1,0,0,0,1,0],[0,0,1,1,1,0,0],[0,0,0,1,0,0,0]]},Swirl:{"Exploding Star":[[0,1,0],[1,1,1],[0,1,0]],"Flame Glider":[[0,0,0,1,1,1,0],[0,0,1,2,2,1,0],[0,0,1,1,4,4,1],[0,1,3,6,6,1,1],[1,3,3,6,0,0,0]],Flamewhirl:[[0,0,0,0,0,2,1],[0,4,0,0,2,1,0],[1,1,5,2,2,1,0],[1,2,4,2,1,0,0],[0,1,1,1,0,0,0]],Glider:[[0,0,0,0,1,0,0,0,0],[0,0,0,1,1,1,0,0,0],[0,0,1,3,4,3,1,0,0],[1,1,3,2,8,2,3,1,1],[1,1,6,8,8,8,7,1,1],[4,6,5,0,0,0,5,6,4]],Quartet:[[0,0,0,1,1,1,0,0,0,0],[0,0,0,1,2,2,1,0,0,0],[0,0,0,1,0,1,1,0,0,0],[0,1,1,0,0,0,0,1,1,1],[1,2,1,0,0,0,0,0,2,1],[1,2,0,0,0,0,0,1,2,1],[1,1,1,0,0,0,0,1,1,0],[0,0,0,1,1,0,1,0,0,0],[0,0,0,1,2,2,1,0,0,0],[0,0,0,0,1,1,1,0,0,0]],Star:[[0,0,0,1,0,0,0],[0,0,1,0,1,0,0],[0,1,0,0,0,1,0],[1,0,0,0,0,0,1],[0,1,0,0,0,1,0],[0,0,1,0,1,0,0],[0,0,0,1,0,0,0]],Swirlpool:[[0,4,0,0,2,1],[1,1,5,2,2,1],[1,2,4,2,1,0],[0,1,1,1,0,0]],Wave:[[0,0,0,1,0,0,0],[0,0,0,1,0,0,0],[0,0,1,2,1,0,0],[1,1,2,0,2,1,1],[0,0,1,2,1,0,0],[0,0,0,1,0,0,0],[0,0,0,1,0,0,0]]},"Tacky Tadpoles":{"Asymmetric cruiser":[[0,0,0,1,1,0,0,0,0],[0,0,1,1,1,1,0,0,0],[0,1,0,1,1,0,1,0,0],[0,2,1,2,2,2,1,0,0],[1,3,2,3,3,1,2,1,0],[2,4,1,1,1,3,1,0,0],[3,0,2,0,0,2,3,4,0],[4,0,0,0,0,4,0,0,3],[0,0,0,0,0,4,0,0,4]],Beetle:[[0,0,1,1,0,0,1,1,0,0],[0,1,0,1,1,1,1,0,1,0],[1,0,0,0,2,2,0,0,0,1]],Cruiser:[[0,0,0,0,1,1,0,0,0,0],[0,0,0,0,1,1,0,0,0,0],[0,0,1,1,1,1,1,1,0,0],[0,1,1,1,2,2,1,1,1,0],[1,1,3,1,1,1,1,3,1,1],[2,1,4,1,1,1,1,4,1,2],[3,2,1,0,0,0,0,1,2,3],[4,0,1,2,0,0,2,1,0,4],[0,3,1,0,3,3,0,1,3,0],[0,0,2,4,0,0,4,2,0,0]],"Diamond Wave":[[1,1]],Jellyfish:[[0,0,1,1,0,0,1,1,0,0],[0,1,1,1,1,1,1,1,1,0],[1,0,2,2,1,1,2,2,0,1],[1,1,1,3,3,3,3,1,1,1]],Octopus:[[0,0,0,1,1,0,0,0],[0,0,0,1,1,0,0,0],[0,1,1,1,1,1,1,0],[0,2,0,2,2,0,2,0],[1,3,1,3,3,1,3,1],[2,4,2,4,4,2,4,2],[3,0,3,4,4,3,0,3],[4,0,4,0,0,4,0,4]],Quartet:[[1,1],[1,1]],Shuttle:[[0,1,1,0],[1,1,1,1]],Tadpole:[[0,1,1,0],[1,1,1,2]],"Tadpole Gun":[[0,1,1,0],[2,1,1,2]],"Wing I":[[0,0,0,1,1,0,0,0],[0,0,1,0,0,1,0,0],[0,1,0,0,0,0,1,0],[1,0,0,0,0,0,0,1]],"Wing II":[[0,1,1,0,0,0],[1,0,0,1,0,0],[0,0,0,0,1,0],[0,0,0,0,0,1]]},"Traipsing Trains":{"Car I":[[2,1,2],[0,2,0],[0,3,0],[0,4,0]],"Car II":[[2,1,1,2],[0,2,2,0],[0,3,3,0]],"Car III":[[2,1,1,1,2],[0,2,2,2,0],[0,3,3,3,0]],"Car IV":[[2,1,1,1,1,2],[0,2,2,2,2,0],[0,3,3,3,3,0]],"Quartet I":[[1]],"Quartet II":[[1,1],[1,1]]},"Wacky Waves":{"Diamond Wave":[[1,1]],Gunship:[[1,1,0,0,0,0,0,0,1,1],[3,2,1,0,0,0,0,1,2,3],[0,3,1,0,0,0,0,1,3,0],[4,4,2,2,0,0,2,2,4,4],[6,5,4,3,0,0,3,4,5,6],[0,6,4,0,0,0,0,4,6,0],[7,7,5,4,0,0,4,5,7,7],[0,0,7,6,5,5,6,7,0,0],[0,0,7,6,5,5,6,7,0,0]],Ship:[[1,1],[2,2]],"Ship II":[[0,1,1,0],[1,2,2,1],[2,0,0,2]],"Ship III":[[0,0,0,0,1,1,0,0,0,0],[0,0,0,1,2,2,1,0,0,0],[0,0,1,2,0,0,2,1,0,0],[0,0,2,0,0,0,0,2,0,0],[0,1,3,0,0,0,0,3,1,0],[1,2,0,0,0,0,0,0,2,1],[2,3,0,0,0,0,0,0,3,2],[3,0,0,0,0,0,0,0,0,3]],"Ship IV":[[0,0,1,1,0,0],[0,0,2,2,0,0],[0,1,3,3,1,0],[0,2,4,4,2,0],[1,3,0,0,3,1],[2,4,0,0,4,2],[3,0,0,0,0,3],[4,0,0,0,0,4]],"Ship V":[[0,0,0,1,1,0,0,0],[0,0,0,2,2,0,0,0],[0,0,1,3,3,1,0,0],[0,0,2,4,4,2,0,0],[0,1,3,0,0,3,1,0],[0,2,4,0,0,4,2,0],[1,3,0,0,0,0,3,1],[2,4,0,0,0,0,4,2],[3,0,0,0,0,0,0,3]],"Ship VI":[[1,1,0,0,0,0,0,0],[2,2,1,0,0,0,0,0],[3,3,1,1,0,0,0,0],[4,4,3,2,1,0,0,0],[5,5,3,0,2,1,0,0],[6,6,4,3,3,1,1,0],[0,0,0,0,0,3,2,1]],"Square Wave":[[1,1],[1,1]],Stretcher:[[1,1],[1,0]]},"Weird Wedges":{"Walker I":[[0,2,0],[1,5,3],[6,0,0]],"Walker II":[[0,2,0],[1,5,3],[0,0,4]],"Walker III":[[0,0,2,0,0],[0,1,5,3,2],[5,6,8,4,3],[6,7,1,9,8]],"Walker IV":[[0,0,2,0,0],[0,1,5,3,2],[5,6,7,4,3],[6,7,0,9,8],[0,0,0,0,9]],"Weird Wedge I":[[1,1,0],[1,2,1],[0,1,0]],"Weird Wedge II":[[0,0,0,0,0,1,0],[2,1,1,0,1,1,1],[0,2,1,1,3,1,0],[0,0,2,5,1,0,0],[0,0,0,2,1,1,0],[0,0,0,0,2,1,0],[0,0,0,0,0,2,0]],"Weird Wedge III":[[0,0,0,0,0,0,0,1,0],[0,0,0,0,1,0,1,1,1],[0,1,0,1,1,1,3,1,0],[1,1,1,3,1,5,1,0,0],[0,1,5,1,7,1,1,1,0],[0,7,3,9,1,3,1,0,0],[0,5,1,3,5,1,0,0,0],[0,0,5,7,1,1,1,0,0],[0,0,0,0,0,1,0,0,0]],"Weird Wedge IV":[[1,1,0,1,1,0,0,0,0,0],[1,2,1,1,1,3,2,3,2,0],[0,1,4,4,1,4,4,4,3,2],[1,1,4,6,2,5,3,7,6,7],[1,1,1,2,8,8,5,8,8,8],[0,3,4,5,8,0,6,9,7,1],[0,2,4,3,5,6,2,2,9,2],[0,3,4,7,8,9,2,0,0,3],[0,2,3,6,8,7,9,0,0,0],[0,0,2,7,8,1,2,3,0,0]],"Wobbler I":[[0,0,0,0,2,0,0,0,0],[0,1,2,3,5,1,0,0,0],[1,2,3,4,8,6,5,4,3],[6,7,8,9,1,7,6,4,4],[7,8,9,0,0,2,1,0,9]],"Wobbler II":[[0,0,2,0,0,0],[1,3,3,1,0,0],[2,4,6,4,3,2],[5,7,7,5,4,3],[6,8,0,8,7,6],[9,0,0,9,8,7]],"Wobbler III":[[0,0,0,1,1,0,0,0,0],[0,1,2,4,2,0,0,0,0],[1,2,3,5,5,3,2,1,0],[4,5,6,8,6,4,3,2,1],[5,6,7,9,9,7,6,5,4],[8,9,0,0,0,8,7,6,5],[9,0,0,0,0,0,0,9,8],[0,0,0,0,0,0,0,0,9]],"Wobbler IV":[[0,0,0,3,1,0,0,0,0],[2,3,4,6,2,1,0,0,0],[3,4,5,9,7,6,5,4,3],[8,9,0,0,8,7,6,5,4],[9,0,0,0,0,0,0,0,9]],"Wobbler V":[[0,0,0,1,0,0],[0,0,2,2,0,0],[0,1,3,5,3,2],[3,4,6,6,4,3],[4,5,0,9,7,6],[7,8,0,0,8,0],[8,9,0,0,0,0]],"Wobbler VI":[[0,3,1,0,0,0,0],[4,6,2,1,0,0,0],[5,9,7,6,5,4,3],[0,0,8,7,6,5,4],[0,0,0,0,0,0,9]]},"Wiggly Wings":{"Asymmetric cruiser":[[0,0,0,1,1,0,0,0,0],[0,0,1,1,1,1,0,0,0],[0,1,0,1,1,0,1,0,0],[0,2,1,2,2,2,1,0,0],[1,3,2,3,3,1,2,1,0],[2,4,1,1,1,3,1,0,0],[3,0,2,0,0,2,3,4,0],[4,0,0,0,0,4,0,0,3],[0,0,0,0,0,4,0,0,4]],"Beetle I":[[0,0,1,1,0,0,1,1,0,0],[0,1,0,1,1,1,1,0,1,0],[1,0,0,0,2,2,0,0,0,1]],"Beetle II":[[0,0,0,1,1,0,0,0],[0,1,1,1,1,1,1,0],[0,2,1,1,1,1,2,0],[1,0,0,1,1,0,0,1],[2,1,0,2,2,0,1,2],[0,2,2,1,1,2,2,0],[1,0,2,1,1,2,0,1],[2,1,1,0,0,1,1,2],[0,2,1,0,0,1,2,0],[1,0,0,2,2,0,0,1]],"Crooked Ship":[[0,0,1,1,0,0,0],[0,2,1,1,2,1,1],[1,1,2,1,0,2,2],[2,2,0,1,0,0,0],[0,0,1,1,1,1,1],[1,0,2,1,1,2,2],[2,2,0,0,0,0,0]],"Diamond Wave":[[1,1]],"Double Shuttle":[[0,1,1,0],[2,1,1,2]],Jellyfish:[[0,0,1,1,0,0,1,1,0,0],[0,1,1,1,1,1,1,1,1,0],[1,0,2,2,1,1,2,2,0,1],[1,1,1,3,3,3,3,1,1,1]],Octopus:[[0,0,0,1,1,0,0,0],[0,0,0,1,1,0,0,0],[0,1,1,1,1,1,1,0],[0,2,0,2,2,0,2,0],[1,3,1,3,3,1,3,1],[2,4,2,4,4,2,4,2],[3,0,3,4,4,3,0,3],[4,0,4,0,0,4,0,4]],Quartet:[[1,1],[1,1]],"Shuttle I":[[0,1,1,0],[1,1,1,1]],"Shuttle II":[[0,0,1,1,0,0],[0,1,1,1,1,0],[0,0,1,1,0,0],[1,1,1,1,1,1]],"Squid I":[[0,0,0,0,1,1,0,0,0,0],[0,0,0,2,1,1,2,0,0,0],[0,0,1,1,1,1,1,1,0,0],[0,1,1,1,1,1,1,1,1,0],[0,0,2,1,1,1,1,2,0,0],[2,1,1,1,1,1,1,1,1,2],[2,1,3,2,1,1,2,3,1,2]],"Squid II":[[0,0,0,0,1,1,0,0,0,0],[0,0,0,1,1,1,1,0,0,0],[0,0,1,0,1,1,0,1,0,0],[0,2,1,1,1,1,1,1,2,0],[0,2,1,1,1,1,1,1,2,0],[1,3,4,3,2,2,3,4,3,1],[2,4,5,2,3,3,2,5,4,2],[3,5,6,6,4,4,6,6,5,3],[0,4,5,2,2,2,2,5,4,0],[0,6,0,5,4,4,5,0,6,0]],"Squid III":[[0,0,0,1,1,0,0,0],[0,0,1,1,1,1,0,0],[0,1,0,1,1,0,1,0],[0,2,1,1,1,1,2,0],[1,3,1,1,1,1,3,1],[2,4,4,3,3,4,4,2],[3,5,4,2,2,4,5,3],[4,6,5,4,4,5,6,4],[5,0,4,5,5,4,0,5],[6,1,1,0,0,1,1,6]],Tadpole:[[0,1,1,0],[1,1,1,2]],"Wing I":[[0,0,0,1,1,0,0,0],[0,0,1,0,0,1,0,0],[0,1,0,0,0,0,1,0],[1,0,0,0,0,0,0,1]],"Wing II":[[0,1,1,0,0,0],[1,0,0,1,0,0],[0,0,0,0,1,0],[0,0,0,0,0,1]]}},w={randomnessLogShift:0,squareVsRectangularMaskProbability:.7,maxSeedSize:10,randomSeedingWeights:{Random:1,"Random p2h":1,"Random p2v":1,"Random d2a":1,"Random d2b":1,"Random g2":1,"Random p4":1,"Random d4":1,"Random g4":1,"Random r8":1},seedingWeightsWeights:{Random:1},seedingWeights:{Random:{}}},k={Default:w,"Beating Beacons":{...w,name:"Beating Beacons",seedingConfig:W["Beating Beacons"],seedingWeightsWeights:{Random:1,Mixed:1,Beacons:1,Ships:1,"Double Waves":1,"Diamond Waves":1,"Triangular Waves":1},seedingWeights:{Random:{},Mixed:{Beacon:.2,"Cruiser I":.2,"Cruiser II":.2,"Cruiser III":.2,"Cruiser IV":.2,"Diamond Wave":.2,"Double Wave":.2,"Glitching Ship":.2,"Gunning Ship":.2,Ship:.2,Shuttle:.2,"Triangular Wave":.2,"Wing v1":.2,"Wing v3":.2,"Wings v2":.2,Wingship:.2},Beacons:{Beacon:1},Ships:{"Cruiser I":1,"Cruiser II":1,"Cruiser III":1,"Cruiser IV":1,"Gunning Ship":1,"Glitching Ship":1,Ship:1,Shuttle:1,Wingship:1,"Wing v1":1,"Wing v2":1,"Wing v3":1},"Double Waves":{"Double Wave":4,Beacon:.2},"Diamond Waves":{"Diamond Wave":4,Beacon:.2},"Triangular Waves":{"Triangular Wave":4,Beacon:.2}}},"Bilious Billows":{...w,name:"Bilious Billows",seedingConfig:W["Bilious Billows"],seedingWeightsWeights:{Random:1,Mixed:1,Caterpillars:1,Spinners:1,Waves:1},seedingWeights:{Random:{},Mixed:{Caterpillar:2,"Caterpillar II":2,"Caterpillar III":2,"Diagonal Caterpillar":2,Spinner:2,"Wave I":2,"Wave II":2,"Wave III":2,"Wave IV":2},Caterpillars:{Caterpillar:3,"Caterpillar II":3,"Caterpillar III":3,"Diagonal Caterpillar":3},Spinners:{Spinner:10},Waves:{"Wave I":3,"Wave II":3,"Wave III":3,"Wave IV":3}}},"Brian's brain":{...w,name:"Brian's brain",seedingConfig:W["Brian's Brain"],seedingWeightsWeights:{Random:1,Mixed:1,Butterflies:1,"Diamond Waves":.5,Snakes:1,Waves:1},seedingWeights:{Random:{},Mixed:{Butterfly:1,"Diamond Wave":.5,"Oscillator I":2,"Oscillator II":2,Star:4,Snake:4,"Square Wave":4},Butterflies:{Butterfly:120},"Butterfly Bombers":{"Butterfly Bomber":30},"Diamond Waves":{"Diamond Wave":20},Snakes:{Snake:100},Waves:{"Square Wave":8,Spaceship:3}}},"Brian's brain (regularised)":{...w,name:"Brian's brain (regularised)",seedingConfig:W["Brian's Brain"],seedingWeightsWeights:{"Butterfly Bombers":5,"Diamond Waves":1,Waves:3},seedingWeights:{"Butterfly Bombers":{"Butterfly Bomber":30},"Diamond Waves":{"Diamond Wave":20},Waves:{"Square Wave":8,Spaceship:3}}},"Brian's brain (modified)":{...w,name:"Brian's brain (modified)",seedingConfig:W["Brian's Brain"],seedingWeightsWeights:{Random:1,Mixed:1,Butterflies:1,"Diamond Waves":1,Snakes:1,Stars:3,Waves:1},seedingWeights:{Random:{},Mixed:{Butterfly:1,"Diamond Wave":.5,"Oscillator I":2,"Oscillator II":2,Star:4,Snake:4,"Square Wave":4},Butterflies:{Butterfly:120},"Diamond Waves":{"Diamond Wave":20},Snakes:{Snake:100},Stars:{"Oscillator I":5,"Oscillator II":5,Star:10,"Short-lived Star":5},Waves:{"Square Wave":8,Spaceship:3}}},"Brian's brain family":{...w,name:"Brian's brain family",seedingConfig:W["Brian's Brain"],seedingWeightsWeights:{Random:1,Mixed:1,Butterflies:1,"Diamond Waves":1,Snakes:1,Waves:1},seedingWeights:{Random:{},Mixed:{Butterfly:1,"Diamond Wave":.5,"Oscillator I":2,"Oscillator II":2,Star:4,Snake:4,"Square Wave":4},Butterflies:{Butterfly:120},"Diamond Waves":{"Diamond Wave":20},Snakes:{Snake:100},Waves:{"Square Wave":8,Spaceship:3}}},"Cranky Crawlers":{...w,name:"Cranky Crawlers",seedingConfig:W["Cranky Crawlers"],seedingWeightsWeights:{Random:1,Mixed:1},seedingWeights:{Random:{},Mixed:{Crawler:2,"Crawler Twins":2,"Double Crawler":2,"Double Crawler II":2,Quartet:2}}},"Crummy Cruisers":{...w,name:"Crummy Cruisers",seedingConfig:W["Crummy Cruisers"],seedingWeightsWeights:{Random:1,Mixed:1,Cruisers:1,Ships:1},seedingWeights:{Random:{},Mixed:{Cruiser:.2,Quartet:.2,Ship:.2,"Wide Quartet":.2,"Quartet XXL":.2,"Double Ship":.2,"Twisted Quartet":.2,"Burning Cruiser":.2,"Burning Ship":.2,"Double Cruiser II":.2,"Double Cruiser I":.2,"Triple Trouble":.2,"Triple Trouble II":.2,"Triple ship":.2,"Triple Trouble III":.2,"Burning Cruiser II":.2},Cruisers:{Cruiser:1,"Burning Cruiser":1,"Burning Cruiser II":1,"Double Cruiser I":1,"Double Cruiser II":1,"Triple Trouble":1,"Triple Trouble II":1,"Triple Trouble III":1,"Quartet XXL":1},Ships:{Ship:1,"Double Ship":1,"Triple ship":1}}},"Extravagant Extenders":{...w,name:"Extravagant Extenders",seedingConfig:W["Extravagant Extenders"],seedingWeightsWeights:{Random:1,Mixed:1,Stars:1,Extenders:1},seedingWeights:{Random:{},Mixed:{"Binary Star":1,Extender:1,"Extender Gun":1,"Quadruple Extender I":1,"Quadruple Extender II":1,"Quadruple Scout":1,Scout:1,"Star I":1,"Star II":1},Stars:{"Binary Star":1,"Star I":1,"Star II":1,Scout:1,Extender:1},Extenders:{Extender:3,"Quadruple Extender I":1,"Quadruple Extender II":1,"Quadruple Scout":1,Scout:1}}},"Fancy Fans":{...w,name:"Fancy Fans",seedingConfig:W["Fancy Fans"],seedingWeightsWeights:{Random:1,Mixed:1,Ships:1,Wings:1,Walkers:1,Waves:1},seedingWeights:{Random:{},Mixed:{"Asymmetric Wing v7":1,"Asymmetric Wing v8":1,"Asymmetric Wing v6":1,"Asymmetric Wing v10":1,"Double Walker":1,"Inverted Wing v12":1,Quartet:1,Quintet:1,"Ship v4":1,"Ship v5":1,"Ship v6":1,"Ship v7":1,"Ship v8":1,"Ship v9":1,"Ship v10":1,"Trio II":1,Walker:1,Wave:1,"Wing v8":1,"Wing v9":1,"Wing v10":1,"Wing v11":1,"Wing v12":1,"Wing v12b":1,"Wing v13":1},Ships:{"Ship v4":3,"Ship v5":3,"Ship v6":3,"Ship v7":3,"Ship v8":3,"Ship v9":3,"Ship v10":3},Wings:{"Asymmetric Wing v7":1,"Asymmetric Wing v8":1,"Asymmetric Wing v6":1,"Asymmetric Wing v10":1,"Inverted Wing v12":1,"Wing v8":1,"Wing v9":1,"Wing v10":1,"Wing v11":1,"Wing v12":1,"Wing v12b":1,"Wing v13":1},Walkers:{"Double Walker":5,Walker:8},Waves:{Wave:15}}},"Flaming Flaneries":{...w,name:"Flaming Flaneries",seedingConfig:W["Flaming Flaneries"],seedingWeightsWeights:{Random:1,Mixed:1,Dancers:1,Flies:1,Ships:1,Snakes:1,Stars:1,Stretchers:1,Thrusters:1,Walkers:1,Waves:1},seedingWeights:{Random:{},Mixed:{Dancer:.2,"Diamond Wave":.2,Dragger:.2,Jumper:.2,Fly:.2,"Kite Wave":.2,"Ship Layer":.2,"Ship Layer II":.2,"Ship I":.2,"Ship II":.2,"Ship III":.2,"Ship IV":.2,"Ship V":.2,"Ship VI":.2,"Ship VII":.2,Snake:.2,"Square Wave":.2,Star:.2,Stretchers:.2,"Thruster I":.2,"Thruster II":.2,"Thruster III":.2,"Walker I":.2,"Walker II":.2},Dancers:{Dancer:10},Flies:{Fly:10},Ships:{"Ship I":2,"Ship II":2,"Ship III":2,"Ship IV":2,"Ship V":2,"Ship VI":2,"Ship VII":2},Snakes:{Snake:20},Stars:{Star:5},Stretchers:{Stretchers:10},Thrusters:{"Thruster I":8,"Thruster II":8,"Thruster III":8},Walkers:{"Walker I":10,"Walker II":10},Waves:{"Diamond Wave":3,"Kite Wave":3,"Square Wave":3}}},"Fuming Fumblers":{...w,name:"Fuming Fumblers",seedingConfig:W["Fuming Fumblers"],seedingWeightsWeights:{Random:1,Mixed:1,"Fuming Ships":1,Quartets:1,Ships:1,Supernovae:1,Walkers:1},seedingWeights:{Random:{},Mixed:{"Fuming Ship I":2,"Fuming Ship II":2,"Quartet I":2,"Quartet II":2,"Ship I":2,"Ship II":2,"Ship III":2,"Ship IV":2,"Ship V":2,Star:2,Supernova:2,Walker:2},"Fuming Ships":{"Fuming Ship I":5,"Fuming Ship II":5},Quartets:{"Quartet I":5,"Quartet II":5},Ships:{"Ship I":3,"Ship II":3,"Ship III":3,"Ship IV":3,"Ship V":3},Supernovae:{Supernova:5},Walkers:{Walker:15}}},"Game of Life":{...w,name:"Game of Life",seedingConfig:W["Game of Life"],seedingWeightsWeights:{Random:1,Mixed:1,"Gliders and Spaceships":1,Gliders:1,Spaceships:1},seedingWeights:{Random:{},Mixed:{Glider:2,Oscillator:1,"Spaceship 1":1,"Spaceship 2":1,"Spaceship 3":1},"Gliders and Spaceships":{Glider:20,"Spaceship 1":8,"Spaceship 2":8,"Spaceship 3":8},Gliders:{Glider:100},Spaceships:{"Spaceship 1":40,"Spaceship 2":40,"Spaceship 3":40}}},Generations:{...w,name:"Generations",seedingConfig:W.Generations,seedingWeightsWeights:{Mixed:1},seedingWeights:{Mixed:{"Diamond Wave":3,Spaceship:3,"Square Wave":3,Quartet:3}}},"Giant Galleons":{...w,name:"Giant Galleons",seedingConfig:W["Giant Galleons"],seedingWeightsWeights:{Random:1,Mixed:1,Ships:1,Supernovae:1,Waves:1},seedingWeights:{Random:{},Mixed:{"Quartet I":.5,"Quartet II":.5,"Quartet III":.5,"Quartet IV":.5,"Ship I":.5,"Ship II":.5,"Ship III":.5,"Ship IV":.5,"Ship V":.5,Supernova:.5,Wave:.5},Ships:{"Ship I":10,"Ship II":10,"Ship III":10,"Ship IV":10,"Ship V":10},Supernovae:{Supernova:10},Waves:{Wave:10}}},"Growing Gliders":{...w,name:"Growing Gliders",seedingConfig:W["Growing Gliders"],seedingWeightsWeights:{Random:1,Mixed:1,Gliders:1,"Glider Guns":1,"Quadruple Gliders":1,Ships:1},seedingWeights:{Random:{},Mixed:{"Double Glider I":.6,"Double Glider II":.6,"Glider I":.6,"Glider II":.6,"Glider III":.6,"Glider IV":.6,"Glider V":.6,"Glider VI":.6,"Glider VII":.6,"Glider VIII":.6,"Glider IX":.6,"Glider Gun":.6,"Quadruple Glider":.6,"Ship I":.6,"Ship II":.6,"Ship III":.6,"Ship IV":.6},Gliders:{"Glider I":2,"Glider II":2,"Glider III":2,"Glider IV":2,"Glider V":2,"Glider VI":2,"Glider VII":2,"Glider VIII":2,"Glider IX":2},"Glider Guns":{"Glider Gun":10},"Quadruple Gliders":{"Quadruple Glider":10},Ships:{"Ship I":5,"Ship II":5,"Ship III":5,"Ship IV":5}}},"Hefty Hulls":{...w,name:"Hefty Hulls",seedingConfig:W["Hefty Hulls"],seedingWeightsWeights:{Random:1,Mixed:1,"Multiple Ships":1,Ships:1,"Ship Guns":1},seedingWeights:{Random:{},Mixed:{"12 Ships":.2,"12 Ships II":.2,"12 Ships III":.2,"16 Ships":.2,"20 Ships":.2,"28 Ships":.2,"Diamond Wave":.2,Doublet:.2,"Flamboyant Ship":.2,"Gun I":.2,"Gun II":.2,Octet:.2,"Octet II":.2,"Octet III":.2,"Octet IV":.2,"Octet V":.2,"Octet VI":.2,"Octet VII":.2,"Quadruple Gun":.2,Quartet:.2,"Quartet II":.2,"Quartet III":.2,Ship:.2,"Ship II":.2,"Ship III":.2,"Wing II":.2,"Wing I":.2,"Wing III":.2,"Wings I":.2,"Wings II":.2,"Wings III":.2,"Wing IV":.2},"Multiple Ships":{"12 Ships":1,"2 Ships II":1,"12 Ships III":1,"16 Ships":1,"20 Ships":1,"28 Ships":1,Doublet:1,Octet:1,"Octet II":1,"Octet III":1,"Octet IV":1,"Octet V":1,"Octet VI":1,"Octet VII":1,Quartet:1,"Quartet II":1,"Quartet III":1},Ships:{"Flamboyant Ship":3,Ship:3,"Ship II":3,"Ship III":3,"Wing I":3,"Wing II":3,"Wing III":3,"Wing IV":3,"Wings I":3,"Wings II":3,"Wings III":3},"Ship Guns":{"Gun I":4,"Gun II":4,"Quadruple Gun":4}}},"Leggy Legends":{...w,name:"Leggy Legends",seedingConfig:W["Leggy Legends"],seedingWeightsWeights:{Random:1,Mixed:1,Cuttlefish:1,Dreadnoughts:1,"Flying Saucers":1,Jellyfish:1,Motherships:1,Octopus:1,"Siamese Ships":1,Ships:1,Trilobit:1,"Triple Troubles":1},seedingWeights:{Random:{},Mixed:{Ship:.3,"Double Ship":.3,Quartet:.3,"Growing Wings":.3,"Wide Ship":.3,"Extra Wide Ship":.3,"Flying Saucer":.3,Mothership:.3,"Triple Trouble":.3,"Triple Trouble II":.3,Dreadnought:.3,"Siamese Ships":.3,Jellyfish:.3,Cuttlefish:.3,Octopus:.3,Trilobit:.3},Cuttlefish:{Cuttlefish:10},Dreadnoughts:{Dreadnought:10},"Flying Saucers":{"Flying Saucer":10},Jellyfish:{Jellyfish:10},Motherships:{Mothership:10},Octopus:{Octopus:10},"Siamese Ships":{"Siamese Ships":10},Ships:{Ship:10,"Double Ship":10,Quartet:10,"Growing Wings":10,"Wide Ship":10,"Extra Wide Ship":10,"Flying Saucer":10,Mothership:10,"Triple Trouble":10,"Triple Trouble II":10,Dreadnought:10,"Siamese Ships":10},Trilobit:{Trilobit:10},"Triple Troubles":{"Triple Trouble":10,"Triple Trouble II":10}}},"Pace Parade":{...w,name:"Pace Parade",seedingConfig:W["Pace Parade"],seedingWeightsWeights:{Random:1,Mixed:1,Gliders:1,Jellyfish:1,Moles:1,Ships:1,Supernovae:1,Waves:1},seedingWeights:{Random:{},Mixed:{"Double Ship":.2,Explosion:.2,Glider:.2,Jellyfish:.2,"Micro Mole":.2,"Mini Mole":.2,Plodder:.2,Quartet:.2,"Ship I":.2,"Ship II":.2,"Slow Mole":.2,Supernova:.2},Gliders:{Glider:10},Jellyfish:{Jellyfish:10},Moles:{"Micro Mole":5,"Mini Mole":5,"Slow Mole":5,Plodder:5},Ships:{"Double Ship":8,"Ship I":8,"Ship II":8},Supernovae:{Supernova:5,Explosions:5},Waves:{Wave:5}}},"Repeating Replicants":{...w,name:"Repeating Replicants",seedingConfig:W["Repeating Replicants"],seedingWeightsWeights:{Random:1,Mixed:1,Pulsars:1,"Diamond Waves":1,"Square Waves":1},seedingWeights:{Random:{},Mixed:{Delta:1,"Diamond Wave":1,Pulsar:1,Ship:1,"Square Wave":1,"Twisted Cross":1},Pulsars:{Pulsar:10},"Diamond Waves":{"Diamond Wave":10},"Square Waves":{"Square Wave":10}}},"Rowdy Rowers I":{...w,name:"Rowdy Rowers I",seedingConfig:W["Rowdy Rowers I"],seedingWeightsWeights:{Mixed:1},seedingWeights:{Mixed:{"Rower I":3,"Rower II":3,"Runner I":3,"Runner II":3,Skipper:3}}},"Rowdy Rowers II":{...w,name:"Rowdy Rowers II",seedingConfig:W["Rowdy Rowers II"],seedingWeightsWeights:{Mixed:1,Rowers:1,"Rower Guns":2},seedingWeights:{Mixed:{"Rower Gun":3,"Rower I":3,"Rower II":3,Spinner:3,Star:3},Rowers:{"Rower I":8,"Rower II":8},"Rower Guns":{"Rower Gun":15}}},"Skewed Schooners":{...w,name:"Skewed Schooners",seedingConfig:W["Skewed Schooners"],seedingWeightsWeights:{Mixed:1,Ships:1,Wedges:1},seedingWeights:{Mixed:{"Skewed Schooner":3,"Double Wedge":3,"Doublet I":3,"Doublet II":3,"Doublet III":3,Triplet:3,Wedge:3},Ships:{"Skewed Schooner":5,"Doublet I":5,"Doublet II":5,"Doublet III":5},Wedges:{"Double Wedge":5,Wedge:5,Triplet:5}}},Snake:{...w,name:"Snake",seedingConfig:W.Snake,seedingWeightsWeights:{Mixed:1,Caterpillars:1,Ships:1,Snakes:1,Waves:1},seedingWeights:{Mixed:{Caterpillar:1,Octet:1,Oscillator:1,Puffer:.1,"Ship I":1,"Ship II":1,"Ship III":1,"Ship IV":1,"Ship V":1,Snake:1,"Square Wave":1,Stretcher:1,Trailer:1,"Triangular Wave":1,Wing:1},Caterpillars:{Caterpillar:10},Ships:{"Ship I":2,"Ship II":2,"Ship III":2,"Ship IV":2,"Ship V":2,Trailer:2,Wing:2},Snakes:{Snake:8,Octet:2},Waves:{"Square Wave":4,"Triangular Wave":4,Stretcher:4}}},"Spicy Spirals":{...w,name:"Spicy Spirals",seedingConfig:W["Spicy Spirals"],seedingWeightsWeights:{Random:1,Mixed:1,Beetles:1,Jellyfish:1,Ships:1,Spirals:.2,Squids:1,Tadpoles:1,Wave:1,Wings:1},seedingWeights:{Random:{},Mixed:{"Asymmetric cruiser":.2,Beetle:.2,"Crooked Ship":.2,"Diamond Wave":.2,"Guarded Shuttle":.2,Jellyfish:.2,Quartet:.2,"Shuttle I":.2,"Shuttle II":.2,Spiral:.05,"Squid I":.2,"Squid II":.2,"Squid III":.2,Tadpole:.2,"Wing I":.2,"Wing II":.2,"Wings Deployer":1},Beetles:{Beetle:10},Jellyfish:{Jellyfish:10},Ships:{"Asymmetric cruiser":2,"Crooked Ship":2,"Guarded Shuttle":2,"Shuttle I":2,"Shuttle II":2,Quartet:2},Spirals:{Spiral:.2},Squids:{"Squid I":5,"Squid II":5,"Squid III":5},Tadpoles:{Tadpole:10},Wave:{"Diamond Wave":5},Wings:{"Wing I":5,"Wing II":5,"Wings Deployer":5}}},"Spiky Spillers":{...w,name:"Spiky Spillers",seedingConfig:W["Spiky Spillers"],seedingWeightsWeights:{Random:1,Mixed:1,Angels:1,Automata:1,Ships:1,Stretchers:1,"Walkers and Jumpers":1,Waves:1},seedingWeights:{Random:{},Mixed:{"Diamond Wave":.3,Stretchers:.3,"Square Wave":.3,"Kite Wave":.3,"Spiky Wave":.3,Ship:.3,Walker:.3,Jumper:.3,Angel:.3,"Ship II":.3,"1d Automaton":.3,"1d Automaton II":.3,"Fancy Ship I":.3,"Fancy Ship II":.3,"Fancy Ship III":.3,"Fancy Ship IV":.3,"Fancy Ship V":.3,"Fancy Ship VI":.3},Angels:{Ship:2,"Ship II":2,Angel:15},Automata:{"1d Automaton":10,"1d Automaton II":10},Ships:{Ship:2,"Ship II":2,"Fancy Ship I":2,"Fancy Ship II":2,"Fancy Ship III":2,"Fancy Ship IV":2,"Fancy Ship V":2,"Fancy Ship VI":2},Stretchers:{Stretchers:10},"Walkers and Jumpers":{Walker:10,Jumper:10},Waves:{"Diamond Wave":2,Stretchers:2,"Square Wave":2,"Kite Wave":2,"Spiky Wave":2}}},"Star Wars":{...w,name:"Star Wars",seedingConfig:W["Star Wars"],seedingWeightsWeights:{Random:1,Mixed:1,Snakes:1,Stars:1},seedingWeights:{Random:{},Mixed:{"Gun 0":.2,"Gun 1":.2,"Gun 2":.2,"Gun 3":.2,"Gun 4":.2,"Gun 5":.2,"Gun 6":.2,"Gun 7":.2,"Gun 8":.2,"Gun 9":.2,"Gun 10":.2,"Gun 11":.2,"Gun 12":.2,"Gun 13":.2,"Gun 14":.2,"Gun 15":.2,Snake:3,Star:5},Snakes:{Snake:10},Stars:{Star:10}}},Swirl:{...w,name:"Swirl",seedingConfig:W.Swirl,seedingWeightsWeights:{Mixed:1,Gliders:1,Stars:1,Waves:1},seedingWeights:{Mixed:{"Exploding Star":3,"Flame Glider":3,Flamewhirl:3,Glider:3,Quartet:3,Star:3,Swirlpool:3,Wave:1},Gliders:{"Flame Glider":10,Glider:10,Flamewhirl:3,Star:5,Swirlpool:3},Stars:{"Exploding Star":10,Star:10,Flamewhirl:3,Swirlpool:3},Waves:{Wave:10,Flamewhirl:3,Swirlpool:3}}},"Tacky Tadpoles":{...w,name:"Tacky Tadpoles",seedingConfig:W["Tacky Tadpoles"],seedingWeightsWeights:{Random:1,Mixed:1,Beetles:1,Jellyfish:1,Octopuses:1,Ships:1,"Tadpole Guns":1,Tadpoles:1,Waves:1},seedingWeights:{Random:{},Mixed:{"Asymmetric cruiser":1,Beetle:1,Cruiser:1,"Diamond Wave":1,Jellyfish:1,Octopus:1,Quartet:1,Shuttle:1,Tadpole:1,"Tadpole Gun":1,"Wing I":1,"Wing II":1},Beetles:{Beetle:10},Jellyfish:{Jellyfish:10},Octopuses:{Octopus:10},Ships:{"Asymmetric cruiser":2,Cruiser:2,Shuttle:2,Quartet:2},"Tadpole Guns":{"Tadpole Gun":2},Tadpoles:{Tadpole:10},Waves:{"Diamond Wave":5}}},"Traipsing Trains":{...w,name:"Traipsing Trains",seedingConfig:W["Traipsing Trains"],seedingWeightsWeights:{Mixed:1,Cars:1,Quartets:1},seedingWeights:{Mixed:{"Car I":2,"Car II":2,"Car III":2,"Car IV":2,"Quartet I":2,"Quartet II":2},Cars:{"Car I":3,"Car II":3,"Car III":3,"Car IV":3},Quartets:{"Quartet I":3,"Quartet II":3}}},"Wacky Waves":{...w,name:"Wacky Waves",seedingConfig:W["Wacky Waves"],seedingWeightsWeights:{Random:1,Mixed:1,Ships:1,Waves:1},seedingWeights:{Random:{},Mixed:{"Diamond Wave":2,Gunship:2,Ship:2,"Ship II":2,"Ship III":2,"Ship IV":2,"Ship V":2,"Ship VI":2,"Square Wave":2,Stretcher:2},Ships:{Gunship:.5,Ship:3,"Ship II":3,"Ship III":3,"Ship IV":3,"Ship V":3,"Ship VI":3},Waves:{"Diamond Wave":5,"Square Wave":5}}},"Weird Wedges":{...w,name:"Weird Wedges",seedingConfig:W["Weird Wedges"],seedingWeightsWeights:{Random:1,Mixed:1,Walkers:1,Wedges:1,Wobblers:1},seedingWeights:{Random:{},Mixed:{"Walker I":2,"Walker II":2,"Walker III":2,"Walker IV":2,"Weird Wedge I":2,"Weird Wedge II":2,"Weird Wedge III":2,"Weird Wedge IV":2,"Wobbler I":2,"Wobbler II":2,"Wobbler III":2,"Wobbler IV":2,"Wobbler V":2,"Wobbler VI":2},Walkers:{"Walker I":4,"Walker II":4,"Walker III":4,"Walker IV":4},Wedges:{"Weird Wedge I":4,"Weird Wedge II":4,"Weird Wedge III":4,"Weird Wedge IV":4},Wobblers:{"Wobbler I":3,"Wobbler II":3,"Wobbler III":3,"Wobbler IV":3,"Wobbler V":3,"Wobbler VI":3}}},"Wiggly Wings":{...w,name:"Wiggly Wings",seedingConfig:W["Wiggly Wings"],seedingWeightsWeights:{Random:1,Mixed:1,Beetles:1,Jellyfish:1,Octopuses:1,Ships:1,Squids:1,Tadpoles:1,Waves:1,Wings:1},seedingWeights:{Random:{},Mixed:{"Asymmetric cruiser":1,"Beetle I":1,"Beetle II":1,"Crooked Ship":1,"Diamond Wave":1,"Double Shuttle":1,Jellyfish:1,Octopus:1,Quartet:1,"Shuttle I":1,"Shuttle II":1,"Squid I":1,"Squid II":1,"Squid III":1,Tadpole:1,"Wing I":1,"Wing II":1},Beetles:{"Beetle I":5,"Beetle II":5},Jellyfish:{Jellyfish:10},Octopuses:{Octopus:10},Ships:{"Asymmetric cruiser":2,"Crooked Ship":2,"Double Shuttle":2,"Shuttle I":2,"Shuttle II":2,Quartet:2},Squids:{"Squid I":5,"Squid II":5,"Squid III":5},Tadpoles:{Tadpole:10},Waves:{"Diamond Wave":5},Wings:{"Wing I":5,"Wing II":5}}},"Brian's brain outernet":{...w,hideInApp:!0,randomnessLogShift:-.5,seedingWeightsWeights:{Default:1},seedingWeights:{Default:{Butterfly:1,"Diamond Wave":.5,"Oscillator I":2,"Oscillator II":2,Star:4,Snake:4,"Square Wave":4}}},"Brian's brain outernet 2":{...w,hideInApp:!0,randomnessLogShift:-.5,seedingWeightsWeights:{"Square Waves":1},seedingWeights:{"Square Waves":{"Square Wave":.5}}},"Brian's brain outernet b":{...w,hideInApp:!0,seedingWeightsWeights:{"Square Waves":1},seedingWeights:{"Square Waves":{"Square Wave":.5}}},"Brian's brain outernet c":{...w,hideInApp:!0,randomnessLogShift:-.5,seedingWeightsWeights:{"Square Waves":1},seedingWeights:{"Square Waves":{"Square Wave":.5}}}},M={1:1,2:1,3:1,4:1,6:1,8:1,12:1,16:1,24:1,32:1,48:1,64:1,96:1},N={Test:{name:"Test",hideInApp:!0,rules:{"B35678|0:1.2.4/S236|Nbdfh0:1.2.3/I5/G10/R0":1},randomnessConfig:k.Generations},Custom:{name:"Custom",hideInApp:!0,rules:{}},"Mixed Safe":{name:"Mixed Safe",recommended:!0,ruleGroup:{"Bilious Billows":2,"Brian's Brain":1,"Brian's Brain (modified)":3,"Brian's Brain family":2,"Brian's Brain (regularised)":2,"Beating Beacons":1,"Burning Islands":2,"Crummy Cruisers":1,"Game of Life":1,"Cranky Crawlers":2,"Extravagant Extenders":2,"Fancy Fans":3,"Flaming Flaneries":1,"Fuming Fumblers":2,"Giant Galleons":2,"Growing Gliders":3,"Hefty Hulls":1,"Leggy Legends":2,"Pace Parade":3,"Puffy Pulse":2,"Repeating Replicants":1,"Ripping Ripples":2,"Rowdy Rowers I":1,"Rowdy Rowers II":1,"Skewed Schooners":1,Snake:1,"Spicy Spirals":1,"Spiffy Splitters":2,"Spiky Spillers":3,Spinners:1,"Spinners HS":1,"Star Wars":1,"Star Wars family":1,"Straight Straddlers":1,Swirl:2,"Wacky Waves":3,"Wiggly Wings":3}},Mixed:{name:"Mixed",recommended:!0,ruleGroup:{"Asteroid Fields":1,"Bilious Billows":2,"Bloomerang Family":1,"Brian's Brain":1,"Brian's Brain family":2,"Brian's Brain (modified)":3,"Brian's Brain (regularised)":2,"Brian's Brain S0 family":1,"Beating Beacons":1,"Burning Islands":2,Burst:1,"Caterpillars+":1,"Clunky Clusters":1,"Corny Corners":1,"Cranky Crawlers":2,"Crummy Cruisers":1,"Delta Delusion":1,"Diabolic Diagonals":1,"Dorky Torque":1,"Erratic Eruptions":1,"Extravagant Extenders":2,"Fancy Fans":3,"Flaming Flaneries":1,"Fuming Fumblers":2,"Game of Life":1,"Generations high state count":3,"Generations low state count":3,"Generations unregularised":3,"Generations ships":4,"Giant Galleons":2,"Gnarring Gnats":1,"Growing Gliders":2,"Hefty Hulls":1,"Languid Luggers":1,"Leggy Legends":2,"Life-like":1,Millipedes:2,"Oblique Oblivion":2,"Pace Parade":3,"Puffy Pulse":3,"Repeating Replicants":2,"Ripping Ripples":2,"Rowdy Rowers I":1,"Rowdy Rowers II":1,"Scowling Scorchers":1,"Short Extenders":1,"Shaky Ships":1,"Skewed Schooners":1,"Slow Growth":1,"Slanted Slams":1,"Smooth Smokers":1,Snake:1,"Spicy Spirals":1,"Spiffy Splitters":2,"Spiky Spillers":3,Spinners:1,"Spinners HS":1,"Star Wars":1,"Star Wars family":1,"Star Wars S0":1,"Straight Straddlers":1,"Sudden Surges":1,"Swirling Swizzlers":1,Swirl:2,"Tacky Tadpoles":3,"Traipsing Trains":1,"Turning Turmoil":1,"Wacky Waves":3,"Wally Walls":1,"Weird Wedges":2,"Wiggly Wings":3,"Wobbling Wanderers":1}},"Classy Classics":{name:"Classy Classics",recommended:!0,deterministic:!0,ruleGroup:{"Brian's Brain":3,"Game of Life":1,"Star Wars":1}},"Asteroid Fields":{name:"Asteroid Fields",deterministic:!1,rules:{"B2[5678]/S0[5678]/I[2345678]/G4":1,"B2[5678]/S02[45678]/I1[345678]/G{3|4|5|6|7|8}":1}},"Beating Beacons":{name:"Beating Beacons",deterministic:!1,rules:{"B2456[8]/S347[8]/I345[678]/G{4|5|6|7|8|9|10|11|12|13|14}":1},randomnessConfig:k["Beating Beacons"]},"Bilious Billows":{name:"Bilious Billows",deterministic:!1,rules:{"B3|N:1.2.3.4.8/S5[34678]|N:1/I[345678]|N:1/G{15}/R0":1},randomnessConfig:k["Bilious Billows"]},"Bloomerang Family":{name:"Bloomerang Family",deterministic:!1,rules:{"B34[5678]/S234[678]/I[12345678]/G{9|10|11|12|13|14|24}":1}},"Bouncy Boulders":{name:"Bouncy Boulders",hideInApp:!0,deterministic:!1,rules:{"B23[45678]|Ncg2:1/S3[5678]|Nae2:1.2.3/I[345678]/G{6|7|8|9|10}/R5":1},randomnessConfig:k["Fancy Fans"]},"Brian's Brain":{name:"Brian's Brain",deterministic:!0,rules:{"B2/S/I/G3":1},randomnessConfig:k["Brian's brain"]},"Brian's Brain family":{name:"Brian's Brain family",recommended:!0,deterministic:!1,rules:{"B2[45678]/S[45678]/I[345678]/G{3|4}":1},randomnessConfig:k["Brian's brain family"]},"Brian's Brain (modified)":{name:"Brian's Brain (modified)",deterministic:!0,rules:{"B2/S/I345678/G3":1},randomnessConfig:k["Brian's brain (modified)"]},"Brian's Brain (regularised)":{name:"Brian's Brain (regularised)",deterministic:!0,rules:{"B2/S/I/G3/R50":1},randomnessConfig:k["Brian's brain (regularised)"]},"Brian's Brain S0 family":{name:"Brian's Brain S0 family",deterministic:!1,rules:{"B2[45678]/S0[45678]/I[345678]/G{4|5}":1},randomnessConfig:k["Brian's brain family"]},"Burning Islands":{name:"Burning Islands",deterministic:!1,rules:{"B23[45678]/S24567[8]/I1/G4/R50":1}},Burst:{name:"Burst",deterministic:!1,rules:{"B34[568]/S0235[678]/I[345678]/G5":1,"B34[568]/S235[678]/I[345678]/G5":1,"B34[568]/S0235[678]/I[345678]/G3/R200":1,"B34[568]/S235[678]/I[345678]/G3/R200":1,"B34[568]/S0235[678]/I[345678]/G4/R50":1,"B34[568]/S235[678]/I[345678]/G4/R50":1}},"Caterpillars+":{name:"Caterpillars+",deterministic:!0,rules:{"B378/S124567/I1345678/G3":1}},"Corny Corners":{name:"Corny Corners",deterministic:!1,rules:{"B23[45678]|Nbcdef:1.2.3.5.6.7.8/S[345678]/I12[3456]|Ncg:1/G{20|30|40|50|60|70}/R0":1}},"Clunky Clusters":{name:"Clunky Clusters",deterministic:!1,rules:{"B2[5678]/S23|Nbdfh:1/I[23478]/G{4|5|6|7|8|9|10}/R{0|5}":1}},"Cranky Crawlers":{name:"Cranky Crawlers",deterministic:!1,rules:{"B2[678]/S1[678]|N[acdefgh]{1|2|3|4|5|6|7}:{1|2|3|4}/I1[2345678]/G{6|7|8|9|10|11|12|13|14|15}/R50":1},randomnessConfig:k["Cranky Crawlers"]},"Crummy Cruisers":{name:"Crummy Cruisers",deterministic:!1,rules:{"B245[678]/S346[78]/I123[45678]/G{4|5|6|7|8|9|10|11}":1},randomnessConfig:k["Crummy Cruisers"]},"Delta Delusion":{name:"Delta Delusion",deterministic:!1,rules:{"B23[678]/S1|N[acdefgh]{1|2|3|4|5|6|7}:{1|2}/I1[2345678]/G{5|6|7|8|9|10|11|12|13|14|15}/R100":1}},"Diabolic Diagonals":{name:"Diabolic Diagonals",deterministic:!1,rules:{"B1|Nbcdfgh2:2/S/I[12]|N[acdefgh]{1|2|3|4|5|6|7}:{1|2|3}/G4/R{5|10|20}":1}},"Dorky Torque":{name:"Dorky Torque",deterministic:!1,rules:{"B34[5678]|N0:1.2.3.4.8/S[345678]/I[2345678]/G{15|16|17|18|19|20}/R0":1}},"Erratic Eruptions":{name:"Erratic Eruptions",deterministic:!1,rules:{"B23[5678]/S34[678]/I1[2345678]|N[acdefgh]{1|2|3|4|5|6|7}:1/G{9|10|11|12|13|14}/R20":1}},"Extravagant Extenders":{name:"Extravagant Extenders",deterministic:!1,rules:{"B245[78]/S345[78]/I1[2345678]/G{5|6|7|8|9|10|11|12|13|14}/R20":1,"B246[78]/S345[78]/I1[2345678]/G{5|6|7|8|9|10|11|12|13|14}/R20":1},randomnessConfig:k["Extravagant Extenders"]},"Short Extenders":{name:"Short Extenders",deterministic:!1,rules:{"B24[78]/S345[78]/I12[345678]/G{5|6|7}/R100":1}},"Fancy Fans":{name:"Fancy Fans",recommended:!0,deterministic:!1,rules:{"B23[45678]|Ncg2:1/S3[5678]|Nae2:1.2.3.4.5/I[345678]/G{6|7|8|9|10}/R0":1,"B23[45678]|Ncg2:1/S3[5678]|Nae2:1.2.3.4/I[345678]/G{6|7|8|9|10}/R0":1,"B23[45678]|Ncg2:1/S3[5678]|Nae2:1.2.3/I[345678]/G{6|7|8|9|10}/R0":1},randomnessConfig:k["Fancy Fans"]},"Flaming Flaneries":{name:"Flaming Flaneries",deterministic:!0,rules:{"B24/S34/I15678/G4":1},randomnessConfig:k["Flaming Flaneries"]},"Fuming Fumblers":{name:"Fuming Fumblers",deterministic:!1,rules:{"B3[5678]|N0:1.2.4/S23|Nbdfh0:1.2.3/I[45678]|Nbcdfgh2:1/G{8|9|10|11|12|13|14|15}":1},randomnessConfig:k["Fuming Fumblers"]},"Game of Life":{name:"Game of Life",recommended:!0,deterministic:!0,rules:{"B3/S23/I/G2":1},randomnessConfig:k["Game of Life"]},Generations:{name:"Generations",recommended:!0,deterministic:!1,ruleGroup:{"Generations high state count":1,"Generations low state count":1,"Generations unregularised":1}},"Generations high state count":{name:"Generations high state count",deterministic:!1,rules:{"B1[2345678]/S[12345678]|N[abcdefgh]{0|1|2|3|4|5|6|7}:1/I[12345678]|N[abcdefgh]{0|1|2|3|4|5|6|7}:1/G{25|30|35|40|45|50|55|60|65|70|75|80|90|100}/R30":1,"B2[345678]/S[12345678]|N[abcdefgh]{0|1|2|3|4|5|6|7}:1/I[12345678]|N[abcdefgh]{0|1|2|3|4|5|6|7}:1/G{25|30|35|40|45|50|55|60|65|70|75|80|90|100}/R10":1,"B2[345678]/S[12345678]|N[abcdefgh]{0|1|2|3|4|5|6|7}:[1].[2].[3].[4].[5].[6].[7].[8].[9].[10]/I[12345678]|N[abcdefgh]{0|1|2|3|4|5|6|7}:[1].[2].[3].[4].[5].[6].[7].[8].[9].[10]/G{25|30|35|40|45|50|55|60|65|70|75|80|90|100}":1,"B1[2345678]|N[abcdefgh]{0|1|2|3|4|5|6|7}:[1].[2].[3].[4].[5].[6].[7].[8].[9].[10]/S[12345]|N[abcdefgh]{0|1|2|3|4|5|6|7}:[1].[2].[3].[4].[5].[6].[7].[8].[9].[10]/I[12345678]|N[abcdefgh]{0|1|2|3|4|5|6|7}:[1].[2].[3].[4].[5].[6].[7].[8].[9].[10]/G{25|30|35|40|45|50|55|60|65|70|75|80|90|100}":1},randomnessConfig:k.Generations},"Generations unregularised":{name:"Generations unregularised",deterministic:!1,rules:{"B2[345678]/S[12345678]|N[abcdefgh]{0|1|2|3|4|5|6|7}:1/I[12345678]|N[abcdefgh]{0|1|2|3|4|5|6|7}:1/G{25|30|35|40|45|50|55|60|65|70|75|80|90|100}":1,"B1[2345678]|N[abcdefgh]{0|1|2|3|4|5|6|7}:1/S[12345]|N[abcdefgh]{0|1|2|3|4|5|6|7}:1/I[12345678]|N[abcdefgh]{0|1|2|3|4|5|6|7}:1/G{25|30|35|40|45|50|55|60|65|70|75|80|90|100}":1},randomnessConfig:k.Generations},"Generations low state count":{name:"Generations low state count",deterministic:!1,rules:{"B1[2345678]|N[abcdefgh]{0|1|2|3|4|5|6|7}:[1].[2].[3].[4].[5].[6].[7].[8]/S[12345678]|N[abcdefgh]{0|1|2|3|4|5|6|7}:[1].[2].[3].[4].[5].[6].[7].[8]/I[12345678]|N[abcdefgh]{0|1|2|3|4|5|6|7}:[1].[2].[3].[4].[5].[6].[7].[8]/G{3|4|5|6|7|8|9|10|15|20|25}/R100":1,"B2[345678]/S[12345678]|N[abcdefgh]{0|1|2|3|4|5|6|7}:[1].[2].[3].[4].[5].[6].[7].[8]/I[12345678]|N[abcdefgh]{0|1|2|3|4|5|6|7}:[1].[2].[3].[4].[5].[6].[7].[8]/G{3|4|5|6|7|8|9|10|15|20|25}/R100":1},randomnessConfig:k.Generations},"Generations ships":{name:"Generations ships",deterministic:!1,rules:{"B2[345678]/S[345678]|N[abcdefgh]{0|1|2|3|4|5|6|7}:[1].[2].[3].[4].[5].[6].[7].[8]/I[12345678]|N[abcdefgh]{0|1|2|3|4|5|6|7}:[1].[2].[3].[4].[5].[6].[7].[8]/G{8|9|10|15|20|25}/R0":1},randomnessConfig:k.Generations},"Giant Galleons":{name:"Giant Galleons",deterministic:!1,rules:{"B234[5678]/S245[7]/I1[2345678]/G{10|11|12|13|14|15}":1,"B234[5678]/S245[6]/I1[2345678]/G{10|11|12|13|14|15}":1},randomnessConfig:k["Giant Galleons"]},"Gnarring Gnats":{name:"Gnarring Gnats",deterministic:!1,rules:{"B1[2]|Nbcdfgh2:1/S[12]|N[abcdefgh]{0|1|2|3|4|5|6|7}:{1|2|3}/I[12]|N[abcdefgh]{0|1|2|3|4|5|6|7}:{1|2|3}/G{3|4|5|6|7|8}/R{100|200}":1,"B1[2]|Nbcdfgh2:1.2/S[12]|N[abcdefgh]{0|1|2|3|4|5|6|7}:{1|2|3}/I[12]|N[abcdefgh]{0|1|2|3|4|5|6|7}:{1|2|3}/G{3|4|5|6|7|8}/R{100|200}":1}},"Growing Gliders":{name:"Growing Gliders",deterministic:!1,rules:{"B23[678]/S1[45678]|Nbdfh0:2/I12[345678]/G{5|6|7|8|9|10|11|12|13|14}/R0":1},randomnessConfig:k["Growing Gliders"]},"Hefty Hulls":{name:"Hefty Hulls",deterministic:!1,rules:{"B2[5678]/S23|Nbdfh0:1.3.5.6/I23[45678]/G{8|9|10|11|12|13|14}/R0":1},randomnessConfig:k["Hefty Hulls"]},"Languid Luggers":{name:"Languid Luggers",deterministic:!1,rules:{"B2[345678]|N0:4.6.11/S[2345678]|Nbdfh0:1.2.3.4.5/I[12345678]/G{25|30|35|40|45|50}/R0":1}},"Leggy Legends":{name:"Leggy Legends",deterministic:!1,rules:{"B23[5678]/S14[5678]/I1[2345678]/G{5|6|7|8|9|10}":1},randomnessConfig:k["Leggy Legends"]},"Life-like":{name:"Life-like",deterministic:!1,rules:{"B34[5678]/S235[678]/I[45678]/G5":1}},Millipedes:{name:"Millipedes",deterministic:!1,rules:{"B2[45678]/S13[45678]|N[abcdefgh]{0|1|2|3|4|5|6|7}:{1|2}/I1[2345678]/G{25|30|35|40|45|50}/R{10|30|100}":3},randomnessConfig:k.Generations},"Oblique Oblivion":{name:"Oblique Oblivion",deterministic:!1,rules:{"B12|Nbcdfgh2:1/S[12]|N[abcdefgh]{0|1|2|3|4|5|6|7}:1/I[12]|N[abcdefgh]{0|1|2|3|4|5|6|7}:1/G{5|6|7|8|9|10|11|12|13|14|15}/R{0|5}":1}},"Pace Parade":{name:"Pace Parade",recommended:!0,deterministic:!1,rules:{"B35[678]|N0:1.2.3.5.8/S[5678]|N0:1/I[2345678]|0:1/G{14|15|16|17|18|19|20}/R0":1},randomnessConfig:k["Pace Parade"]},"Puffy Pulse":{name:"Puffy Pulse",recommended:!0,deterministic:!1,rules:{"B12[5678]/S12[5678]/I[12345678]/G{6|7|8|9|10}/R{20|30|50|75|100}":1,"B13[5678]/S12[5678]/I[12345678]/G{6|7|8|9|10}/R{20|30|50|75|100}":1,"B14[5678]/S12[5678]/I[12345678]/G{6|7|8|9|10}/R{20|30|50|75|100}":1,"B1[5678]/S12[5678]/I[12345678]/G{6|7|8|9|10}/R{20|30|50|75|100}":1,"B12[5678]/S13[5678]/I[12345678]/G{6|7|8|9|10}/R{20|30|50|75|100}":1,"B13[5678]/S13[5678]/I[12345678]/G{6|7|8|9|10}/R{20|30|50|75|100}":1,"B14[5678]/S13[5678]/I[12345678]/G{6|7|8|9|10}/R{20|30|50|75|100}":1,"B1[5678]/S13[5678]/I[12345678]/G{6|7|8|9|10}/R{20|30|50|75|100}":1,"B12[5678]/S14[5678]/I[12345678]/G{6|7|8|9|10}/R{20|30|50|75|100}":1,"B13[5678]/S14[5678]/I[12345678]/G{6|7|8|9|10}/R{20|30|50|75|100}":1,"B14[5678]/S14[5678]/I[12345678]/G{6|7|8|9|10}/R{20|30|50|75|100}":1,"B1[5678]/S14[5678]/I[12345678]/G{6|7|8|9|10}/R{20|30|50|75|100}":1,"B12[5678]/S23[5678]/I[12345678]/G{6|7|8|9|10}/R{20|30|50|75|100}":1,"B13[5678]/S23[5678]/I[12345678]/G{6|7|8|9|10}/R{20|30|50|75|100}":1,"B14[5678]/S23[5678]/I[12345678]/G{6|7|8|9|10}/R{20|30|50|75|100}":1,"B1[5678]/S23[5678]/I[12345678]/G{6|7|8|9|10}/R{20|30|50|75|100}":1,"B12[5678]/S24[5678]/I[12345678]/G{6|7|8|9|10}/R{20|30|50|75|100}":1,"B13[5678]/S24[5678]/I[12345678]/G{6|7|8|9|10}/R{20|30|50|75|100}":1,"B14[5678]/S24[5678]/I[12345678]/G{6|7|8|9|10}/R{20|30|50|75|100}":1,"B1[5678]/S24[5678]/I[12345678]/G{6|7|8|9|10}/R{20|30|50|75|100}":1,"B12[5678]/S34[5678]/I[12345678]/G{6|7|8|9|10}/R{20|30|50|75|100}":1,"B13[5678]/S34[5678]/I[12345678]/G{6|7|8|9|10}/R{20|30|50|75|100}":1,"B14[5678]/S34[5678]/I[12345678]/G{6|7|8|9|10}/R{20|30|50|75|100}":1,"B1[5678]/S34[5678]/I[12345678]/G{6|7|8|9|10}/R{20|30|50|75|100}":1,"B12[5678]/S1[5678]/I[12345678]/G{6|7|8|9|10}/R{20|30|50|75|100}":1,"B13[5678]/S1[5678]/I[12345678]/G{6|7|8|9|10}/R{20|30|50|75|100}":1,"B14[5678]/S1[5678]/I[12345678]/G{6|7|8|9|10}/R{20|30|50|75|100}":1,"B1[5678]/S1[5678]/I[12345678]/G{6|7|8|9|10}/R{20|30|50|75|100}":1,"B12[5678]/S2[5678]/I[12345678]/G{6|7|8|9|10}/R{20|30|50|75|100}":1,"B13[5678]/S2[5678]/I[12345678]/G{6|7|8|9|10}/R{20|30|50|75|100}":1,"B14[5678]/S2[5678]/I[12345678]/G{6|7|8|9|10}/R{20|30|50|75|100}":1,"B1[5678]/S2[5678]/I[12345678]/G{6|7|8|9|10}/R{20|30|50|75|100}":1,"B12[5678]/S3[5678]/I[12345678]/G{6|7|8|9|10}/R{20|30|50|75|100}":1,"B13[5678]/S3[5678]/I[12345678]/G{6|7|8|9|10}/R{20|30|50|75|100}":1,"B14[5678]/S3[5678]/I[12345678]/G{6|7|8|9|10}/R{20|30|50|75|100}":1,"B1[5678]/S3[5678]/I[12345678]/G{6|7|8|9|10}/R{20|30|50|75|100}":1,"B12[5678]/S4[5678]/I[12345678]/G{6|7|8|9|10}/R{20|30|50|75|100}":1,"B13[5678]/S4[5678]/I[12345678]/G{6|7|8|9|10}/R{20|30|50|75|100}":1,"B14[5678]/S4[5678]/I[12345678]/G{6|7|8|9|10}/R{20|30|50|75|100}":1,"B1[5678]/S4[5678]/I[12345678]/G{6|7|8|9|10}/R{20|30|50|75|100}":1}},"Repeating Replicants":{name:"Repeating Replicants",recommended:!0,deterministic:!1,rules:{"B24[5678]/S24|Nbdfh0:1.4.6/I[2345678]/G{5|6|7|8|9|10}/R{0|5}":1},randomnessConfig:k["Repeating Replicants"]},"Ripping Ripples":{name:"Ripping Ripples",deterministic:!1,rules:{"B26[5678]/S24|Nbdfh0:1.3.5.6/I[23478]/G{6|7|8|9|10|11|12|13|14}/R{0|5}":1}},"Rowdy Rowers I":{name:"Rowdy Rowers I",deterministic:!1,rules:{"B34678|N0:1/S345|N0:1.3/I[345678]|N0:1/G{6|7|8|9|10|11|12|13|14|15|20|30|40|50}/R0":1},randomnessConfig:k["Rowdy Rowers I"]},"Rowdy Rowers II":{name:"Rowdy Rowers II",deterministic:!1,rules:{"B34678|N0:1/S3457|N0:1.3/I[345678]|N0:1/G{10|11|12}/R0":1},randomnessConfig:k["Rowdy Rowers II"]},"Scowling Scorchers":{name:"Scowling Scorchers",deterministic:!1,rules:{"B2[678]|N0:4.6.7/S[235678]|N0:1.2.3/I[12345678]|N0:1/G{20|21|22|23|24|25|26|27|28|29|30}":1}},"Shaky Ships":{name:"Shaky Ships",deterministic:!1,rules:{"B12|Nbcdfgh2:1/S/I1|{0|2|11}:2/G{5|6|7|8|9|10|11|12|13|14|15}/R{0|5}":1}},"Skewed Schooners":{name:"Skewed Schooners",deterministic:!1,rules:{"B2[456]|Ncg2:1.3/S35[6]|Nae2:1.2.3/I[45678]|0:1/G{7|8|9|10|11|12|13|14|15}":1},randomnessConfig:k["Skewed Schooners"]},"Slanted Slams":{name:"Slanted Slams",deterministic:!1,rules:{"B1|Nbcdfgh2:2.4/S[345678]/I[123]|Nabdefh2:2.3.4.5.6/G{9|10|11|12|13|14}/R0":1}},"Slow Growth":{name:"Slow Growth",deterministic:!1,rules:{"B34[5678]/S234[678]/I2[45678]/G{10|11|12|13|14|15|16|17|18|19|20}":1}},"Smooth Smokers":{name:"Smooth Smokers",deterministic:!1,rules:{"B2[45678]|N0:1.4/S2[3]|Nbcdef2:3.4.6.8/I1[345]|Nagh2:1.2.3.4.5.6.7.8/G{9|10|11|12|13|14|15}/R0":1}},Snake:{name:"Snake",deterministic:!1,rules:{"B25[78]/S03467[8]/I[345678]/G{12|13|14|15}/R0":1},randomnessConfig:k.Snake},"Spicy Spirals":{name:"Spicy Spirals",recommended:!0,deterministic:!1,rules:{"B2456/S34678/I3[245678]/G8/R0":1},randomnessConfig:k["Spicy Spirals"]},"Spiffy Splitters":{name:"Spiffy Splitters",deterministic:!1,rules:{"B2[45678]/S3[456]|Nbdfh0:1.2.3/I[45678]/G{5|6|7|8|9|10|11|12|13|14}/R0":1,"B2[5678]/S2[4]|Nbdfh0:1.4.6/I2[345678]/G{6|7|8|9|10|11|12|13|14|15}/R0":1}},"Spiky Spillers":{name:"Spiky Spillers",recommended:!0,deterministic:!1,rules:{"B23[45678]/S3[5678]/I[45678]|N[abcdefgh]{0|1|2|3|4|5|6|7}:1/G{5|6|7|8|9|10|11|12}":8},randomnessConfig:k["Spiky Spillers"]},Spinners:{name:"Spinners",deterministic:!1,rules:{"B2[45678]/S2[345678]|N[abcdefgh]{0|1|2|3|4|5|6|7}:2/I[2345678]/G{4|5|6|7|8|9|10|11|12|13|14}/R200":1}},"Spinners HS":{name:"Spinners HS",deterministic:!1,rules:{"B2[45678]/S2[345678]|N[abcdefgh]{0|1|2|3|4|5|6|7}:2/I[2345678]/G{25|30|35|40|45|50|55|60|65|70|75}/R200":1}},"Star Wars":{name:"Star Wars",deterministic:!0,rules:{"B2/S345/I/G4":1},randomnessConfig:k["Star Wars"]},"Star Wars family":{name:"Star Wars family",recommended:!0,deterministic:!1,rules:{"B2[5678]/S345[78]/I[12345678]/G{3|4}":6,"B2[5678]/S345[678]/I[12345678]/G{5|6|7|8|9|10}":1,"B2[5678]/S345[78]/I[12345678]/G{3|4}/R{10|20}":12,"B2[5678]/S345[678]/I[12345678]/G{5|6|7|8|9|10}/R{10|20}":2},randomnessConfig:k["Star Wars"]},"Star Wars S0":{name:"Star Wars S0",deterministic:!1,rules:{"B2[5678]/S0345[678]/I[12345678]/G{7|8}":8},randomnessConfig:k["Star Wars"]},"Straight Straddlers":{name:"Straight Straddlers",deterministic:!1,rules:{"B2[5678]/S2[45678]/I1[345678]/G{3|4|5|6|7|8}/R0":1}},"Sudden Surges":{name:"Sudden Surges",deterministic:!1,rules:{"B23[5678]/S34[678]/I1[2345678]|N[abcdefgh]{0|1|2|3|4|5|6|7}:1/G{9|10|11|12|13|14}/R20":1}},Swirl:{name:"Swirl",recommended:!0,deterministic:!1,rules:{"B34[678]/S23[678]/I[45678]/G{8|9|11|12|13|14|15}":1},randomnessConfig:k.Swirl},"Swirling Swizzlers":{name:"Swirling Swizzlers",deterministic:!1,rules:{"B3[5678]|N0:1.2.3.4.7/S[5678]/I[2345678]/G{14|15|16|17|18|19|20}/S{50|100}":1}},"Tacky Tadpoles":{name:"Tacky Tadpoles",recommended:!0,deterministic:!1,rules:{"B24[678]/S346[8]/I3[45678]/G{5|6|7|8|9|10|11}":1},randomnessConfig:k["Tacky Tadpoles"]},"Traipsing Trains":{name:"Traipsing Trains",deterministic:!1,rules:{"B14|Naceg0:1/S[34]|Naceg0:1/I1[345678]/G{12|13|14|15|16|17|18|19|20}":1},randomnessConfig:k["Traipsing Trains"]},"Trivial Rule":{name:"Trivial Rule",deterministic:!0,rules:{"B/S/I/G1":1}},"Turning Turmoil":{name:"Turning Turmoil",deterministic:!1,rules:{"B3|N0:1.2.3.4.7/S[5678]/I[2345678]/G{14|15|16|17|18|19|20}/R0":1}},"Wacky Waves":{name:"Wacky Waves",deterministic:!1,rules:{"B2[5678]/S34|Nbdfh0:1.3.5.6/I4[278]/G{8|9|10}/R{0|5}":1},randomnessConfig:k["Wacky Waves"]},"Wally Walls":{name:"Wally Walls",deterministic:!1,rules:{"B2[5678]/S34567/I1[345678]/G{5|6|7|8|9|10|11|12|13|14}":5}},"Weird Wedges":{name:"Weird Wedges",deterministic:!1,rules:{"B2[456]|Ncg2:1.3.5/S23[56]|Nae2:1/I[45678]/G{10|11|12|13|14|15}":1},randomnessConfig:k["Weird Wedges"]},"Wiggly Wings":{name:"Wiggly Wings",recommended:!0,rules:{"B24[5678]/S3467[8]/I3[45678]/G{4|5|6|7|8|9|10|11}":1,"B245[678]/S346[78]/I3[45678]/G{4|5|6|7|8|9|10|11}":1},randomnessConfig:k["Wiggly Wings"]},"Wobbling Wanderers":{name:"Wobbling Wanderers",deterministic:!1,rules:{"B2[45678]|Nbcdef2:1.3.4/S3[45678]|Ncg2:1.4/I[2345678]/G{6|7|8|9|10|11|12|13|14|15}/R0":1}},"BB (outernet)":{name:"BB (outernet)",hideInApp:!0,deterministic:!0,rules:{"B2/S/I345678/G3":1},randomnessConfig:k["Brian's brain outernet 2"]},"BB (outernetb)":{name:"BB (outernetb)",hideInApp:!0,deterministic:!0,rules:{"B2/S/I345678/G3":1},randomnessConfig:k["Brian's brain outernet b"]},"BB (outernetc)":{name:"BB (outernetc)",hideInApp:!0,deterministic:!0,rules:{"B2/S/I345678/G3":1},randomnessConfig:k["Brian's brain outernet c"]},"Safe mixed generations":{name:"Safe mixed generations",hideInApp:!0,rules:{"N0/B2/S/I345678/G3":20,"N0/B2/S/I/G3":4,"N0/B2/S345/I/G4":5,"N0/B2/S245678/I1/G4":5,"N0/B24/S34/I15678/G4":5,"N0/B3/S23/I/G2":8,"N0/B2[45678]/S[45678]/I[345678]/G{3|4}":12,"N0/B2[5678]/S345[78]/I[12345678]/G{3|4}":6,"N0/B27/S345/I12357/G5":4,"N0/B2[5678]/S2[45678]/I1[345678]/G{3|4|5|6|7|8}":12,"N0/B24[678]/S34[678]/I[12345678]/G{3|4|5|6|7|8|9|10|11|12|13|14}":15,"N0/B34[5678]/S235[678]/I[45678]/G5":15,"N0/B24568/S34678/I34678/G7":5,"N0/B24568/S34678/I3[45678]/G{4|5|6|7|8|9|10|11}":15,"N0/B245[678]/S34[678]/I[12345678]/G{5|6|7|8}":15}},"Mixed generations":{name:"Mixed generations",hideInApp:!0,rules:{"N0/B2/S/I345678/G3":20,"N0/B2/S/I/G3":4,"N0/B2/S345/I/G4":5,"N0/B2/S245678/I1/G4":5,"N0/B24/S34/I15678/G4":5,"N0/B3/S23/I/G2":8,"N0/B2[45678]/S[45678]/I[345678]/G{3|4}":12,"N0/B2[5678]/S345[678]/I[12345678]/G{5|6|7|8|9|10}":9,"N0/B2[5678]/S345[78]/I[12345678]/G{3|4}":6,"N0/B2[5678]/S2[45678]/I1[345678]/G{3|4|5|6|7|8}":12,"N0/B24[678]/S34[678]/I[12345678]/G{3|4|5|6|7|8|9|10|11|12|13|14}":15,"N0/B34[5678]/S235[678]/I[45678]/G5":15,"N0/B23[5678]/S14[5678]/I1[2345678]/G{5|6|7|8|9|10}":10,"N0/B34[5678]/S234[678]/I2[45678]/G{10|11|12|13|14|15|16|17|18|19|20}":12,"N0/B34[5678]/S234[678]/I[12345678]/G{9|10|11|12|13|14|24}":12,"N0/B24[5678]/S345[678]/I[12345678]/G{11|12|13|14}":8,"N0/B34[568]/S0235[678]/I[345678]/G5":8,"N0/B34[568]/S235[678]/I[345678]/G5":8,"N0/B378/S124567/I1345678/G3":5,"N0/B2[5678]/S0[5678]/I[2345678]/G4":8,"N0/B2[5678]/S02[45678]/I1[345678]/G5":8,"N0/B2[45678]/S0[45678]/I[345678]/G{4|5}":8,"N0/B2[5678]/S0345[678]/I[12345678]/G{7|8}":8,"N0/B27/S345/I12357/G5":2,"N0/B245[678]/S34[678]/I[12345678]/G{5|6|7|8}":15,"N{0|1|2|3|4|5|6|7|8|9|10|11|12|13|14}:{0|1}|0:{0|1}|0:0/B2[45678]/S2[45678]/I1[345678]/G{9|10|11|12|13|14}":6,"N0/B23/S34[678]/I1[2345678]/G{6|7|8|9|10|11|12|13}":3,"N0/B234[5678]/S2[45678]/I1[5678]/G{6|7|8|9|10|11|12|13|14}":12,"N0/B234[5678]/S3[45678]/I1[5678]/G{6|7|8|9|10|11|12|13|14}":8,"N0/B234[5678]/S[45678]/I1[5678]/G{6|7|8|9|10|11|12|13|14}":8,"N0/B234578/S37/I/G11":1,"N0/B23[45678]/S3[5678]/I[45678]/G{5|6|7|8|9|10|11|12}":8,"N0/B2368/S358/I/G5":1,"N0/B24[5678]/S3[45678]/I[5678]/G{5|6|7|8|9|10|11|12|13|14}":5,"N0/B24568/S3478/I34578/G{5|6|7}":3,"N0/B24568/S34578/I34578/G{9|12|14|14}":4,"N0/B24568/S34678/I34678/G7":5,"N0/B24568/S34678/I3[45678]/G{4|5|6|7|8|9|10|11}":15,"N0/B245[678]/S346[78]/I123[45678]/G{4|5|6|7|8|9|10|11}":8,"N0/B25[678]/S3[45678]/I[5678]/G{5|6|7|8|9|10|11|12|13|14}":12,"N0/B25/S345/I/G4":1,"N0/B25/S345/I/G5":1,"N0:0/B2[5678]/S34567/I1[345678]/G{5|6|7|8|9|10|11|12|13|14}":5,"N0/B2[5678]/S34[5678]/I[5678]/G{5|6}":15,"N0/B25678/S2478/I345678/G12":1,"N0/B2568/S345678/I345678/G8":1,"N0/B2568/S345678/I345678/G10":1,"N0/B2568/S345678/I345678/G12":1,"N0/B2568/S34578/I34578/G4":1,"N0/B2568/S34578/I34578/G5":1,"N0/B2568/S34578/I34578/G6":1,"N0/B2568/S34578/I34578/G7":1,"N0/B2568/S34578/I34578/G8":1,"N{0|1|2|3|4|5|6|7|8|9|10|11|12|13|14}:{0|1}|0:0|0:0/B2[45678]/S1[345678]/I1[2345678]/G{5|6|7|8|9|10|11|12|13|14|15}":15,"N{0|1|2|3|4|5|6|7|8|9|10|11|12|13|14}:{0|1}|0:0|0:0/B23[45678]/S1[345678]/I1[2345678]/G{5|6|7|8|9|10|11|12|13|14|15}":6,"N1/B2[45678]/S3[45678]/I[12345678]/G{5|6|7|8|9|10|11|12|13|14}":3,"N1/B23[45678]/S1[2345678]/I[12345678]/G{5|6|7|8|9|10|11|12|13|14}":3,"N5|1|18/B2[345678]/S1[345678]/I[345678]/G{7|7|7|8|8|8|11|12|13|14|15}":8,"N11:1|0:0|0:0/B245/S1/I12357/G6":3,"N0/B2[345678]/S[2345678]/I[12345678]/G{3|4|5|6|7|8|9|10|11|12|13|14}/R":20,"N0/B[12345678]/S[012345678]/I[12345678]/G{3|4|5|6|7|8|9|10|11|12|13|14}/R":10,"N0/B{12|13|14|1}[5678]/S{12|13|14|23|24|34|1|2|3|4}[5678]/I[12345678]/G{6|7|8|9|10}/R{50|75|100}":20,"N0/B1[2345678]/S[12345678]/I[12345678]/G{25|50|75|100}":12,"N0/B1/S[5678]/I[2345678]/G{25|50|75|100}":12,"N{0|1|2|3|4|5|6|7|8|9|10|11|12|13|14}:0|{0|1|2|3|4|5|6|7|8|9|10|11|12|13|14}:0|{0|1|2|3|4|5|6|7|8|9|10|11|12|13|14}:0/B1[2345678]/S[12345678]/I[12345678]/G{25|50|75|100}":20,"N45|0|33/B2/S/I34/G7":1,"N58|0|16/B24568/S/I1/G{5|6|7|8}":3,"N66|0|67/B2/S23/I23/G6":3,"N66|0|0/B2/S1/I1/G6":2,"N67|0|0/B2/S1/I1/G6":2}}},A=(Object.keys(N).filter((e=>N[e].recommended)),Object.keys(N).filter((e=>!N[e].hasOwnProperty("hideInApp")||!N[e].hideInApp)),{});for(const e in N){if(A[e]={},!N[e].hasOwnProperty("randomnessConfig")||null==N[e].randomnessConfig)continue;const t=N[e].randomnessConfig.seedingConfig;for(const i in t)A[e][i]={name:i,background:"Vaccuum",seed:t[i]}}class P{colorUnit;ruleChain;updateRule;nStatesRule;nStatesStyle;nStatesAll;setRuleChain(){throw new Error("Must override method")}setUpdateRule(){this.nStatesAll=this.nStatesRule*this.nStatesStyle,null==this.ruleChain[1]?this.updateRule=function(e,t,i,n,r,a){return(t=this.ruleChain[0].updateRule(e%this.nStatesRule,t,i,n,r))%this.nStatesRule}:this.updateRule=function(e,t,i,n,r,a){return t=this.ruleChain[0].updateRule(e%this.nStatesRule,t,i,n,r),(t+=0==a?this.nStatesRule*this.ruleChain[1].updateRule(Math.floor(e/this.nStatesRule)%this.nStatesStyle,t,i,n):this.nStatesRule*this.ruleChain[2].updateRule(Math.floor(e/this.nStatesRule)%this.nStatesStyle,t,i,n))%this.nStatesAll}}setBaseRule(){throw new Error("Must override method")}setStyleRule(){throw new Error("Must override method")}setTimeShifts(e){this.ruleChain.forEach((t=>t?.setTimeShifts(e)))}getName(){return this.ruleChain.map((e=>e?.getName())).join("-")}}class x extends P{constructor(e){super(),this.ruleConfig=e.config.ruleConfig,this.styleConfig=e.config.styleConfig,console.log("First style: ",this.styleConfig.name),this.styleConfig2=e.config.styleConfig2,console.log("Second style: ",this.styleConfig.name),this.randomnessConfig=e.config.randomnessConfig,this.currentGenerationsRule=null,this.setRuleChain(e),this.setUpdateRule()}setRuleChain(e){this.ruleChain=[null,null,null],this.setBaseRule(e),this.setStyleRule(e),this.setStyleRule(e,!0)}sanitiseRule(e){return e.includes("R")||(e+="/R0"),["Random","andom"].includes(e)&&(e=null),e}setBaseRule(e){if(this.ruleConfig=e.config.ruleConfig,"ruleGroup"in this.ruleConfig){var t=l(this.ruleConfig.ruleGroup)();this.ruleConfig.sampledRuleFamily=t,this.ruleConfig.rules=e.ruleConfigs[t].rules,this.ruleConfig.randomnessConfig=e.ruleConfigs[t].randomnessConfig,u(e,"Rul | Sampled the rule "+t+" from the rule group "+this.ruleConfig.name+".")}else this.ruleConfig=e.config.ruleConfig;let i=l(this.ruleConfig.rules)();var n=C;this.sanitiseRule(i),this.ruleConfig.sampledRuleTemplate=i,null==this.ruleConfig.activityLevelForRuleWindowSize&&(this.ruleConfig.activityLevelForRuleWindowSize=parseInt(l(M)(),10)),this.ruleChain[0]=new n(e,i),"No style"==this.styleConfig.name?this.colorUnit=1:this.colorUnit=this.ruleChain[0].nStates,this.nStatesRule=this.ruleChain[0].nStates}setStyleRule(e,t=!1){let i,n;if(t?(this.styleConfig2=e.config.styleConfig2,i=this.styleConfig2,null==i&&(i=this.styleConfig),n=2):(this.styleConfig=e.config.styleConfig,i=this.styleConfig,n=1),0===Object.keys(i).length||"No style"==i.name)return this.ruleChain[n]=null,this.colorUnit=1,this.nStatesAll=this.nStatesRule,void(this.nStatesStyle=1);if(i.style)return this.ruleChain[n]=G.ruleFromNames(this.styleConfig.style,this.nStatesRule),this.colorUnit=this.nStatesRule,void(1==n&&(this.nStatesStyle=this.ruleChain[1].nStates));var r=i.conditionLevels,a=l(r.reduce(((e,t,i)=>(e[i]=t.weight,e)),{}))();i.chosenConditionLevels=r[a].probabilities,this.ruleChain[n]=G.sampleRule(e,i,this.nStatesRule,!t),this.colorUnit=this.nStatesRule,1==n&&(this.nStatesStyle=this.ruleChain[1].nStates)}updateGlobalDataWithConfig(e){}}const T={"GR blue":{name:"GR blue",hideInApp:!0,r:13,g:112,b:255},"GR grey":{name:"GR grey",hideInApp:!0,r:240,g:239,b:239},Black:{name:"Black",referenceColorOk:!0,r:0,g:0,b:0},"GR yellow":{name:"GR yellow",hideInApp:!0,r:247,g:255,b:28},White:{name:"White",referenceColorOk:!0,r:255,g:255,b:255},Grey:{name:"Grey",referenceColorOk:!0,r:127,g:127,b:127},Whitish:{name:"Whitish",hideInApp:!0,r:240,g:240,b:240},redBlue1:{name:"redBlue1",hideInApp:!0,r:221,g:12,b:12},redBlue2:{name:"redBlue2",hideInApp:!0,r:29,g:29,b:189},turquoiseRed1:{name:"turquoiseRed1",hideInApp:!0,r:39,g:192,b:177},turquoiseRed2:{name:"turquoiseRed2",hideInApp:!0,r:252,g:53,b:47},magentaCyan1:{name:"magentaCyan1",hideInApp:!0,r:156,g:36,b:150},magentaCyan2:{name:"magentaCyan2",hideInApp:!0,r:114,g:223,b:174},transparent:{name:"transparent",hideInApp:!0,r:0,g:0,b:0,t:0},Red:{name:"Red",referenceColorOk:!0,r:255,g:0,b:0},Orange:{name:"Orange",referenceColorOk:!0,r:255,g:127,b:0},Yellow:{name:"Yellow",referenceColorOk:!0,r:255,g:255,b:0},Chartreuse:{name:"Chartreuse",referenceColorOk:!0,r:127,g:255,b:0},Green:{name:"Green",referenceColorOk:!0,r:0,g:255,b:0},"Spring green":{name:"Spring green",referenceColorOk:!0,r:0,g:255,b:127},Cyan:{name:"Cyan",referenceColorOk:!0,r:0,g:255,b:255},Azure:{name:"Azure",referenceColorOk:!0,r:0,g:127,b:255},Blue:{name:"Blue",referenceColorOk:!0,r:0,g:0,b:255},Violet:{name:"Violet",referenceColorOk:!0,r:127,g:0,b:255},Majenta:{name:"Majenta",referenceColorOk:!0,r:255,g:0,b:255},Rose:{name:"Rose",referenceColorOk:!0,r:255,g:0,b:127},"Dark Sepia":{name:"Dark Sepia",referenceColorOk:!0,r:26,g:24,b:21},"Dark Yellow":{name:"Dark Yellow",referenceColorOk:!0,r:220,g:190,b:0},Kaki:{name:"Kaki",referenceColorOk:!0,r:85,g:85,b:0},"CGA dark grey":{name:"CGA dark grey",referenceColorOk:!0,r:85,g:85,b:85},"CGA blue":{name:"CGA blue",referenceColorOk:!0,r:0,g:0,b:170},"CGA light blue":{name:"CGA light blue",referenceColorOk:!0,r:85,g:85,b:255},"CGA green":{name:"CGA green",referenceColorOk:!0,r:0,g:170,b:0},"CGA light green":{name:"CGA light green",referenceColorOk:!0,r:85,g:255,b:85},"CGA cyan":{name:"CGA cyan",referenceColorOk:!0,r:0,g:170,b:170},"CGA light cyan":{name:"CGA light cyan",referenceColorOk:!0,r:85,g:255,b:255},"CGA red":{name:"CGA red",referenceColorOk:!0,r:170,g:0,b:0},"CGA light red":{name:"CGA light red",referenceColorOk:!0,r:255,g:85,b:85},"CGA magenta":{name:"CGA magenta",referenceColorOk:!0,r:170,g:0,b:170},"CGA light magenta":{name:"CGA light magenta",referenceColorOk:!0,r:255,g:85,b:255},"CGA brown":{name:"CGA brown",referenceColorOk:!0,r:170,g:85,b:0},"CGA yellow":{name:"CGA yellow",referenceColorOk:!0,r:255,g:255,b:85},"CGA grey":{name:"CGA grey",referenceColorOk:!0,r:170,g:170,b:170},refFullSatMidInt:{name:"refFullSatMidInt",hideInApp:!0,r:255,g:127,b:0},refNoSatMidInt:{name:"refFullSatMidInt",hideInApp:!0,r:127,g:127,b:127},"Light saturated":{name:"Light saturated",hideInApp:!0,r:255,g:250,b:250},"Basic color":{name:"Basic color",recommended:!0,sampler:["Black","White","Red","Green","Blue","Yellow","Majenta","Cyan"]},"Secondary color":{name:"Secondary color",recommended:!0,sampler:["Black","White","Red","Orange","Yellow","Chartreuse","Green","Spring green","Cyan","Azure","Blue","Violet","Majenta","Rose"]},"CGA color":{name:"CGA color",sampler:["Black","CGA dark grey","CGA blue","CGA light blue","CGA green","CGA light green","CGA cyan","CGA light cyan","CGA red","CGA light red","CGA magenta","CGA light magenta","CGA brown","CGA yellow","CGA grey","White"]},"Brightness oscillator":{name:"Rainbow color",recommended:!0,sampler:"Random",sampleDrift:"Sine brightness",sampleRedPerturbationStrength:"Random",sampleGreenPerturbationStrength:"Random",sampleBluePerturbationStrength:"Random",sampleBrightnessPerturbationStrength:"Random",referenceColorName:"Grey",brightnessRange:1,saturationConstraintType:"Attractive",saturationRange:.05,hueRange:1},"Rainbow color":{name:"Rainbow color",recommended:!0,sampler:"Random",sampleDrift:"Linear hue",sampleRedPerturbationStrength:"Random",sampleGreenPerturbationStrength:"Random",sampleBluePerturbationStrength:"Random",sampleBrightnessPerturbationStrength:"Random",referenceColorName:"Red",brightnessConstraintType:"Attractive",brightnessRange:.05,saturationConstraintType:"Attractive",saturationRange:.05,hueRange:1},"Random color":{name:"Random color",recommended:!0,sampler:"Random",sampleDrift:"Random",sampleRedPerturbationStrength:"Random",sampleGreenPerturbationStrength:"Random",sampleBluePerturbationStrength:"Random",sampleBrightnessPerturbationStrength:"Random"},"Random grey":{name:"Random grey",recommended:!0,sampler:"Random",sampleDrift:"Random",sampleRedPerturbationStrength:"Random",sampleGreenPerturbationStrength:"Random",sampleBluePerturbationStrength:"Random",sampleBrightnessPerturbationStrength:"Random",referenceColorName:"Grey",brightnessRange:1,saturationConstraintType:"Attractive",saturationRange:.01,hueRange:1},"Saturated color":{name:"Saturated color",recommended:!0,sampler:"Random",sampleDrift:"Random",drift:10,sampleRedPerturbationStrength:"Random",sampleGreenPerturbationStrength:"Random",sampleBluePerturbationStrength:"Random",sampleBrightnessPerturbationStrength:"Random",referenceColorName:"Orange",brightnessConstraintType:"Attractive",brightnessRange:.05,saturationConstraintType:"Attractive",saturationRange:.05,hueRange:1},"Textured black":{name:"Textured black",r:0,g:0,b:0,recommended:!0,sampleRedPerturbationStrength:"Random",sampleGreenPerturbationStrength:"Random",sampleBluePerturbationStrength:"Random",sampleBrightnessPerturbationStrength:"Random"},"Textured white":{name:"Textured white",r:255,g:255,b:255,recommended:!0,sampleRedPerturbationStrength:"Random",sampleGreenPerturbationStrength:"Random",sampleBluePerturbationStrength:"Random",sampleBrightnessPerturbationStrength:"Random"},Grisaille:{name:"Grisaille",sampler:"Random",sampleDrift:"Random",sampleBrightnessPerturbationStrength:"Random",referenceColorName:"Dark Sepia",brightnessRange:2,saturationRange:.1,hueRange:.1},Nacre:{name:"Nacre",sampler:"Random",sampleDrift:"Random",sampleBrightnessPerturbationStrength:"Random",referenceColorName:"Light saturated",brightnessRange:.05,saturationRange:.1,hueRange:1},"Hue constrained color":{name:"Hue constrained color",sampler:"Random",sampleDrift:"Random",sampleRedPerturbationStrength:"Random",sampleGreenPerturbationStrength:"Random",sampleBluePerturbationStrength:"Random",sampleBrightnessPerturbationStrength:"Random",brightnessRange:1,saturationRange:1,hueRange:.1},"Hue and saturation constrained color":{name:"Hue and saturation constrained color",sampler:"Random",sampleDrift:"Random",sampleBrightnessPerturbationStrength:"Random",brightnessRange:2,saturationRange:.1,hueRange:.03},"Repulsive brightness color":{name:"Repulsive brightness color",sampler:"Random",sampleDrift:"Random",sampleRedPerturbationStrength:"Random",sampleGreenPerturbationStrength:"Random",sampleBluePerturbationStrength:"Random",sampleBrightnessPerturbationStrength:"Random",referenceColorName:"White",brightnessConstraintType:"Repulsive",brightnessRange:1.5,saturationRange:1,hueRange:1}};Object.keys(T).filter((e=>!0===T[e].referenceColorOk)),Object.keys(T).filter((e=>!0===T[e].recommended)),Object.keys(T).filter((e=>!0!==T[e].hideInApp));var F=["Background color"];for(let e=1;e<30;e++)F.push(`Color ${e}`);class D{constructor({r:e=0,g:t=0,b:i=0,t:n=255,sampler:r=null,drift:a=0,sampleDrift:o=null,redPerturbationStrength:s=0,sampleRedPerturbationStrength:l=null,greenPerturbationStrength:d=0,sampleGreenPerturbationStrength:g=null,bluePerturbationStrength:h=0,sampleBluePerturbationStrength:u=null,brightnessPerturbationStrength:m=0,sampleBrightnessPerturbationStrength:c=null,referenceColor:p=null,referenceColorName:S="No constraint",brightnessConstraintType:f="Attractive",brightnessRange:I=1,saturationConstraintType:C="Attractive",saturationRange:R=1,hueConstraintType:y="Attractive",hueRange:b=1}={}){this.r=e,this.g=t,this.b=i,this.t=n,this.sampler=r,this.drift=a,this.sampleDrift=o,this.redPerturbationStrength=s,this.sampleRedPerturbationStrength=l,this.greenPerturbationStrength=d,this.sampleGreenPerturbationStrength=g,this.bluePerturbationStrength=h,this.sampleBluePerturbationStrength=u,this.brightnessPerturbationStrength=m,this.sampleBrightnessPerturbationStrength=c,this.referenceColor=p,this.referenceColorName=S,this.brightnessConstraintType=f,this.brightnessRange=I,this.saturationConstraintType=C,this.saturationRange=R,this.hueConstraintType=y,this.hueRange=b,this.phase=Math.random(),this.updateDoubles(),null==this.referenceColorName&&(this.referenceColorName="No constraint",this.referenceColor=null)}static fromConfig(e,t,i=[]){if(!e)return new D;if("referenceColorName"in e&&null!=e.referenceColorName&&"No constraint"!=e.referenceColorName&&!F.includes(e.referenceColorName)&&(e.referenceColor=D.fromConfig(t.colorConfigs[e.referenceColorName],t)),"Random"===e.sampler)e.r=O(),e.g=O(),e.b=O();else if(Array.isArray(e.sampler)){let n=e.sampler[Math.floor(Math.random()*e.sampler.length)],r=0;for(;i.includes(n)&&r<10;)n=e.sampler[Math.floor(Math.random()*e.sampler.length)],r++;return i.push(n),D.fromConfig(t.colorConfigs[n],t)}return["Random","Linear hue","Sine brightness"].includes(e.sampleDrift)&&null==e.drift&&(e.drift=L()),"Random"===e.sampleRedPerturbationStrength&&(e.redPerturbationStrength=E()),"Random"===e.sampleGreenPerturbationStrength&&(e.greenPerturbationStrength=E()),"Random"===e.sampleBluePerturbationStrength&&(e.bluePerturbationStrength=E()),"Random"===e.sampleBrightnessPerturbationStrength&&(e.brightnessPerturbationStrength=E()),new D(e)}updateDoubles(){this.redPertStrength2=2*this.redPerturbationStrength,this.greenPertStrength2=2*this.greenPerturbationStrength,this.bluePertStrength2=2*this.bluePerturbationStrength,this.brightnessPertStrength2=2*this.brightnessPerturbationStrength}hardConstraint(e,t,i,n,r=!1){return r?i<n/2&&i>0?e=t+n/2:i>-n/2&&i<0&&(e=t-n/2):i>n/2?e=t+n/2:i<-n/2&&(e=t-n/2),e}keepWithinRange(){if(null==this.referenceColor)return;let e=this.referenceColor.rgbToHsb(),t=this.rgbToHsb(),i=t.h,n=t.s,r=t.b,a=e.h,o=e.s,s=e.b,l=i-a,d=n-o,g=r-s;l>.5?(i-=1,l-=1):l<-.5&&(i+=1,l+=1),i="Attractive"===this.hueConstraintType?this.hardConstraint(i,a,l,this.hueRange,!1):this.hardConstraint(i,a,l,this.hueRange,!0),n="Attractive"===this.saturationConstraintType?this.hardConstraint(n,o,d,this.saturationRange,!1):this.hardConstraint(n,o,d,this.saturationRange,!0),r="Attractive"===this.brightnessConstraintType?this.hardConstraint(r,s,g,this.brightnessRange,!1):this.hardConstraint(r,s,g,this.brightnessRange,!0);let h=this.hsbToRgb(i,n,r);this.r=h.r,this.g=h.g,this.b=h.b}hsbToRgb(e,t,i){let n=0,r=0,a=0;if(0===t)n=r=a=i;else{let o=i<.5?i*(1+t):i+t-i*t,s=2*i-o;n=this.hueToRgb(s,o,e+1/3),r=this.hueToRgb(s,o,e),a=this.hueToRgb(s,o,e-1/3)}return{r:Math.round(255*n),g:Math.round(255*r),b:Math.round(255*a)}}hueToRgb(e,t,i){return i<0&&(i+=1),i>1&&(i-=1),i<1/6?e+6*(t-e)*i:i<.5?t:i<2/3?e+(t-e)*(2/3-i)*6:e}rgbToHsb(){let e=this.r/255,t=this.g/255,i=this.b/255,n=Math.max(e,t,i),r=Math.min(e,t,i),a=(n+r)/2,o=0;a>0&&a<1&&(o=(n-r)/(1-Math.abs(2*a-1)));let s=0;return n!==r&&(s=n===e?(t-i)/(n-r)+(t<i?6:0):n===t?(i-e)/(n-r)+2:(e-t)/(n-r)+4,s/=6),{h:s,s:o,b:a}}toDict(){return{r:this.r,g:this.g,b:this.b,t:this.t,drift:this.drift,redPerturbationStrength:this.redPerturbationStrength,greenPerturbationStrength:this.greenPerturbationStrength,bluePerturbationStrength:this.bluePerturbationStrength,brightnessPerturbationStrength:this.brightnessPerturbationStrength,referenceColor:this.referenceColor.toDict(),brightnessRange:this.brightnessRange,saturationRange:this.saturationRange,hueRange:this.hueRange}}}function O(){return Math.floor(256*Math.random())}function E(){return 21*Math.random()}function L(){return 10**(1.5*Math.random()-.5)}function H(e,t,i){let n=t;if("Random"===t.sampleDrift)for(let e of["r","g","b"]){let i=Math.round(2*Math.random()*t.drift-t.drift),r=t[e]+i;r=Math.max(0,Math.min(255,r)),n[e]=r}else if("Linear hue"===t.sampleDrift){let e=t.rgbToHsb();e.h=e.h+.001*t.drift;let i=t.hsbToRgb(e.h,e.s,e.b);t.r=i.r,t.g=i.g,t.b=i.b}else if("Sine brightness"===t.sampleDrift){let i=Math.round(255*(.5+.5*Math.sin(.01*e.time*t.drift+t.phase)));t.r=i,t.g=i,t.b=i}return n.keepWithinRange(),n}function V(e,t,i){let n;n="colorDefinitions"in e.config.paletteConfig&&void 0!==e.config.paletteConfig.colorDefinitions[t]?e.config.paletteConfig.colorDefinitions[t]:e.colorConfigs[t];let r=D.fromConfig(n,e,i);if("referenceColorName"in n&&null!==n.referenceColorName&&"No constraint"!=n.referenceColorName){if("Background color"==n.referenceColorName&&e.colors.length>0)r.referenceColor=e.colors[0],r.referenceColorName="Background color";else if(a=n.referenceColorName,/^Color \d+$/.test(a)){let t=n.referenceColorName.match(/^Color (\d+)$/),i=parseInt(t[1],10);i<e.colors.length&&(r.referenceColor=e.colors[i],r.referenceColorName="Color "+i.toString())}}else r.referenceColor=null,r.referenceColorName=null;var a;return r}function q(e,t,i,n){let r=V(e,t,i);if("First"===e.config.paletteConfig.colorDependency&&e.colors.length>0)r.referenceColor=e.colors[0],r.referenceColorName="Background color";else if("Second"===e.config.paletteConfig.colorDependency&&e.colors.length>1)r.referenceColor=e.colors[1],r.referenceColorName="Color 1";else if("Previous"===e.config.paletteConfig.colorDependency&&e.colors.length>0)r.referenceColor=e.colors[n-1],r.referenceColorName=n-1==0?"Background color":"Color "+(n-1).toString();else if(/^Color \d+$/.test(e.config.paletteConfig.colorDependency)){let t=e.config.paletteConfig.colorDependency.match(/^Color (\d+)$/),i=parseInt(t[1],10);i<e.colors.length&&(r.referenceColor=e.colors[i],r.referenceColorName=0==i?"Background color":"Color "+i.toString())}return r.keepWithinRange(),r}function Q(e){let t;if(null!=e.config.paletteConfig.samplingPalettes){var i=e.config.paletteConfig.name,n=e.config.paletteConfig.samplingPalettes;let t=l(n)();e.config.paletteConfig=JSON.parse(JSON.stringify(e.paletteConfigs[t])),e.config.paletteConfig.sampledName=e.config.paletteConfig.name,e.config.paletteConfig.name=i,e.config.paletteConfig.samplingPalettes=n}if(null==e.config.paletteConfig.nColors){let i=e.config.paletteConfig.colorPattern.length-e.config.paletteConfig.minNColors;t=Math.floor(Math.random()*i)+e.config.paletteConfig.minNColors}else t=e.config.paletteConfig.nColors;e.nColors=t,e.colors=[];let r=0,a=[];for(let i of e.config.paletteConfig.colorPattern){let n=q(e,i,a,r);if(e.colors.push(n),e.colors.length>=t)break;r++}e.nColors=e.colors.length,e.colorCount=new Array(e.nColors).fill(0);let o="Col | Set the color palette according to the preset "+e.config.paletteConfig.name+".";null!=e.config.paletteConfig.sampledName&&(o+=" The color palette "+e.config.paletteConfig.sampledName+" was sampled."),u(e,o)}function z(e){if("VariableGR"!=e.metaRule)for(var t of e.colors)null!=t.sampleRedPerturbationStrength&&0!=t.sampleRedPerturbationStrength&&(t.redPerturbationStrength=E()),null!=t.sampleGreenPerturbationStrength&&0!=t.sampleGreenPerturbationStrength&&(t.greenPerturbationStrength=E()),null!=t.sampleBluePerturbationStrength&&0!=t.sampleBluePerturbationStrength&&(t.bluePerturbationStrength=E()),null!=t.sampleBrightnessPerturbationStrength&&0!=t.sampleBrightnessPerturbationStrength&&(t.brightnessPerturbationStrength=E()),t.updateDoubles()}function U(e){for(var t of e.colors)null!=t.sampleDrift&&0!=t.drift&&(t.drift=L())}function j(e,t=!1){if(t||e.changeMetaRuleFlag){e.colorCount=new Array(e.nColors).fill(0);var i=e.sanityConfig;if("VariableGR"==e.metaRule);else if("VariableDemo"==e.metaRule)e.config=e.stagingConfigs["Mixed Safe"],e.sanityConfig=e.sanityConfigs.Default,e.useLogo=!1;else if("Variable"==e.metaRule)e.config=e.stagingConfigs["Mixed Safe"],e.sanityConfig=e.sanityConfigs.Default;else if("VariableMix"==e.metaRule)e.config=e.stagingConfigs.Mixed,e.sanityConfig=e.sanityConfigs.Default;else if("VariableUnsafe"==e.metaRule)e.config=e.stagingConfigs.MixedDyn,e.sanityConfig=e.sanityConfigs.Default;else if("VariableTest"==e.metaRule)e.config=e.stagingConfigs["Test rule"],e.sanityConfig=e.sanityConfigs.Disabled;else if("VariableTestNoStyle"==e.metaRule)e.config=e.stagingConfigs["Test rule no style"],e.sanityConfig=e.sanityConfigs.Disabled;else if("CustomRule"==e.metaRule){if(e.config=e.stagingConfigs.Custom,e.sanityConfig=e.sanityConfigs.Disabled,e.currentRuleAndStyle){var[n,r]=e.currentRuleAndStyle.split("-");e.config.ruleConfig.rules={[n]:1},r?e.config.styleConfig.style=r:e.config.styleConfig={}}}else"GRMouse"==e.metaRule&&(e.config=e.stagingConfigs.GRMouse,e.sanityConfig=e.sanityConfigs.Default);e.sanityConfig=i,e.resampleRuleClass(),e.ruleLogSwitchProbability=-25,e.styleLogEvolveProbability=-25,e.changeMetaRuleFlag=!1,e.time=0,X(e),Q(e)}if(e.changeRuleFlag&&(e.ruleClass.setBaseRule(e),e.ruleClass.setStyleRule(e),e.ruleClass.setStyleRule(e,!0),e.ruleClass.setUpdateRule(),e.changeRuleFlag=!1,e.ruleLogSwitchProbability=-25,e.changeBaseRuleFlag=!1,e.styleLogEvolveProbability=-25,e.changeStyleFlag=!1,e.time=0,X(e),z(e),U(e)),(Math.random()<Math.exp(e.ruleLogSwitchProbability)||e.changeBaseRuleFlag)&&(e.ruleClass.setBaseRule(e),e.ruleClass.setUpdateRule(),e.ruleLogSwitchProbability=-25,e.changeBaseRuleFlag=!1,e.time=0,X(e),z(e),U(e)),e.changeStyleFlag&&(e.ruleClass.setStyleRule(e),e.ruleClass.setStyleRule(e,!0),e.ruleClass.setUpdateRule(),e.styleLogEvolveProbability=-25,e.changeStyleFlag=!1,e.time=0,X(e),z(e),U(e)),(Math.random()<Math.exp(e.styleLogEvolveProbability)||e.evolveStyleFlag)&&"CustomRule"!=e.metaRule&&!e.config.styleConfig.deterministic&&(!function(e,t){t.ruleChain[1]&&"function"==typeof t.ruleChain[1].evolveRule&&t.ruleChain[1].evolveRule(e,t.conditionLevels);t.ruleChain[2]&&"function"==typeof t.ruleChain[2].evolveRule&&t.ruleChain[2].evolveRule(e,t.conditionLevels)}(e,e.ruleClass),e.styleLogEvolveProbability=-25,e.evolveStyleFlag=!1,e.time=0,X(e),z(e),U(e)),e.reloadColorPaletteFlag,(null!=e.config.paletteConfig.samplingPalettes&&Math.random()<Math.exp(e.paletteLogSwitchProbability)||e.reloadColorPaletteFlag)&&(e.paletteLogSwitchProbability=-25,Q(e),e.reloadColorPaletteFlag=!1),!e.pauseEvolution){let t=1;e.ruleLogSwitchProbability=e.ruleLogSwitchProbability+e.logMultiplicativeFactor*t,e.ruleLogSwitchProbability>0&&(e.ruleLogSwitchProbability=0),e.styleLogEvolveProbability=e.styleLogEvolveProbability+e.logMultiplicativeEvolveFactor*t,e.styleLogEvolveProbability>0&&(e.styleLogEvolveProbability=0),null!=e.config.paletteConfig.samplingPalettes&&(e.paletteLogSwitchProbability=e.paletteLogSwitchProbability+e.logMultiplicativePaletteFactor*t,e.paletteLogSwitchProbability>0&&(e.paletteLogSwitchProbability=0))}}function X(e){if("undefined"!=typeof document){var t=document.getElementById("currentRuleAndStyle");t&&(e.useLogo&&null!=e.ruleClass2?t.value=e.ruleClass.getName()+"__"+e.ruleClass2.getName():t.value=e.ruleClass.getName())}}function J(e,t,i,n,r){let a=(t+n+e.gridHeight)%e.gridHeight,o=(i+r+e.gridWidth)%e.gridWidth,s=a,l=o;return(a-t-n>0||a-t-n<0)&&(l=(e.gridWidth-o-e.gridPeriodicityShiftX+e.gridWidth)%e.gridWidth),(o-i-r>0||o-i-r<0)&&(s=(e.gridHeight-a-e.gridPeriodicityShiftY+e.gridHeight)%e.gridHeight),[s,l]}function Y(e,t,i,n,r){let a=(t+n+e.gridHeight)%e.gridHeight,o=(i+r+e.gridWidth)%e.gridWidth,s=a,l=o;return(a-t-n>0||a-t-n<0)&&(l=(e.gridWidth-o-e.gridPeriodicityShiftX+e.gridWidth)%e.gridWidth),o-i-r>0?s=(a+e.gridPeriodicityShiftY+e.gridHeight)%e.gridHeight:o-i-r<0&&(s=(a-e.gridPeriodicityShiftY+e.gridHeight)%e.gridHeight),[s,l]}function $(e,t,i,n,r){let a=(t+n+e.gridHeight)%e.gridHeight,o=(i+r+e.gridWidth)%e.gridWidth,s=a,l=o;return a-t-n>0?l=(o+e.gridPeriodicityShiftX+e.gridWidth)%e.gridWidth:a-t-n<0&&(l=(o-e.gridPeriodicityShiftX+e.gridWidth)%e.gridWidth),(o-i-r>0||o-i-r<0)&&(s=(e.gridHeight-a-e.gridPeriodicityShiftY+e.gridHeight)%e.gridHeight),[s,l]}function K(e,t,i,n,r){let a=(t+n+e.gridHeight)%e.gridHeight,o=(i+r+e.gridWidth)%e.gridWidth,s=a,l=o;return a-t-n>0?l=(o+e.gridPeriodicityShiftX+e.gridWidth)%e.gridWidth:a-t-n<0&&(l=(o-e.gridPeriodicityShiftX+e.gridWidth)%e.gridWidth),o-i-r>0?s=(a+e.gridPeriodicityShiftY+e.gridHeight)%e.gridHeight:o-i-r<0&&(s=(a-e.gridPeriodicityShiftY+e.gridHeight)%e.gridHeight),[s,l]}function _(e){e.gridFlipX&&e.gridFlipY?e.findNeighbour=J:e.gridFlipX?e.findNeighbour=Y:e.gridFlipY?e.findNeighbour=$:e.findNeighbour=K}function Z(e,t,i){return(e*(i-1)+t)/i}function ee(e,t=!1){(e.time%200==0||t)&&(isNaN(e.brightness)&&(e.brightness=127,e.maxBrightness=130,e.minBrightness=124),isNaN(e.maxBrightness)&&(e.maxBrightness=130),isNaN(e.minBrightness)&&(e.minBrightness=124))}function te(e){let t=e.imageData;for(var i=0,n=0,r=0,a=e.colors.length,o=new Array(a).fill(0),s=0;s<e.imageHeight;s++)for(var l=0;l<e.imageWidth;l++){var d=Math.floor(e.grid.get(s%e.gridHeight,l%e.gridWidth)/e.ruleClass.colorUnit)%a;if(o[d]+=1,0==e.redraw.get(s%e.gridHeight,l%e.gridWidth))continue;i+=1;let g=e.colors[d],h=4*(s*e.imageWidth+l);n+=Math.sqrt((t[h+0]-g.r)**2+(t[h+1]-g.g)**2+(t[h+2]-g.b)**2),r+=g.r+g.g+g.b;const u=Math.round(Math.random()*g.redPertStrength2-g.redPerturbationStrength),m=Math.round(Math.random()*g.greenPertStrength2-g.greenPerturbationStrength),c=Math.round(Math.random()*g.bluePertStrength2-g.bluePerturbationStrength),p=Math.round(Math.random()*g.brightnessPertStrength2-g.brightnessPerturbationStrength);t[h+0]=g.r+u+p,t[h+1]=g.g+m+p,t[h+2]=g.b+c+p,t[h+3]=g.t}!function(e,t,i,n,r){var a=e.gridHeight*e.gridWidth;e.activityLevel=Z(e.activityLevel,t/a,e.sanityConfig.activityLevelWindowSize),e.nCellChangedHistoric=Z(e.nCellChangedHistoric,t,e.sanityConfig.activityLevelWindowSize),e.meanColorChangeHistoric=Z(e.meanColorChangeHistoric,i/(t+a/30),e.sanityConfig.activityLevelWindowSize),0==t?n=127:n/=3*t,e.brightness=Z(e.brightness,n,e.sanityConfig.flickerIndexWindowSize);var o=(e.sanityConfig.flickerIndexWindowSize-1)/e.sanityConfig.flickerIndexWindowSize;e.maxBrightness=o*(e.maxBrightness-e.brightness)+e.brightness,e.maxBrightness=Math.min(255,e.maxBrightness),e.minBrightness=o*(e.minBrightness-e.brightness)+e.brightness,e.minBrightness=Math.max(0,e.minBrightness),e.relCellChanged=t/a,e.diffBrightness=e.maxBrightness-e.minBrightness,e.flickerIndex=Z(e.flickerIndex,e.diffBrightness*e.relCellChanged,e.sanityConfig.flickerIndexWindowSize),e.maxBrightness<n?e.maxBrightness+=3:e.minBrightness>n&&(e.minBrightness-=3);for(var s=0;s<e.colorCount.length;s++)e.colorCount[s]=Z(e.colorCount[s],r[s]/a,100)}(e,i,n,r,o),ee(e),e.imageData=t}function ie(e,t,i){e.set(t,i,0)}function ne(e,t,i){e.set(t,i,Math.floor(1e5*Math.random()))}function re(e,t=!1){let i,n=e.initialisationConfig.background;return t&&(n=e.initialisationConfig.backgroundOnLogo??"Vaccuum"),i="Vaccuum"==n?ie:"Random"==n.slice(0,6)?ne:"First style state"==n?function(e){let t=e.ruleClass.ruleChain[0].nStates;return function(e,i,n){e.set(i,n,t)}}(e):ne,i}function ae(e,t,i){var n=Math.max(200-e.time,0)/200;null!=e.config.randomnessConfig.randomnessLogShift&&(n+=e.config.randomnessConfig.randomnessLogShift);var r=function(e){var t=Math.exp(-e),i=1,n=0;do{n++,i*=Math.random()}while(i>t);return n-1}(10**(e.randomnessAmount+n));if(0!=r)for(var a=e.seedSampler,o=e.config.randomnessConfig.seedingConfig,s=0;s<r;s++){var l=Math.floor(Math.random()*e.gridHeight),d=Math.floor(Math.random()*e.gridWidth);if(e.randomSeedingInMaskOnly)for(;1===e.mask.get(l,d);)l=Math.floor(Math.random()*e.gridHeight),d=Math.floor(Math.random()*e.gridWidth);var g=a(),h=o[g],u=!0;null==h&&(h=se(e,g),u=!1),oe(t,e,h,l,d,i,u)}}function oe(e,t,i,r,a,o,s){i instanceof n||(i=n.fromArray(i)),s&&(Math.random()<.25&&i.transpose(),Math.random()<.5&&i.flipX(),Math.random()<.75&&i.flipY());let l=i.height,d=i.width;for(let n=0;n<l;n++)for(let s=0;s<d;s++){let g=o(t,r,a,n-Math.floor(l/2),s-Math.floor(d/2));e.set(g[0],g[1],i.get(n,s))}}function se(e,t){let[i,r]=function(e){let t=Math.floor(Math.random()*e.config.randomnessConfig.maxSeedSize)+1,i=t;Math.random()>e.config.randomnessConfig.squareVsRectangularMaskProbability&&(i=Math.floor(Math.random()*e.config.randomnessConfig.maxSeedSize)+1);return[t,i]}(e);return function(e,t,i){let r=ne;return"Random"==i?function(e,t,i){let r=new n(t,e);for(let n=0;n<e;n++)for(let e=0;e<t;e++)i(r,n,e);return r}(e,t,r):"Random p2h"==i?function(e,t,i){let r=new n(t,e);for(let n=0;n<Math.ceil(e/2);n++)for(let a=0;a<t;a++)i(r,n,a),r.set(e-1-n,a,r.get(n,a));return r}(e,t,r):"Random p2v"==i?function(e,t,i){let r=new n(t,e);for(let n=0;n<e;n++)for(let e=0;e<Math.ceil(t/2);e++)i(r,n,e),r.set(n,t-1-e,r.get(n,e));return r}(e,t,r):"Random d2a"==i?function(e,t){let i=new n(e,e);for(let n=0;n<e;n++)for(let r=n;r<e;r++)t(i,n,r),i.set(r,n,i.get(n,r));return i}(e,r):"Random d2b"==i?function(e,t){let i=new n(e,e);for(let n=0;n<e;n++)for(let r=n;r<e;r++)t(i,n,r),i.set(e-1-r,e-1-n,i.get(n,r));return i}(e,r):"Random g2"==i?function(e,t,i){let r=new n(t,e);for(let n=0;n<e;n++)for(let a=0;a<Math.ceil(t/2);a++)i(r,n,a),r.set(e-1-n,t-1-a,r.get(n,a));return r}(e,t,r):"Random p4"==i?function(e,t,i){let r=new n(t,e);for(let n=0;n<Math.ceil(e/2);n++)for(let a=0;a<Math.ceil(t/2);a++)i(r,n,a),r.set(e-1-n,a,r.get(n,a)),r.set(n,t-1-a,r.get(n,a)),r.set(e-1-n,t-1-a,r.get(n,a));return r}(e,t,r):"Random d4"==i?function(e,t){let i=new n(e,e);for(let n=0;n<e;n++)for(let r=Math.max(n,e-n);r<e;r++)t(i,n,r),i.set(r,n,i.get(n,r)),i.set(e-1-r,e-1-n,i.get(n,r)),i.set(e-1-n,e-1-r,i.get(n,r));return i}(e,r):"Random g4"==i?function(e,t){let i=new n(e,e);for(let n=0;n<Math.ceil(e/2);n++)for(let r=0;r<Math.ceil(e/2);r++)t(i,n,r),i.set(r,e-1-n,i.get(n,r)),i.set(e-1-n,e-1-r,i.get(n,r)),i.set(e-1-r,n,i.get(n,r));return i}(e,r):function(e,t){let i=new n(e,e);for(let n=0;n<Math.ceil(e/2);n++)for(let r=0;r<Math.ceil(e/2);r++)t(i,n,r),i.set(r,e-1-n,i.get(n,r)),i.set(e-1-n,e-1-r,i.get(n,r)),i.set(e-1-r,n,i.get(n,r)),i.set(e-1-n,r,i.get(n,r)),i.set(e-1-r,e-1-n,i.get(n,r)),i.set(n,e-1-r,i.get(n,r)),i.set(r,n,i.get(n,r));return i}(e,r)}(i,r,t)}function le(e){const t=e.ruleClass.ruleChain[0].nStates,i=t-1;var a=0;null!=e.ruleClass.ruleChain[1]&&(a=e.ruleClass.ruleChain[1].nStates);const s=a;var l=r*s,d=[new Uint8Array(r*(t-1)),new Uint8Array(l)],g=new Uint8Array(8),h=new n(e.gridWidth,e.gridHeight),u=e.grid;const m=e.time;var c=0,p=e.activeCells*e.ruleRegularisationSeed/e.birth3;e.ruleClass.setTimeShifts(m);for(var S=0;S<e.gridHeight;S++)for(var f=0;f<e.gridWidth;f++){var I=o(e,S,f,u,d,t,i,s);const n=e.grid.get(S,f);var C=n;C=e.ruleClass.updateRule(n,C,I,e.time,p,e.mask.get(S,f)),Math.floor(C/e.ruleClass.colorUnit)%e.nColors!=Math.floor(n/e.ruleClass.colorUnit)%e.nColors?e.redraw.set(S,f,1):e.redraw.set(S,f,0),h.set(S,f,C),d[0]=d[0].fill(0),d[1]=d[1].fill(0),g=g.fill(0),C%t==1&&c++}!function(e,t){t.activeCells=Z(t.activeCells,e,t.ruleClass.ruleConfig.activityLevelForRuleWindowSize)}(c/(e.gridHeight*e.gridWidth),e),e.addRandomness&&ae(e,h,e.findNeighbour),e.grid=h}function de(e){e.enableSanityChecks&&(function(e){e.time>e.sanityConfig.gracePeriod&&(e.meanColorChangeHistoric>e.sanityConfig.maxColorChange||e.relCellChanged>e.sanityConfig.maxPropOfCellsChanged||e.flickerIndex>e.sanityConfig.maxFlickerIndex)&&(e.changeRuleFlag=!0,e.meanColorChangeHistoric>e.sanityConfig.maxColorChange?u(e,"San | Rule and style change triggered by the sanity checks: the color index change ("+e.meanColorChangeHistoric.toFixed(0)+") exceeded the limit of "+e.sanityConfig.maxColorChange.toFixed(0)+"."):e.relCellChanged>e.sanityConfig.maxPropOfCellsChanged?u(e,"San | Rule and style change triggered by the sanity checks: the proportion of cells changed ("+e.relCellChanged.toFixed(2)+") exceeded the limit of "+e.sanityConfig.maxPropOfCellsChanged.toFixed(2)+"."):u(e,"San | Rule and style change triggered by the sanity checks: the flicker index ("+e.flickerIndex.toFixed(1)+") exceeded the limit of "+e.sanityConfig.maxFlickerIndex.toFixed(1)+"."),ee(e,!0),e.nCellChangedHistoric=15,e.meanColorChangeHistoric=10,e.brightness=127,e.maxBrightness=130,e.minBrightness=124,e.flickerIndex=0)}(e),function(e){e.nCellChangedHistoric<e.sanityConfig.minNumberOfCellsChanged&&(e.changeRuleFlag=!0,u(e,"San | Rule and style change triggered by the sanity checks: the number of cells recolored ("+e.nCellChangedHistoric.toFixed(0)+") was below the threshold of "+e.sanityConfig.minNumberOfCellsChanged.toFixed(0)+"."),ee(e,!0),e.nCellChangedHistoric=20)}(e),function(e){const t=e.colorCount.slice(1).some((t=>t>e.sanityConfig.maxPropOfPlainColor));e.time>e.sanityConfig.gracePeriod&&t&&(e.changeRuleFlag=!0,u(e,"San | Rule and style change triggered by the sanity checks: a foreground color exceeded the threshold of "+e.sanityConfig.maxPropOfPlainColor.toFixed(3)+"% of the canvas."),ee(e,!0),e.colorCount=new Array(e.nColors).fill(0))}(e))}function ge(e){return console.log("Loading image:",e),new Promise(((t,n)=>{const r=function(){if("undefined"!=typeof window)return new window.Image;try{const{Image:e}=i(Object(function(){var e=new Error("Cannot find module 'canvas'");throw e.code="MODULE_NOT_FOUND",e}()));return new e}catch(e){throw console.error('The canvas module is not installed. Please run "npm install canvas" to install it.'),e}}();r.onload=()=>{console.log("Image loaded:",e);const n=function(e,t){if("undefined"!=typeof window){const i=document.createElement("canvas");return i.width=e,i.height=t,i}try{const{createCanvas:n}=i(Object(function(){var e=new Error("Cannot find module 'canvas'");throw e.code="MODULE_NOT_FOUND",e}()));return n(e,t)}catch(e){throw console.error('The canvas module is not installed. Please run "npm install canvas" to install it.'),e}}(r.width,r.height),a=n.getContext("2d");a.drawImage(r,0,0,r.width,r.height);const o=a.getImageData(0,0,n.width,n.height).data,s=[];for(let e=0;e<r.height;e++){const t=[];for(let i=0;i<r.width;i++){const n=4*(e*r.width+i),a=(o[n]+o[n+1]+o[n+2])/3;t.push(a>128?1:0)}s.push(t)}t(s)},r.onerror=()=>{console.error("Error loading image:",e),n(new Error("Error loading image"))},r.src=e}))}async function he(e){e.config&&e.initialisationConfig?(null!=e.initialisationConfig.logo?await async function(e){console.log(`Attempting to load image ${e.initialisationConfig.logo}`);try{const t=await ge(e.initialisationConfig.logo),i=new n(e.gridWidth,e.gridHeight),r=t[0].length/e.gridWidth,a=t.length/e.gridHeight,o=Math.max(r,a),s=Math.floor((e.gridWidth-t[0].length/o)/2),l=Math.floor((e.gridHeight-t.length/o)/2),d=0;for(let n=0;n<e.gridHeight;n++)for(let r=0;r<e.gridWidth;r++){if(r<s||(r-s)*o>=t[0].length||n<l||(n-l)*o>=t.length){i.set(n,r,d);continue}let e=Math.floor((r-s)*o);0===t[Math.floor((n-l)*o)][e]?i.set(n,r,0):i.set(n,r,1)}e.mask=i}catch(t){console.log("Image loading failed, not using a mask."),console.error("Error loading image:",t),e.mask=new n(e.gridWidth,e.gridHeight)}}(e):e.mask=new n(e.gridWidth,e.gridHeight),null!=e.initialisationConfig.background&&function(e){e.grid=new n(e.gridWidth,e.gridHeight),e.redraw=new n(e.gridWidth,e.gridHeight);let t=re(e);for(var i=0;i<e.gridHeight;i++)for(var r=0;r<e.gridWidth;r++)e.redraw.set(i,r,1),t(e.grid,i,r);if(null!==e.mask)for(t=re(e,!0),i=0;i<e.gridHeight;i++)for(r=0;r<e.gridWidth;r++)0===e.mask.get(i,r)&&t(e.grid,i,r)}(e),null!=e.initialisationConfig.seed&&function(e){let t=e.initialisationConfig.seed[0].length,i=e.initialisationConfig.seed.length,n=Math.floor((e.gridWidth-t)/2),r=Math.floor((e.gridHeight-i)/2);e.reinitialiseInTheTopHalf&&(r=Math.floor((e.gridHeight/2-i)/2));for(let a=0;a<i;a++)for(let i=0;i<t;i++)e.grid.set(a+r,i+n,e.initialisationConfig.seed[a][i])}(e)):function(e,t=1e4){Promise.resolve().then((()=>{e.grid=new n(e.gridWidth,e.gridHeight),e.redraw=new n(e.gridWidth,e.gridHeight);for(var i=0;i<e.gridHeight;i++)for(var r=0;r<e.gridWidth;r++)if(e.redraw.set(i,r,1),"gr"!=e.initialisation||1!==e.mask.get(i,r))if("gr2"!=e.initialisation||1!==e.mask.get(i,r)){for(var a=Math.random(),o=0;o<t;o++)if(a<(o+1)/(t+1)){e.grid.set(i,r,o);break}}else e.grid.set(i,r,3);else e.grid.set(i,r,0)}))}(e)}var ue={signature:"GIF",version:"89a",trailer:59,extensionIntroducer:33,applicationExtensionLabel:255,graphicControlExtensionLabel:249,imageSeparator:44,signatureSize:3,versionSize:3,globalColorTableFlagMask:128,colorResolutionMask:112,sortFlagMask:8,globalColorTableSizeMask:7,applicationIdentifierSize:8,applicationAuthCodeSize:3,disposalMethodMask:28,userInputFlagMask:2,transparentColorFlagMask:1,localColorTableFlagMask:128,interlaceFlagMask:64,idSortFlagMask:32,localColorTableSizeMask:7};function me(e=256){let t=0,i=new Uint8Array(e);return{get buffer(){return i.buffer},reset(){t=0},bytesView:()=>i.subarray(0,t),bytes:()=>i.slice(0,t),writeByte(e){n(t+1),i[t]=e,t++},writeBytes(e,r=0,a=e.length){n(t+a);for(let n=0;n<a;n++)i[t++]=e[n+r]},writeBytesView(e,r=0,a=e.byteLength){n(t+a),i.set(e.subarray(r,r+a),t),t+=a}};function n(e){var n=i.length;if(n>=e)return;e=Math.max(e,n*(n<1048576?2:1.125)>>>0),0!=n&&(e=Math.max(e,256));let r=i;i=new Uint8Array(e),t>0&&i.set(r.subarray(0,t),0)}}var ce=[0,1,3,7,15,31,63,127,255,511,1023,2047,4095,8191,16383,32767,65535];var pe=function(e,t,i,n,r=me(512),a=new Uint8Array(256),o=new Int32Array(5003),s=new Int32Array(5003)){let l=o.length,d=Math.max(2,n);a.fill(0),s.fill(0),o.fill(-1);let g=0,h=0,u=d+1,m=u,c=!1,p=m,S=(1<<p)-1,f=1<<u-1,I=f+1,C=f+2,R=0,y=i[0],b=0;for(let e=l;e<65536;e*=2)++b;b=8-b,r.writeByte(d),v(f);let B=i.length;for(let e=1;e<B;e++)e:{let t=i[e],n=(t<<12)+y,r=t<<b^y;if(o[r]===n){y=s[r];break e}let a=0===r?1:l-r;for(;o[r]>=0;)if(r-=a,r<0&&(r+=l),o[r]===n){y=s[r];break e}v(y),y=t,C<4096?(s[r]=C++,o[r]=n):(o.fill(-1),C=f+2,c=!0,v(f))}return v(y),v(I),r.writeByte(0),r.bytesView();function v(e){for(g&=ce[h],h>0?g|=e<<h:g=e,h+=p;h>=8;)a[R++]=255&g,R>=254&&(r.writeByte(R),r.writeBytesView(a,0,R),R=0),g>>=8,h-=8;if((C>S||c)&&(c?(p=m,S=(1<<p)-1,c=!1):(++p,S=12===p?1<<p:(1<<p)-1)),e==I){for(;h>0;)a[R++]=255&g,R>=254&&(r.writeByte(R),r.writeBytesView(a,0,R),R=0),g>>=8,h-=8;R>0&&(r.writeByte(R),r.writeBytesView(a,0,R),R=0)}}};function Se(e,t,i){return e<<8&63488|t<<2&992|i>>3}function fe(e,t,i,n){return e>>4|240&t|(240&i)<<4|(240&n)<<8}function Ie(e,t,i){return e>>4<<8|240&t|i>>4}function Ce(e,t,i){return e<t?t:e>i?i:e}function Re(e){return e*e}function ye(e,t,i){var n=0,r=1e100;let a=e[t],o=a.cnt,s=a.ac,l=a.rc,d=a.gc,g=a.bc;for(var h=a.fw;0!=h;h=e[h].fw){let t=e[h],a=t.cnt,m=o*a/(o+a);if(!(m>=r)){var u=0;i&&(u+=m*Re(t.ac-s))>=r||!((u+=m*Re(t.rc-l))>=r)&&(!((u+=m*Re(t.gc-d))>=r)&&(!((u+=m*Re(t.bc-g))>=r)&&(r=u,n=h)))}}a.err=r,a.nn=n}function be(e,t,i={}){let{format:n="rgb565",clearAlpha:r=!0,clearAlphaColor:a=0,clearAlphaThreshold:o=0,oneBitAlpha:s=!1}=i;if(!e||!e.buffer)throw new Error("quantize() expected RGBA Uint8Array data");if(!(e instanceof Uint8Array||e instanceof Uint8ClampedArray))throw new Error("quantize() expected RGBA Uint8Array data");let l=new Uint32Array(e.buffer),d=!1!==i.useSqrt,g="rgba4444"===n,h=function(e,t){let i=new Array("rgb444"===t?4096:65536),n=e.length;if("rgba4444"===t)for(let t=0;t<n;++t){let n=e[t],r=n>>24&255,a=n>>16&255,o=n>>8&255,s=255&n,l=fe(s,o,a,r),d=l in i?i[l]:i[l]={ac:0,rc:0,gc:0,bc:0,cnt:0,nn:0,fw:0,bk:0,tm:0,mtm:0,err:0};d.rc+=s,d.gc+=o,d.bc+=a,d.ac+=r,d.cnt++}else if("rgb444"===t)for(let t=0;t<n;++t){let n=e[t],r=n>>16&255,a=n>>8&255,o=255&n,s=Ie(o,a,r),l=s in i?i[s]:i[s]={ac:0,rc:0,gc:0,bc:0,cnt:0,nn:0,fw:0,bk:0,tm:0,mtm:0,err:0};l.rc+=o,l.gc+=a,l.bc+=r,l.cnt++}else for(let t=0;t<n;++t){let n=e[t],r=n>>16&255,a=n>>8&255,o=255&n,s=Se(o,a,r),l=s in i?i[s]:i[s]={ac:0,rc:0,gc:0,bc:0,cnt:0,nn:0,fw:0,bk:0,tm:0,mtm:0,err:0};l.rc+=o,l.gc+=a,l.bc+=r,l.cnt++}return i}(l,n),u=h.length,m=u-1,c=new Uint32Array(u+1);for(var p=0,S=0;S<u;++S){let e=h[S];if(null!=e){var f=1/e.cnt;g&&(e.ac*=f),e.rc*=f,e.gc*=f,e.bc*=f,h[p++]=e}}Re(t)/p<.022&&(d=!1);for(S=0;S<p-1;++S)h[S].fw=S+1,h[S+1].bk=S,d&&(h[S].cnt=Math.sqrt(h[S].cnt));var I,C,R;for(d&&(h[S].cnt=Math.sqrt(h[S].cnt)),S=0;S<p;++S){ye(h,S,!1);var y=h[S].err;for(C=++c[0];C>1&&!(h[I=c[R=C>>1]].err<=y);C=R)c[C]=I;c[C]=S}var b=p-t;for(S=0;S<b;){for(var B;;){var v=c[1];if((B=h[v]).tm>=B.mtm&&h[B.nn].mtm<=B.tm)break;B.mtm==m?v=c[1]=c[c[0]--]:(ye(h,v,!1),B.tm=S);y=h[v].err;for(C=1;(R=C+C)<=c[0]&&(R<c[0]&&h[c[R]].err>h[c[R+1]].err&&R++,!(y<=h[I=c[R]].err));C=R)c[C]=I;c[C]=v}var G=h[B.nn],W=B.cnt,w=G.cnt;f=1/(W+w);g&&(B.ac=f*(W*B.ac+w*G.ac)),B.rc=f*(W*B.rc+w*G.rc),B.gc=f*(W*B.gc+w*G.gc),B.bc=f*(W*B.bc+w*G.bc),B.cnt+=G.cnt,B.mtm=++S,h[G.bk].fw=G.fw,h[G.fw].bk=G.bk,G.mtm=m}let k=[];var M=0;for(S=0;;++M){let e=Ce(Math.round(h[S].rc),0,255),t=Ce(Math.round(h[S].gc),0,255),i=Ce(Math.round(h[S].bc),0,255),n=255;if(g){if(n=Ce(Math.round(h[S].ac),0,255),s){n=n<=("number"==typeof s?s:127)?0:255}r&&n<=o&&(e=t=i=a,n=0)}let l=g?[e,t,i,n]:[e,t,i];if(Be(k,l)||k.push(l),0==(S=h[S].fw))break}return k}function Be(e,t){for(let i=0;i<e.length;i++){let n=e[i],r=n[0]===t[0]&&n[1]===t[1]&&n[2]===t[2],a=!(n.length>=4&&t.length>=4)||n[3]===t[3];if(r&&a)return!0}return!1}function ve(e,t,i,n,r){let a=0,o=1e100;for(let s=0;s<r.length;s++){let l=r[s],d=We(l[3]-n);d>o||(d+=We(l[0]-e),d>o||(d+=We(l[1]-t),d>o||(d+=We(l[2]-i),!(d>o)&&(o=d,a=s))))}return a}function Ge(e,t,i,n){let r=0,a=1e100;for(let o=0;o<n.length;o++){let s=n[o],l=We(s[0]-e);l>a||(l+=We(s[1]-t),l>a||(l+=We(s[2]-i),!(l>a)&&(a=l,r=o)))}return r}function We(e){return e*e}function we(e={}){let{initialCapacity:t=4096,auto:i=!0}=e,n=me(t),r=new Uint8Array(256),a=new Int32Array(5003),o=new Int32Array(5003),s=!1;return{reset(){n.reset(),s=!1},finish(){n.writeByte(ue.trailer)},bytes:()=>n.bytes(),bytesView:()=>n.bytesView(),get buffer(){return n.buffer},get stream(){return n},writeHeader:l,writeFrame(e,t,d,g={}){let{transparent:h=!1,transparentIndex:u=0,delay:m=0,palette:c=null,repeat:p=0,colorDepth:S=8,dispose:f=-1}=g,I=!1;if(i?s||(I=!0,l(),s=!0):I=Boolean(g.first),t=Math.max(0,Math.floor(t)),d=Math.max(0,Math.floor(d)),I){if(!c)throw new Error("First frame must include a { palette } option");(function(e,t,i,n,r=8){let a=1,o=0,s=Ae(n.length)-1,l=a<<7|r-1<<4|o<<3|s,d=0,g=0;Me(e,t),Me(e,i),e.writeBytes([l,d,g])})(n,t,d,c,S),ke(n,c),p>=0&&function(e,t){e.writeByte(33),e.writeByte(255),e.writeByte(11),Ne(e,"NETSCAPE2.0"),e.writeByte(3),e.writeByte(1),Me(e,t),e.writeByte(0)}(n,p)}let C=Math.round(m/10);!function(e,t,i,n,r){var a,o;e.writeByte(33),e.writeByte(249),e.writeByte(4),r<0&&(r=0,n=!1),n?(a=1,o=2):(a=0,o=0),t>=0&&(o=7&t),o<<=2;let s=0;e.writeByte(o|s|a),Me(e,i),e.writeByte(r||0),e.writeByte(0)}(n,f,C,h,u);let R=Boolean(c)&&!I;(function(e,t,i,n){if(e.writeByte(44),Me(e,0),Me(e,0),Me(e,t),Me(e,i),n){let t=0,i=0,r=Ae(n.length)-1;e.writeByte(128|t|i|r)}else e.writeByte(0)})(n,t,d,R?c:null),R&&ke(n,c),function(e,t,i,n,r=8,a,o,s){pe(i,n,t,r,e,a,o,s)}(n,e,t,d,S,r,a,o)}};function l(){Ne(n,"GIF89a")}}function ke(e,t){let i=1<<Ae(t.length);for(let n=0;n<i;n++){let i=[0,0,0];n<t.length&&(i=t[n]),e.writeByte(i[0]),e.writeByte(i[1]),e.writeByte(i[2])}}function Me(e,t){e.writeByte(255&t),e.writeByte(t>>8&255)}function Ne(e,t){for(var i=0;i<t.length;i++)e.writeByte(t.charCodeAt(i))}function Ae(e){return Math.max(Math.ceil(Math.log2(e)),1)}function Pe(e){if(e.startRecordingGifFlag){u(e,"Gif | Starting the GIF recording...");const{data:t,width:i,height:n}=e.ctx.getImageData(0,0,3*e.gridWidth,3*e.gridHeight);e.gifPalette=be(t,16),e.gif=we(),e.recordingGif=!0,e.startRecordingGifFlag=!1}if(e.stopRecordingGifFlag){e.gif.finish(),e.gifOutput=e.gif.bytes();const r=new Blob([e.gifOutput],{type:"image/gif"}),a=URL.createObjectURL(r);if(e.recordingGif=!1,"Download"==e.gifMode){const e=document.createElement("a");e.href=a,e.download="output.gif",document.body.appendChild(e),e.click(),document.body.removeChild(e)}else"InAppWebView"==e.gifMode&&(t=r,i=function(e){window.flutter_inappwebview.callHandler("saveGif",e)},(n=new FileReader).onload=function(e){i(e.target.result)},n.readAsDataURL(t));e.stopRecordingGifFlag=!1,e.nRecordedFrames=0,u(e,"Gif | Stopped the GIF recording.")}var t,i,n;if(e.recordingGif){const{data:t,width:i,height:n}=e.ctx.getImageData(0,0,e.gridWidth,e.gridHeight),r=function(e,t,i="rgb565"){if(!e||!e.buffer)throw new Error("quantize() expected RGBA Uint8Array data");if(!(e instanceof Uint8Array||e instanceof Uint8ClampedArray))throw new Error("quantize() expected RGBA Uint8Array data");if(t.length>256)throw new Error("applyPalette() only works with 256 colors or less");let n=new Uint32Array(e.buffer),r=n.length,a="rgb444"===i?4096:65536,o=new Uint8Array(r),s=new Array(a);if("rgba4444"===i)for(let e=0;e<r;e++){let i=n[e],r=i>>24&255,a=i>>16&255,l=i>>8&255,d=255&i,g=fe(d,l,a,r),h=g in s?s[g]:s[g]=ve(d,l,a,r,t);o[e]=h}else{let e="rgb444"===i?Ie:Se;for(let i=0;i<r;i++){let r=n[i],a=r>>16&255,l=r>>8&255,d=255&r,g=e(d,l,a),h=g in s?s[g]:s[g]=Ge(d,l,a,t);o[i]=h}}return o}(t,e.gifPalette),a=e.gifPalette;e.gif.writeFrame(r,i,n,{palette:a,delay:e.targetCycleTime}),e.nRecordedFrames=e.nRecordedFrames+1,e.nRecordedFrames>1e3&&(e.stopRecordingGifFlag=!0,e.paused=!0,u(e,"Gif | The GIF recording recording reached 1000 frames, stopping."))}}var xe=166320;function Te(e,t=null){const i=performance.now();e.paused?(e.step&&(Fe(e,t),e.step=!1),e.recordingGif&&Pe(e)):Fe(e,t);const r=performance.now();e.frameExecutionTime=r-i,e.reinitialiseGridFlag&&(he(e),e.reinitialiseGridFlag=!1,e.reinitialiseInTheTopHalf=!1,e.time=0),e.changeGridSizeFlag&&(e.gridHeight=e.tempGridHeight,e.gridWidth=e.tempGridWidth,e.imageData=new Uint8ClampedArray(4*e.gridWidth*e.gridHeight),e.redraw=new n(e.gridWidth,e.gridHeight),e.canvas=document.getElementById("gameCanvas"),e.canvas.width=e.gridWidth,e.canvas.height=e.gridHeight,e.ctx=e.canvas.getContext("2d",{willReadFrequently:!0}),he(e),e.changeGridSizeFlag=!1),setTimeout((function(){requestAnimationFrame((()=>Te(e,t)))}),Math.max(0,e.targetCycleTime-e.frameExecutionTime))}function Fe(e,t){te(e),null!=t&&t(e),de(e),le(e),j(e),Pe(e),e.time=(e.time+1)%xe,e.randomisePeriodicityShiftAndTopology&&function(e){Math.random()<1e-4&&(e.gridPeriodicityShiftX=Math.floor(Math.random()*e.gridWidth),u(e,"Top | Monodromy along the vertical axis set to "+e.gridPeriodicityShiftX+" cells.")),Math.random()<1e-4&&(e.gridPeriodicityShiftY=Math.floor(Math.random()*e.gridHeight),u(e,"Top | Monodromy along the horizontal axis set to "+e.gridPeriodicityShiftY+" cells.")),Math.random()<1e-4&&(e.gridFlipX=!e.gridFlipX,_(e),e.gridFlipX?e.gridFlipY?u(e,"Top | Twisting the topology along the vertical axis. The cellular world is now a projective plane."):u(e,"Top | Twisting the topology along the vertical axis. The cellular world is now a Klein bottle."):e.gridFlipY?u(e,"Top | Untwisting the topology along the vertical axis. The cellular world is now a Klein bottle."):u(e,"Top | Untwisting the topology along the vertical axis. The cellular world is now a torus.")),Math.random()<1e-4&&(e.gridFlipY=!e.gridFlipY,_(e),e.gridFlipY?e.gridFlipX?u(e,"Top | Twisting the topology along the horizontal axis. The cellular world is now a projective plane."):u(e,"Top | Twisting the topology along the horizontal axis. The cellular world is now a Klein Bottle."):e.gridFlipX?u(e,"Top | Untwisting the topology along the horizontal axis. The cellular world is now a Klein Bottle."):u(e,"Top | Untwisting the topology along the horizontal axis. The cellular world is now a torus."))}(e),function(e){for(var t=0;t<e.colors.length;t++){var i=e.colors[t];i.drift>0&&(e.colors[t]=H(e,i))}}(e)}function De(e,t){if(e.saveEventData){var i=e.ruleClass.ruleChain[0].getName(),n=new Blob([i],{type:"text/plain"}),r=URL.createObjectURL(n),a=document.createElement("a");a.href=r,a.download="dataAutomata.txt",a.click()}}function Oe(e){document.getElementById("submitButton").addEventListener("click",(function(){!function(e){Object.keys(e).forEach((e=>{let t=document.getElementById(e);var i;t&&(i="checkbox"===t.type?t.checked:"number"===t.type||"range"===t.type?parseFloat(t.value):t.value,localStorage.setItem(e,i))})),location.reload()}(e)}))}function Ee(e){document.getElementById("randomnessAmount").addEventListener("input",(function(){!function(e,t){e.randomnessAmount=parseFloat(t),document.getElementById("randomnessAmountValue").textContent=t}(e,this.value)}))}function Le(e){let t=new ImageData(e.imageData,e.imageWidth,e.imageHeight);e.ctx.putImageData(t,e.canvasCornerX,e.canvasCornerY)}const He={"Blocky triangles":{name:"Blocky triangles",ruleConfig:{name:"Custom",rules:{"B23457/S378/I568|1:0/G10/R0":1},deterministic:!0,activityLevelForRuleWindowSize:32},randomnessConfig:{randomnessLogShift:0,squareVsRectangularMaskProbability:.7,maxSeedSize:10,seedingPatterns:{Random:{prob:1,mask:null},"Random p2h":{prob:1,mask:null},"Random p2v":{prob:1,mask:null},"Random d2a":{prob:1,mask:null},"Random d2b":{prob:1,mask:null},"Random g2":{prob:1,mask:null},"Random p4":{prob:1,mask:null},"Random d4":{prob:1,mask:null},"Random g4":{prob:1,mask:null},"Random r8":{prob:1,mask:null},Butterfly:{prob:1,mask:[[0,0,1,2],[0,2,0,0],[1,2,1,0]]},"Diamond wave":{prob:.001,mask:[[0,0],[1,1]]},"Oscillator I":{prob:2,mask:[[0,0,1,0],[1,2,2,0],[0,2,2,1],[0,1,0,0]]},"Oscillator II":{prob:2,mask:[[0,0,2,0,0,0,0],[0,1,1,0,0,1,0],[0,0,2,1,2,1,2],[0,0,1,0,1,0,0],[2,1,2,1,2,0,0],[0,1,0,0,1,1,0],[0,0,0,0,2,0,0]]},"Short-lived Star":{prob:.001,mask:[[1,0],[0,1]]},Snake:{prob:4,mask:[[0,1,2,1,2,1,0],[1,2,0,1,0,2,1],[1,2,0,1,0,2,1],[0,1,2,1,2,1,0]]},Spaceship:{prob:.001,mask:[[1,1],[2,0],[0,2]]},"Square wave":{prob:4,mask:[[1,1],[2,2]]},Star:{prob:4,mask:[[1,0,1],[0,0,0],[1,0,1]]},"Butterfly gun":{prob:.001,mask:[[0,2,1,0,0,0,0,0],[0,0,2,1,0,0,0,0],[2,0,0,2,1,0,0,0],[1,2,0,0,2,1,0,0],[0,1,0,2,1,0,2,1],[0,0,2,1,0,0,2,1]]}},seedMasks:{Random:null,"Random p2h":null,"Random p2v":null,"Random d2a":null,"Random d2b":null,"Random g2":null,"Random p4":null,"Random d4":null,"Random g4":null,"Random r8":null,Butterfly:[[0,0,1,2],[0,2,0,0],[1,2,1,0]],"Diamond wave":[[0,0],[1,1]],"Oscillator I":[[0,0,1,0],[1,2,2,0],[0,2,2,1],[0,1,0,0]],"Oscillator II":[[0,0,2,0,0,0,0],[0,1,1,0,0,1,0],[0,0,2,1,2,1,2],[0,0,1,0,1,0,0],[2,1,2,1,2,0,0],[0,1,0,0,1,1,0],[0,0,0,0,2,0,0]],"Short-lived Star":[[1,0],[0,1]],Snake:[[0,1,2,1,2,1,0],[1,2,0,1,0,2,1],[1,2,0,1,0,2,1],[0,1,2,1,2,1,0]],Spaceship:[[1,1],[2,0],[0,2]],"Square wave":[[1,1],[2,2]],Star:[[1,0,1],[0,0,0],[1,0,1]],"Butterfly gun":[[0,2,1,0,0,0,0,0],[0,0,2,1,0,0,0,0],[2,0,0,2,1,0,0,0],[1,2,0,0,2,1,0,0],[0,1,0,2,1,0,2,1],[0,0,2,1,0,0,2,1]]},seedMasksAsArrays:{Random:null,"Random p2h":null,"Random p2v":null,"Random d2a":null,"Random d2b":null,"Random g2":null,"Random p4":null,"Random d4":null,"Random g4":null,"Random r8":null,Butterfly:[[0,0,1,2],[0,2,0,0],[1,2,1,0]],"Diamond wave":[[0,0],[1,1]],"Oscillator I":[[0,0,1,0],[1,2,2,0],[0,2,2,1],[0,1,0,0]],"Oscillator II":[[0,0,2,0,0,0,0],[0,1,1,0,0,1,0],[0,0,2,1,2,1,2],[0,0,1,0,1,0,0],[2,1,2,1,2,0,0],[0,1,0,0,1,1,0],[0,0,0,0,2,0,0]],"Short-lived Star":[[1,0],[0,1]],Snake:[[0,1,2,1,2,1,0],[1,2,0,1,0,2,1],[1,2,0,1,0,2,1],[0,1,2,1,2,1,0]],Spaceship:[[1,1],[2,0],[0,2]],"Square wave":[[1,1],[2,2]],Star:[[1,0,1],[0,0,0],[1,0,1]],"Butterfly gun":[[0,2,1,0,0,0,0,0],[0,0,2,1,0,0,0,0],[2,0,0,2,1,0,0,0],[1,2,0,0,2,1,0,0],[0,1,0,2,1,0,2,1],[0,0,2,1,0,0,2,1]]},seedProb:{Random:1,"Random p2h":1,"Random p2v":1,"Random d2a":1,"Random d2b":1,"Random g2":1,"Random p4":1,"Random d4":1,"Random g4":1,"Random r8":1,Butterfly:1,"Diamond wave":.001,"Oscillator I":2,"Oscillator II":2,"Short-lived Star":.001,Snake:4,Spaceship:.001,"Square wave":4,Star:4,"Butterfly gun":.001}},styleConfig:{name:"Custom",style:"E4N[0|0:5]||E6C[0|0:8|0:6]||B1N[0|0:8]||B7C[0|0:4|0:2]",deterministic:!0},paletteConfig:{name:"Custom",recommended:!0,colorPattern:["Textured black","Textured white","Random color","Random color","Random color","Random color","Random color"],minNColors:3,sampledName:"Cartoon Cacophony",samplingPalettes:null,nColors:3},timeBetweenRuleChanges:null,timeBetweenStyleChanges:null,timeBetweenPaletteChanges:null},"Rainbow cartoon":{name:"Rainbow cartoon",ruleConfig:{name:"Custom",rules:{"B24568/S3478/I3458/G14/R0":1},deterministic:!0,activityLevelForRuleWindowSize:32},randomnessConfig:{randomnessLogShift:0,squareVsRectangularMaskProbability:.7,maxSeedSize:10,seedingPatterns:{Random:{prob:1,mask:null},"Random p2h":{prob:1,mask:null},"Random p2v":{prob:1,mask:null},"Random d2a":{prob:1,mask:null},"Random d2b":{prob:1,mask:null},"Random g2":{prob:1,mask:null},"Random p4":{prob:1,mask:null},"Random d4":{prob:1,mask:null},"Random g4":{prob:1,mask:null},"Random r8":{prob:1,mask:null},Glider:{prob:10,mask:[[0,0,1],[1,0,1],[0,1,1]]},Oscillator:{prob:.001,mask:[[1,1,1]]},"Spaceship 1":{prob:10,mask:[[1,0,0,1,0],[0,0,0,0,1],[1,0,0,0,1],[0,1,1,1,1]]},"Spaceship 2":{prob:10,mask:[[0,0,0,0,1,0],[0,0,0,0,0,1],[1,0,0,0,0,1],[0,1,1,1,1,1]]},"Spaceship 3":{prob:10,mask:[[0,1,1,1,1],[1,0,0,0,1],[0,0,0,0,1],[1,0,0,1,0]]}},seedMasks:{Random:null,"Random p2h":null,"Random p2v":null,"Random d2a":null,"Random d2b":null,"Random g2":null,"Random p4":null,"Random d4":null,"Random g4":null,"Random r8":null,Glider:[[0,0,1],[1,0,1],[0,1,1]],Oscillator:[[1,1,1]],"Spaceship 1":[[1,0,0,1,0],[0,0,0,0,1],[1,0,0,0,1],[0,1,1,1,1]],"Spaceship 2":[[0,0,0,0,1,0],[0,0,0,0,0,1],[1,0,0,0,0,1],[0,1,1,1,1,1]],"Spaceship 3":[[0,1,1,1,1],[1,0,0,0,1],[0,0,0,0,1],[1,0,0,1,0]]},seedMasksAsArrays:{Random:null,"Random p2h":null,"Random p2v":null,"Random d2a":null,"Random d2b":null,"Random g2":null,"Random p4":null,"Random d4":null,"Random g4":null,"Random r8":null,Glider:[[0,0,1],[1,0,1],[0,1,1]],Oscillator:[[1,1,1]],"Spaceship 1":[[1,0,0,1,0],[0,0,0,0,1],[1,0,0,0,1],[0,1,1,1,1]],"Spaceship 2":[[0,0,0,0,1,0],[0,0,0,0,0,1],[1,0,0,0,0,1],[0,1,1,1,1,1]],"Spaceship 3":[[0,1,1,1,1],[1,0,0,0,1],[0,0,0,0,1],[1,0,0,1,0]]},seedProb:{Random:1,"Random p2h":1,"Random p2v":1,"Random d2a":1,"Random d2b":1,"Random g2":1,"Random p4":1,"Random d4":1,"Random g4":1,"Random r8":1,Glider:10,Oscillator:.001,"Spaceship 1":10,"Spaceship 2":10,"Spaceship 3":10}},styleConfig:{name:"Custom",style:"E2N[0|0:4]||E7C[0|0:11]||B6C[0|0:11]||E2A6[0|0:12]||B5N[0|0:7]||B2C[1|0:8|0:5]||B5A4[1|0:8|0:0]||B5A4[0|0:8|0:13]||E3A4[0|0:2|0:4]",deterministic:!0},paletteConfig:{name:"Custom",recommended:!0,colorPattern:["Textured black","Rainbow color","Rainbow color","Rainbow color","Rainbow color","Rainbow color","Rainbow color"],minNColors:2,sampledName:"Discordant Disco",samplingPalettes:null,nColors:5},timeBetweenRuleChanges:null,timeBetweenStyleChanges:null,timeBetweenPaletteChanges:null},"Criss-Cross I":{name:"Criss-Cross I",ruleConfig:{name:"Custom",rules:{"B23|11:0/S3|13:0.1.2/I/G6/R50":1},deterministic:!0,activityLevelForRuleWindowSize:2,sampledRuleTemplate:"B23|11:0/S3|13:0.1.2/I/G{6}/R50"},randomnessConfig:{randomnessLogShift:-.5,squareVsRectangularMaskProbability:.7,maxSeedSize:10,seedingPatterns:{Random:{prob:1,mask:null},"Random p2h":{prob:1,mask:null},"Random p2v":{prob:1,mask:null},"Random d2a":{prob:1,mask:null},"Random d2b":{prob:1,mask:null},"Random g2":{prob:1,mask:null},"Random p4":{prob:1,mask:null},"Random d4":{prob:1,mask:null},"Random g4":{prob:1,mask:null},"Random r8":{prob:1,mask:null},Butterfly:{prob:.001,mask:[[0,0,1,2],[0,2,0,0],[1,2,1,0]]},"Diamond wave":{prob:.001,mask:[[0,0],[1,1]]},"Oscillator I":{prob:.001,mask:[[0,0,1,0],[1,2,2,0],[0,2,2,1],[0,1,0,0]]},"Oscillator II":{prob:.001,mask:[[0,0,2,0,0,0,0],[0,1,1,0,0,1,0],[0,0,2,1,2,1,2],[0,0,1,0,1,0,0],[2,1,2,1,2,0,0],[0,1,0,0,1,1,0],[0,0,0,0,2,0,0]]},"Short-lived Star":{prob:.001,mask:[[1,0],[0,1]]},Snake:{prob:.001,mask:[[0,1,2,1,2,1,0],[1,2,0,1,0,2,1],[1,2,0,1,0,2,1],[0,1,2,1,2,1,0]]},Spaceship:{prob:.001,mask:[[1,1],[2,0],[0,2]]},"Square wave":{prob:.001,mask:[[1,1],[1,1]]},Star:{prob:.001,mask:[[1,0,1],[0,0,0],[1,0,1]]},"Butterfly gun":{prob:30,mask:[[0,2,1,0,0,0,0,0],[0,0,2,1,0,0,0,0],[2,0,0,2,1,0,0,0],[1,2,0,0,2,1,0,0],[0,1,0,2,1,0,2,1],[0,0,2,1,0,0,2,1]]}},seedMasks:{Random:null,"Random p2h":null,"Random p2v":null,"Random d2a":null,"Random d2b":null,"Random g2":null,"Random p4":null,"Random d4":null,"Random g4":null,"Random r8":null,Butterfly:[[0,0,1,2],[0,2,0,0],[1,2,1,0]],"Diamond wave":[[0,0],[1,1]],"Oscillator I":[[0,0,1,0],[1,2,2,0],[0,2,2,1],[0,1,0,0]],"Oscillator II":[[0,0,2,0,0,0,0],[0,1,1,0,0,1,0],[0,0,2,1,2,1,2],[0,0,1,0,1,0,0],[2,1,2,1,2,0,0],[0,1,0,0,1,1,0],[0,0,0,0,2,0,0]],"Short-lived Star":[[1,0],[0,1]],Snake:[[0,1,2,1,2,1,0],[1,2,0,1,0,2,1],[1,2,0,1,0,2,1],[0,1,2,1,2,1,0]],Spaceship:[[1,1],[2,0],[0,2]],"Square wave":[[1,1],[1,1]],Star:[[1,0,1],[0,0,0],[1,0,1]],"Butterfly gun":[[0,2,1,0,0,0,0,0],[0,0,2,1,0,0,0,0],[2,0,0,2,1,0,0,0],[1,2,0,0,2,1,0,0],[0,1,0,2,1,0,2,1],[0,0,2,1,0,0,2,1]]},seedMasksAsArrays:{Random:null,"Random p2h":null,"Random p2v":null,"Random d2a":null,"Random d2b":null,"Random g2":null,"Random p4":null,"Random d4":null,"Random g4":null,"Random r8":null,Butterfly:[[0,0,1,2],[0,2,0,0],[1,2,1,0]],"Diamond wave":[[0,0],[1,1]],"Oscillator I":[[0,0,1,0],[1,2,2,0],[0,2,2,1],[0,1,0,0]],"Oscillator II":[[0,0,2,0,0,0,0],[0,1,1,0,0,1,0],[0,0,2,1,2,1,2],[0,0,1,0,1,0,0],[2,1,2,1,2,0,0],[0,1,0,0,1,1,0],[0,0,0,0,2,0,0]],"Short-lived Star":[[1,0],[0,1]],Snake:[[0,1,2,1,2,1,0],[1,2,0,1,0,2,1],[1,2,0,1,0,2,1],[0,1,2,1,2,1,0]],Spaceship:[[1,1],[2,0],[0,2]],"Square wave":[[1,1],[1,1]],Star:[[1,0,1],[0,0,0],[1,0,1]],"Butterfly gun":[[0,2,1,0,0,0,0,0],[0,0,2,1,0,0,0,0],[2,0,0,2,1,0,0,0],[1,2,0,0,2,1,0,0],[0,1,0,2,1,0,2,1],[0,0,2,1,0,0,2,1]]},seedProb:{Random:1,"Random p2h":1,"Random p2v":1,"Random d2a":1,"Random d2b":1,"Random g2":1,"Random p4":1,"Random d4":1,"Random g4":1,"Random r8":1,Butterfly:.001,"Diamond wave":.001,"Oscillator I":.001,"Oscillator II":.001,"Short-lived Star":.001,Snake:.001,Spaceship:.001,"Square wave":.001,Star:.001,"Butterfly gun":30}},styleConfig:{name:"Custom",style:"E3C[0|0:3]||E4C[0|2:3|2:5]||E2N[0|0:2|0:5]",deterministic:!0},paletteConfig:{name:"Custom",colorPattern:["Random color","Random color","Random color","Random color","Random color","Random color","Random color"],minNColors:2,sampledName:"Chaotic Carnival",samplingPalettes:null,nColors:2},timeBetweenRuleChanges:null,timeBetweenStyleChanges:null,timeBetweenPaletteChanges:null},"Baffling Bats I":{name:"Baffling Bats I",ruleConfig:{name:"Custom",rules:{"B2|11:0.2.4/S23|13:0/I/G11/R0":1},deterministic:!0,activityLevelForRuleWindowSize:32,sampledRuleTemplate:"B2[456]|11:0.2.4/S23[56]|13:0/I[45678]|0:0/G{10|11|12|13|14|15}"},randomnessConfig:{randomnessLogShift:0,squareVsRectangularMaskProbability:.7,maxSeedSize:20,seedingPatterns:{Random:{prob:1,mask:null},"Random p2h":{prob:1,mask:null},"Random p2v":{prob:1,mask:null},"Random d2a":{prob:1,mask:null},"Random d2b":{prob:1,mask:null},"Random g2":{prob:1,mask:null},"Random p4":{prob:1,mask:null},"Random d4":{prob:1,mask:null},"Random g4":{prob:1,mask:null},"Random r8":{prob:1,mask:null},Butterfly:{prob:.001,mask:[[0,0,1,2],[0,2,0,0],[1,2,1,0]]},"Diamond wave":{prob:.001,mask:[[0,0],[1,1]]},"Oscillator I":{prob:.001,mask:[[0,0,1,0],[1,2,2,0],[0,2,2,1],[0,1,0,0]]},"Oscillator II":{prob:.001,mask:[[0,0,2,0,0,0,0],[0,1,1,0,0,1,0],[0,0,2,1,2,1,2],[0,0,1,0,1,0,0],[2,1,2,1,2,0,0],[0,1,0,0,1,1,0],[0,0,0,0,2,0,0]]},"Short-lived Star":{prob:.001,mask:[[1,0],[0,1]]},Snake:{prob:.001,mask:[[0,1,2,1,2,1,0],[1,2,0,1,0,2,1],[1,2,0,1,0,2,1],[0,1,2,1,2,1,0]]},Spaceship:{prob:4,mask:[[1,1],[2,0],[0,2]]},"Square wave":{prob:4,mask:[[1,1],[1,1]]},Star:{prob:.001,mask:[[1,0,1],[0,0,0],[1,0,1]]},"Butterfly gun":{prob:.001,mask:[[0,2,1,0,0,0,0,0],[0,0,2,1,0,0,0,0],[2,0,0,2,1,0,0,0],[1,2,0,0,2,1,0,0],[0,1,0,2,1,0,2,1],[0,0,2,1,0,0,2,1]]}},seedMasks:{Random:null,"Random p2h":null,"Random p2v":null,"Random d2a":null,"Random d2b":null,"Random g2":null,"Random p4":null,"Random d4":null,"Random g4":null,"Random r8":null,Butterfly:[[0,0,1,2],[0,2,0,0],[1,2,1,0]],"Diamond wave":[[0,0],[1,1]],"Oscillator I":[[0,0,1,0],[1,2,2,0],[0,2,2,1],[0,1,0,0]],"Oscillator II":[[0,0,2,0,0,0,0],[0,1,1,0,0,1,0],[0,0,2,1,2,1,2],[0,0,1,0,1,0,0],[2,1,2,1,2,0,0],[0,1,0,0,1,1,0],[0,0,0,0,2,0,0]],"Short-lived Star":[[1,0],[0,1]],Snake:[[0,1,2,1,2,1,0],[1,2,0,1,0,2,1],[1,2,0,1,0,2,1],[0,1,2,1,2,1,0]],Spaceship:[[1,1],[2,0],[0,2]],"Square wave":[[1,1],[1,1]],Star:[[1,0,1],[0,0,0],[1,0,1]],"Butterfly gun":[[0,2,1,0,0,0,0,0],[0,0,2,1,0,0,0,0],[2,0,0,2,1,0,0,0],[1,2,0,0,2,1,0,0],[0,1,0,2,1,0,2,1],[0,0,2,1,0,0,2,1]]},seedMasksAsArrays:{Random:null,"Random p2h":null,"Random p2v":null,"Random d2a":null,"Random d2b":null,"Random g2":null,"Random p4":null,"Random d4":null,"Random g4":null,"Random r8":null,Butterfly:[[0,0,1,2],[0,2,0,0],[1,2,1,0]],"Diamond wave":[[0,0],[1,1]],"Oscillator I":[[0,0,1,0],[1,2,2,0],[0,2,2,1],[0,1,0,0]],"Oscillator II":[[0,0,2,0,0,0,0],[0,1,1,0,0,1,0],[0,0,2,1,2,1,2],[0,0,1,0,1,0,0],[2,1,2,1,2,0,0],[0,1,0,0,1,1,0],[0,0,0,0,2,0,0]],"Short-lived Star":[[1,0],[0,1]],Snake:[[0,1,2,1,2,1,0],[1,2,0,1,0,2,1],[1,2,0,1,0,2,1],[0,1,2,1,2,1,0]],Spaceship:[[1,1],[2,0],[0,2]],"Square wave":[[1,1],[1,1]],Star:[[1,0,1],[0,0,0],[1,0,1]],"Butterfly gun":[[0,2,1,0,0,0,0,0],[0,0,2,1,0,0,0,0],[2,0,0,2,1,0,0,0],[1,2,0,0,2,1,0,0],[0,1,0,2,1,0,2,1],[0,0,2,1,0,0,2,1]]},seedProb:{Random:1,"Random p2h":1,"Random p2v":1,"Random d2a":1,"Random d2b":1,"Random g2":1,"Random p4":1,"Random d4":1,"Random g4":1,"Random r8":1,Butterfly:.001,"Diamond wave":.001,"Oscillator I":.001,"Oscillator II":.001,"Short-lived Star":.001,Snake:.001,Spaceship:4,"Square wave":4,Star:.001,"Butterfly gun":.001}},styleConfig:{name:"Custom",style:"E6N[0|0:4.5]||B2C[0|6:2]||E8C[0|0:2]||B1C[0|0:6]||B2A7[1|2:1]||E4N[0|2:6]",deterministic:!0},paletteConfig:{name:"Custom",recommended:!0,colorPattern:["Textured black","Textured white","Random color","Random color","Random color","Random color","Random color"],minNColors:3,sampledName:"Cartoon Cacophony",samplingPalettes:null,nColors:5},timeBetweenRuleChanges:null,timeBetweenStyleChanges:null,timeBetweenPaletteChanges:null},"Wavy Lines I":{name:"Wavy Lines I",ruleConfig:{name:"Custom",rules:{"B24567/S13467|13:1/I123/G35/R30":1},deterministic:!0,activityLevelForRuleWindowSize:32,sampledRuleTemplate:"B2[45678]/S13[45678]|{11|13}:1/I1[2345678]/G{25|30|35|40|45|50}/R{10|30|100}"},randomnessConfig:{randomnessLogShift:0,squareVsRectangularMaskProbability:.7,maxSeedSize:20,seedingPatterns:{Random:{prob:1,mask:null},"Random p2h":{prob:1,mask:null},"Random p2v":{prob:1,mask:null},"Random d2a":{prob:1,mask:null},"Random d2b":{prob:1,mask:null},"Random g2":{prob:1,mask:null},"Random p4":{prob:1,mask:null},"Random d4":{prob:1,mask:null},"Random g4":{prob:1,mask:null},"Random r8":{prob:1,mask:null},Butterfly:{prob:.001,mask:[[0,0,1,2],[0,2,0,0],[1,2,1,0]]},"Diamond wave":{prob:.001,mask:[[0,0],[1,1]]},"Oscillator I":{prob:.001,mask:[[0,0,1,0],[1,2,2,0],[0,2,2,1],[0,1,0,0]]},"Oscillator II":{prob:.001,mask:[[0,0,2,0,0,0,0],[0,1,1,0,0,1,0],[0,0,2,1,2,1,2],[0,0,1,0,1,0,0],[2,1,2,1,2,0,0],[0,1,0,0,1,1,0],[0,0,0,0,2,0,0]]},"Short-lived Star":{prob:.001,mask:[[1,0],[0,1]]},Snake:{prob:.001,mask:[[0,1,2,1,2,1,0],[1,2,0,1,0,2,1],[1,2,0,1,0,2,1],[0,1,2,1,2,1,0]]},Spaceship:{prob:4,mask:[[1,1],[2,0],[0,2]]},"Square wave":{prob:4,mask:[[1,1],[1,1]]},Star:{prob:.001,mask:[[1,0,1],[0,0,0],[1,0,1]]},"Butterfly gun":{prob:.001,mask:[[0,2,1,0,0,0,0,0],[0,0,2,1,0,0,0,0],[2,0,0,2,1,0,0,0],[1,2,0,0,2,1,0,0],[0,1,0,2,1,0,2,1],[0,0,2,1,0,0,2,1]]}},seedMasks:{Random:null,"Random p2h":null,"Random p2v":null,"Random d2a":null,"Random d2b":null,"Random g2":null,"Random p4":null,"Random d4":null,"Random g4":null,"Random r8":null,Butterfly:[[0,0,1,2],[0,2,0,0],[1,2,1,0]],"Diamond wave":[[0,0],[1,1]],"Oscillator I":[[0,0,1,0],[1,2,2,0],[0,2,2,1],[0,1,0,0]],"Oscillator II":[[0,0,2,0,0,0,0],[0,1,1,0,0,1,0],[0,0,2,1,2,1,2],[0,0,1,0,1,0,0],[2,1,2,1,2,0,0],[0,1,0,0,1,1,0],[0,0,0,0,2,0,0]],"Short-lived Star":[[1,0],[0,1]],Snake:[[0,1,2,1,2,1,0],[1,2,0,1,0,2,1],[1,2,0,1,0,2,1],[0,1,2,1,2,1,0]],Spaceship:[[1,1],[2,0],[0,2]],"Square wave":[[1,1],[1,1]],Star:[[1,0,1],[0,0,0],[1,0,1]],"Butterfly gun":[[0,2,1,0,0,0,0,0],[0,0,2,1,0,0,0,0],[2,0,0,2,1,0,0,0],[1,2,0,0,2,1,0,0],[0,1,0,2,1,0,2,1],[0,0,2,1,0,0,2,1]]},seedMasksAsArrays:{Random:null,"Random p2h":null,"Random p2v":null,"Random d2a":null,"Random d2b":null,"Random g2":null,"Random p4":null,"Random d4":null,"Random g4":null,"Random r8":null,Butterfly:[[0,0,1,2],[0,2,0,0],[1,2,1,0]],"Diamond wave":[[0,0],[1,1]],"Oscillator I":[[0,0,1,0],[1,2,2,0],[0,2,2,1],[0,1,0,0]],"Oscillator II":[[0,0,2,0,0,0,0],[0,1,1,0,0,1,0],[0,0,2,1,2,1,2],[0,0,1,0,1,0,0],[2,1,2,1,2,0,0],[0,1,0,0,1,1,0],[0,0,0,0,2,0,0]],"Short-lived Star":[[1,0],[0,1]],Snake:[[0,1,2,1,2,1,0],[1,2,0,1,0,2,1],[1,2,0,1,0,2,1],[0,1,2,1,2,1,0]],Spaceship:[[1,1],[2,0],[0,2]],"Square wave":[[1,1],[1,1]],Star:[[1,0,1],[0,0,0],[1,0,1]],"Butterfly gun":[[0,2,1,0,0,0,0,0],[0,0,2,1,0,0,0,0],[2,0,0,2,1,0,0,0],[1,2,0,0,2,1,0,0],[0,1,0,2,1,0,2,1],[0,0,2,1,0,0,2,1]]},seedProb:{Random:1,"Random p2h":1,"Random p2v":1,"Random d2a":1,"Random d2b":1,"Random g2":1,"Random p4":1,"Random d4":1,"Random g4":1,"Random r8":1,Butterfly:.001,"Diamond wave":.001,"Oscillator I":.001,"Oscillator II":.001,"Short-lived Star":.001,Snake:.001,Spaceship:4,"Square wave":4,Star:.001,"Butterfly gun":.001}},styleConfig:{name:"Custom",style:"E1C[0|3:0]||E2N[0|3:1]||E1C[0|7:1]||B2A3[0|8:0.1]",deterministic:!0},paletteConfig:{name:"Custom",colorPattern:["Random color","Random color","Random color","Random color","Random color","Random color","Random color"],minNColors:2,samplingPalettes:null,nColors:3},timeBetweenRuleChanges:null,timeBetweenStyleChanges:null,timeBetweenPaletteChanges:null},"Shark Fins I":{name:"Shark Fins I",ruleConfig:{name:"Custom",rules:{"B2458/S346|10:0/I24568|1:0/G70/R0":1},deterministic:!0,activityLevelForRuleWindowSize:64,sampledRuleTemplate:"B2[345678]/S[12345678]|{0|1|2|3|4|5|6|7|8|9|10|11|12|13|14}:0/I[12345678]|{0|1|2|3|4|5|6|7|8|9|10|11|12|13|14}:0/G{25|30|35|40|45|50|55|60|65|70|75|80|90|100}"},randomnessConfig:{randomnessLogShift:0,squareVsRectangularMaskProbability:.7,maxSeedSize:20,seedingPatterns:{Random:{prob:1,mask:null},"Random p2h":{prob:1,mask:null},"Random p2v":{prob:1,mask:null},"Random d2a":{prob:1,mask:null},"Random d2b":{prob:1,mask:null},"Random g2":{prob:1,mask:null},"Random p4":{prob:1,mask:null},"Random d4":{prob:1,mask:null},"Random g4":{prob:1,mask:null},"Random r8":{prob:1,mask:null},Butterfly:{prob:.001,mask:[[0,0,1,2],[0,2,0,0],[1,2,1,0]]},"Diamond wave":{prob:.001,mask:[[0,0],[1,1]]},"Oscillator I":{prob:.001,mask:[[0,0,1,0],[1,2,2,0],[0,2,2,1],[0,1,0,0]]},"Oscillator II":{prob:.001,mask:[[0,0,2,0,0,0,0],[0,1,1,0,0,1,0],[0,0,2,1,2,1,2],[0,0,1,0,1,0,0],[2,1,2,1,2,0,0],[0,1,0,0,1,1,0],[0,0,0,0,2,0,0]]},"Short-lived Star":{prob:.001,mask:[[1,0],[0,1]]},Snake:{prob:.001,mask:[[0,1,2,1,2,1,0],[1,2,0,1,0,2,1],[1,2,0,1,0,2,1],[0,1,2,1,2,1,0]]},Spaceship:{prob:4,mask:[[1,1],[2,0],[0,2]]},"Square wave":{prob:4,mask:[[1,1],[1,1]]},Star:{prob:.001,mask:[[1,0,1],[0,0,0],[1,0,1]]},"Butterfly gun":{prob:.001,mask:[[0,2,1,0,0,0,0,0],[0,0,2,1,0,0,0,0],[2,0,0,2,1,0,0,0],[1,2,0,0,2,1,0,0],[0,1,0,2,1,0,2,1],[0,0,2,1,0,0,2,1]]}},seedMasks:{Random:null,"Random p2h":null,"Random p2v":null,"Random d2a":null,"Random d2b":null,"Random g2":null,"Random p4":null,"Random d4":null,"Random g4":null,"Random r8":null,Butterfly:[[0,0,1,2],[0,2,0,0],[1,2,1,0]],"Diamond wave":[[0,0],[1,1]],"Oscillator I":[[0,0,1,0],[1,2,2,0],[0,2,2,1],[0,1,0,0]],"Oscillator II":[[0,0,2,0,0,0,0],[0,1,1,0,0,1,0],[0,0,2,1,2,1,2],[0,0,1,0,1,0,0],[2,1,2,1,2,0,0],[0,1,0,0,1,1,0],[0,0,0,0,2,0,0]],"Short-lived Star":[[1,0],[0,1]],Snake:[[0,1,2,1,2,1,0],[1,2,0,1,0,2,1],[1,2,0,1,0,2,1],[0,1,2,1,2,1,0]],Spaceship:[[1,1],[2,0],[0,2]],"Square wave":[[1,1],[1,1]],Star:[[1,0,1],[0,0,0],[1,0,1]],"Butterfly gun":[[0,2,1,0,0,0,0,0],[0,0,2,1,0,0,0,0],[2,0,0,2,1,0,0,0],[1,2,0,0,2,1,0,0],[0,1,0,2,1,0,2,1],[0,0,2,1,0,0,2,1]]},seedMasksAsArrays:{Random:null,"Random p2h":null,"Random p2v":null,"Random d2a":null,"Random d2b":null,"Random g2":null,"Random p4":null,"Random d4":null,"Random g4":null,"Random r8":null,Butterfly:[[0,0,1,2],[0,2,0,0],[1,2,1,0]],"Diamond wave":[[0,0],[1,1]],"Oscillator I":[[0,0,1,0],[1,2,2,0],[0,2,2,1],[0,1,0,0]],"Oscillator II":[[0,0,2,0,0,0,0],[0,1,1,0,0,1,0],[0,0,2,1,2,1,2],[0,0,1,0,1,0,0],[2,1,2,1,2,0,0],[0,1,0,0,1,1,0],[0,0,0,0,2,0,0]],"Short-lived Star":[[1,0],[0,1]],Snake:[[0,1,2,1,2,1,0],[1,2,0,1,0,2,1],[1,2,0,1,0,2,1],[0,1,2,1,2,1,0]],Spaceship:[[1,1],[2,0],[0,2]],"Square wave":[[1,1],[1,1]],Star:[[1,0,1],[0,0,0],[1,0,1]],"Butterfly gun":[[0,2,1,0,0,0,0,0],[0,0,2,1,0,0,0,0],[2,0,0,2,1,0,0,0],[1,2,0,0,2,1,0,0],[0,1,0,2,1,0,2,1],[0,0,2,1,0,0,2,1]]},seedProb:{Random:1,"Random p2h":1,"Random p2v":1,"Random d2a":1,"Random d2b":1,"Random g2":1,"Random p4":1,"Random d4":1,"Random g4":1,"Random r8":1,Butterfly:.001,"Diamond wave":.001,"Oscillator I":.001,"Oscillator II":.001,"Short-lived Star":.001,Snake:.001,Spaceship:4,"Square wave":4,Star:.001,"Butterfly gun":.001}},styleConfig:{name:"Custom",style:"B2N[1|7:0]||B2A3[1|3:1.2]||E2N[1|5:0]",deterministic:!0},paletteConfig:{name:"Custom",recommended:!0,colorPattern:["Textured black","Textured white","Random color","Random color","Random color","Random color","Random color"],minNColors:3,sampledName:"Cartoon Cacophony",samplingPalettes:null,nColors:4},timeBetweenRuleChanges:null,timeBetweenStyleChanges:null,timeBetweenPaletteChanges:null}};function Ve(e,t,i){return{probabilities:{0:e,1:t},weight:i}}const qe={Mixed:[Ve(1,0,3),Ve(.8,.2,3),Ve(.5,.5,2),Ve(0,1,2)],Static:[Ve(1,0,1)],"Almost static":[Ve(.8,.2,1)],"Half-dynamic":[Ve(.5,.5,1)],Dynamic:[Ve(0,1,1)]};const Qe={Test:{name:"Test",showInApp:!1,nConditions:null,conditionLevels:qe.Static,conditionLevelsName:"Static",neighbourhoodGeometryType:null,periodicityLength:1,deterministic:!1},TestFixedStyle:{name:"TestFixStyle",showInApp:!1,style:"E2C[1|14:10]||E8N[1|14:10]",deterministic:!0},"Mixed Safe":{name:"Mixed Safe",showInApp:!0,nConditions:null,conditionLevels:qe.Static,conditionLevelsName:"Static",neighbourhoodGeometryType:null,periodicityLength:1,deterministic:!1},Mixed:{name:"Mixed",showInApp:!0,nConditions:null,conditionLevels:qe.Mixed,conditionLevelsName:"Mixed",neighbourhoodGeometryType:null,periodicityLength:1,deterministic:!1},"Mixed static":{name:"Mixed static",showInApp:!1,nConditions:null,conditionLevels:qe.Static,conditionLevelsName:"Static",neighbourhoodGeometryType:null,periodicityLength:1,deterministic:!1},"Mixed almost static":{name:"Mixed almost static",showInApp:!1,nConditions:null,conditionLevels:qe["Almost static"],conditionLevelsName:"Almost static",neighbourhoodGeometryType:null,periodicityLength:1,deterministic:!1},"Mixed half-dynamic":{name:"Mixed half-dynamic",showInApp:!1,nConditions:null,conditionLevels:qe["Half-dynamic"],conditionLevelsName:"Half-dynamic",neighbourhoodGeometryType:null,periodicityLength:1,deterministic:!1},"Mixed dynamic":{name:"Mixed dynamic",showInApp:!0,nConditions:null,conditionLevels:qe.Dynamic,conditionLevelsName:"Dynamic",neighbourhoodGeometryType:null,periodicityLength:1,deterministic:!1},"Mixed with periodicity":{name:"Mixed with periodicity",showInApp:!0,nConditions:null,conditionLevels:qe.Mixed,conditionLevelsName:"Mixed",neighbourhoodGeometryType:null,periodicityLength:null,deterministic:!1},Custom:{name:"Custom",showInApp:!1,style:null},"No style":{name:"No style"},GROuternetI:{name:"GROuternetI",style:"E1C[0|2:1]||E3N[0|4:0]||E4A[0|0:0]",deterministic:!0,showInApp:!1},GROuternetII:{name:"GROuternetII",showInApp:!1,style:"E5A3[0|3:1|8:2]||E6C[0|0:1]||B3C[0|0:0]||B0C[0|2:2]",deterministic:!0,showInApp:!1},GROuternetIb:{name:"GROuternetIb",showInApp:!1,style:"E2C[0|2:1]||E1C[0|0:2]||B3A3[0|0:1|0:0]||B2A3[0|0:0]",deterministic:!0,showInApp:!1},GROuternetIIb:{name:"GROuternetIIb",showInApp:!1,style:"B0C[0|0:1|0:2]||B1A3[0|0:2|0:0]||E3A3[0|0:1|0:2]||E1N[0|0:0]||E4C[0|0:0]",deterministic:!0,showInApp:!1},GROuternetIc:{name:"GROuternetIc",showInApp:!1,style:"B3A3[0|10:0|2:2]||B3A3[0|11:2]||E4A4[0|11:0|11:2]||E4N[0|11:2|11:1]",deterministic:!0,showInApp:!1},GROuternetIIc:{name:"GROuternetIIc",showInApp:!1,style:"B1A3[0|10:0|2:2]||B5N[0|0:0|2:2]||E3C[0|0:0|0:1]",deterministic:!0,showInApp:!1},Checkerboard:{name:"Checkerboard",showInApp:!0,style:"E3A6[0|11:0|13:1]||E3N[0|13:0]||B2N[0|11:2]||E5N[0|11:2]||E2C[0|13:1|11:0]||E4A6[0|13:2|13:0]",deterministic:!0},Comics:{name:"Comics",showInApp:!0,style:"B3C[0|2:2|2:0]||B3N[0|2:1]||B0A3[0|2:0]||E3C[0|2:0]||B1N[0|2:0|2:2]||E4C[0|2:0]||E1A3[0|2:0|2:1]",deterministic:!0},Labyrinth:{name:"Labyrinth",showInApp:!0,style:"E1C[1|0:1|0:2]||E3A5[1|0:2|0:3]||E5A3[1|0:2]||E7C[1|0:2]",deterministic:!0},"Old Wall":{name:"Old Wall",showInApp:!0,style:"E1A5[1|0:1.2]||E4A5[1|8:1]||B4C[1|0:2.3]||E4C[1|0:2]",deterministic:!0},Pointillism:{name:"Pointillism I",showInApp:!0,style:"B0C[1|0:4|0:2]||B6A5[1|1:2|0:3]||E3A4[1|10:2]||E4A5[1|0:0|1:3]",deterministic:!0},Rich:{name:"Rich I",showInApp:!0,style:"B1N[1|0:3]||E1N[0|0:2]||B6N[1|0:0.1.8]||B4N[1|0:1]||B2A6[0|0:4]||B1A5[1|0:4.7]||B0C[1|0:7]||B7C[0|0:9.11]||B6C[0|0:4]",deterministic:!0},"Stained Glass":{name:"Stained Glass",showInApp:!0,style:"E2C[1|0:0]1||E8N[1|0:0]",deterministic:!0},"Zen Garden":{name:"Zen Garden",showInApp:!0,style:"B4A2[0|0:5.7]||E7C[0|0:1.7]||B3C[0|0:7]||B2N[0|0:1]||B2A9[0|0:5]||B4A5[1|0:0]",deterministic:!0}},ze=(Object.keys(Qe).filter((e=>null!=Qe[e].conditionLevels&&0!=Qe[e].showInApp)),Object.keys(Qe).filter((e=>Qe[e].hasOwnProperty("style")&&Qe[e].showInApp)),{Mixed:{name:"Mixed",recommended:!0,samplingPalettes:{"Cartoon Cacophony":7,"Chaotic Carnival":4,"Primary Pop":1,"Secondary Seizure":1,"Cloudy Canvas":1,"Discordant Disco":2,"Black Blanc":4,"Foggy Fluctuations":1,"Oscillating Overcast":1,"Rainbow Rampage":1,"Saturated Satire":1,"Shadow Shock":2,"Homogenous Hues":3,"Black + Homogenous Hues":3,"Alternating Altercation":1,"Tint Train":1,"Grim Grisaille":1}},"Mixed Safe":{name:"Mixed Safe",recommended:!0,samplingPalettes:{"Cartoon Cacophony":6,"Chaotic Carnival":4,"Primary Pop":1,"Secondary Seizure":1,"Discordant Disco":3,"Rainbow Rampage":1,"Saturated Satire":1,"Shadow Shock":4,"Homogenous Hues":2,"Black + Homogenous Hues":4}},"Cartoon Cacophony":{name:"Cartoon Cacophony",recommended:!0,colorPattern:["Textured black","Textured white","Random color","Random color","Random color","Random color","Random color"],minNColors:3},"Chaotic Carnival":{name:"Chaotic Carnival",recommended:!0,colorPattern:["Random color","Random color","Random color","Random color","Random color","Random color","Random color"],minNColors:2},"Primary Pop":{name:"Primary Pop",colorPattern:["Black","Basic color","Basic color","Basic color","Basic color","Basic color","Basic color"],minNColors:3},"Secondary Seizure":{name:"Secondary Seizure",colorPattern:["Black","Secondary color","Secondary color","Secondary color","Secondary color","Secondary color","Secondary color"],minNColors:3},"Cloudy Canvas":{name:"Cloudy Canvas",colorPattern:["Textured black","Textured white","Random grey","Random grey"],minNColors:4},"Discordant Disco":{name:"Discordant Disco",recommended:!0,colorPattern:["Textured black","Rainbow color","Rainbow color","Rainbow color","Rainbow color","Rainbow color","Rainbow color"],minNColors:2},"Black Blanc":{name:"Black Blanc",recommended:!0,colorPattern:["Textured black","Textured white"],minNColors:2},"Foggy Fluctuations":{name:"Foggy Fluctuations",colorPattern:["Random grey","Random grey","Random grey","Random grey","Random grey","Random grey","Random grey"],minNColors:4},"Shadow Shock":{name:"Shadow Shock",colorPattern:["Random grey","Saturated color","Random grey","Random grey","Saturated color","Random grey","Random grey"],minNColors:4},"Grim Grisaille":{name:"Grim Grisaille",colorPattern:["Grisaille","Hue and saturation constrained color","Hue and saturation constrained color","Hue and saturation constrained color","Hue and saturation constrained color","Hue and saturation constrained color","Hue and saturation constrained color"],colorDependency:"First",minNColors:3},"Oscillating Overcast":{name:"Oscillating Overcast",recommended:!0,colorPattern:["Brightness oscillator","Brightness oscillator","Brightness oscillator","Brightness oscillator","Brightness oscillator","Brightness oscillator","Brightness oscillator"],minNColors:4},"Rainbow Rampage":{name:"Rainbow Rampage",colorPattern:["Rainbow color","Rainbow color","Rainbow color","Rainbow color","Rainbow color","Rainbow color","Rainbow color"],minNColors:4},"Saturated Satire":{name:"Saturated Satire",colorPattern:["Saturated color","Saturated color","Saturated color","Saturated color","Saturated color","Saturated color","Saturated color"],minNColors:4},"Homogenous Hues":{name:"Homogenous Hues",recommended:!0,colorPattern:["Random color","Hue constrained color","Hue constrained color","Hue constrained color","Hue constrained color","Hue constrained color","Hue constrained color"],colorDependency:"First",minNColors:4},"Black + Homogenous Hues":{name:"Black + Homogenous Hues",recommended:!0,colorPattern:["Textured black","Random color","Hue constrained color","Hue constrained color","Hue constrained color","Hue constrained color","Hue constrained color"],colorDependency:"Second",minNColors:4},"Alternating Altercation":{name:"Alternating Altercation",colorPattern:["Repulsive brightness color","Repulsive brightness color","Repulsive brightness color","Repulsive brightness color","Repulsive brightness color","Repulsive brightness color","Repulsive brightness color"],colorDependency:"Previous",minNColors:4},"Tint Train":{name:"Tint Train",colorPattern:["Random color","Hue constrained color","Hue constrained color","Hue constrained color","Hue constrained color","Hue constrained color","Hue constrained color"],colorDependency:"Previous",minNColors:4},"View Generations":{name:"View Generations",hideInApp:!1,colorPattern:["Black","White","Red","Orange","Dark Yellow","Green","Azure","Blue","Violet","Majenta","CGA brown","CGA dark grey","CGA grey","CGA light red","CGA yellow","CGA light green","CGA light cyan","CGA light blue","CGA light magenta","CGA red","Kaki"],minNColors:21},GR:{name:"GR",hideInApp:!0,colorPattern:["Black","GR blue","GR grey","GR yellow"],minNColors:4},GROuternet:{name:"GROuternet",hideInApp:!0,colorPattern:["Black","GR grey","GR blue","GR yellow"],minNColors:4},GROuternet2:{name:"GROuternet2",hideInApp:!0,colorPattern:["GR grey","Black","GR yellow","GR blue"],minNColors:4},"CGA-4-0":{name:"CGA-4-0",colorPattern:["Black","CGA light green","CGA light red","CGA yellow"],minNColors:4},"CGA-4-1":{name:"CGA-4-1",colorPattern:["Black","White","CGA light cyan","CGA light magenta"],minNColors:4},"CGA-16":{name:"CGA-16",colorPattern:["CGA color","CGA color","CGA color","CGA color","CGA color","CGA color","CGA color","CGA color"],minNColors:4},GRMouse:{name:"GRMouse",hideInApp:!0,colorPattern:["transparent","GR blue","Black","GR yellow"],minNColors:4},Test:{name:"Test",hideInApp:!0,colorPattern:["Rainbow color","Rainbow color","Rainbow color","Rainbow color","Rainbow color","Rainbow color","Rainbow color"],minNColors:2}}),Ue=(Object.keys(ze).filter((e=>null!=ze[e].samplingPalettes)),Object.keys(ze).filter((e=>!0===ze[e].recommended)),Object.keys(ze).filter((e=>!ze[e].hideInApp)),2e4),je=2e3,Xe=5e3,Je=1e4,Ye={Profile:{name:"Profile",hideInApp:!0,ruleConfig:N.Test,styleConfig:Qe["No style"],paletteConfig:ze["View Generations"],randomnessConfig:k.Default,timeBetweenRuleChanges:Ue,timeBetweenStyleChanges:je,timeBetweenPaletteChanges:Je},Mixed:{name:"Mixed",ruleConfig:N.Mixed,styleConfig:Qe.Mixed,paletteConfig:ze.Mixed,randomnessConfig:k.Default,timeBetweenRuleChanges:Ue,timeBetweenStyleChanges:je,timeBetweenPaletteChanges:Je},MixedDyn:{name:"MixedDyn",hideInApp:!0,ruleConfig:N.Mixed,styleConfig:Qe["Mixed dynamic"],paletteConfig:ze.Mixed,randomnessConfig:k.Default,timeBetweenRuleChanges:Ue,timeBetweenStyleChanges:je,timeBetweenPaletteChanges:Je},"Mixed Safe":{name:"Mixed Safe",ruleConfig:N["Mixed Safe"],styleConfig:Qe["Mixed Safe"],paletteConfig:ze["Mixed Safe"],randomnessConfig:k.Default,timeBetweenRuleChanges:Ue,timeBetweenStyleChanges:je,timeBetweenPaletteChanges:Je},Safe:{name:"Safe",ruleConfig:N["Brian's Brain (modified)"],styleConfig:Qe["Mixed Safe"],paletteConfig:ze.Mixed,randomnessConfig:k.Default,timeBetweenRuleChanges:Ue,timeBetweenStyleChanges:je,timeBetweenPaletteChanges:Je},"View Generations":{name:"View Generations",ruleConfig:N.Mixed,styleConfig:Qe["No style"],paletteConfig:ze["View Generations"],randomnessConfig:k.Default,timeBetweenRuleChanges:0,timeBetweenStyleChanges:0,timeBetweenPaletteChanges:0},"Art deco":{name:"Art deco",ruleConfig:N["Spiky Spillers"],styleConfig:Qe["Mixed Safe"],paletteConfig:ze["Oscillating Overcast"],randomnessConfig:k.Default,timeBetweenRuleChanges:Ue,timeBetweenStyleChanges:je},"Classy Classics":{name:"Classy Classics",ruleConfig:N["Classy Classics"],styleConfig:Qe["No style"],paletteConfig:ze["Primary Pop"],randomnessConfig:k.Default,timeBetweenRuleChanges:Xe,timeBetweenStyleChanges:je},"Retro Remix":{name:"Retro Remix",ruleConfig:N.Mixed,styleConfig:Qe["No style"],paletteConfig:ze["Primary Pop"],randomnessConfig:k.Default,timeBetweenRuleChanges:Xe,timeBetweenStyleChanges:je},"CW Logo":{name:"CW Logo",hideInApp:!0,doubleRule:!0,ruleConfig:N.Mixed,styleConfig:Qe["Mixed Safe"],styleConfig2:Qe["Mixed Safe"],paletteConfig:ze.Mixed,randomnessConfig:k.Default},GR:{name:"GR",hideInApp:!0,doubleRule:!0,ruleConfig:N["BB (modified)"],styleConfig:Qe["Mixed Safe"],styleConfig2:Qe["Mixed Safe"],paletteConfig:ze.GR,randomnessConfig:k.Default,timeBetweenRuleChanges:Ue,timeBetweenStyleChanges:je},GROuternet:{name:"GROuternet",hideInApp:!0,doubleRule:!0,ruleConfig:N["BB (outernet)"],styleConfig:Qe.GROuternetI,styleConfig2:Qe.GROuternetII,paletteConfig:ze.GROuternet},GROuternetNoLogo:{name:"GROuternetNoLogo",hideInApp:!0,doubleRule:!0,ruleConfig:N["BB (outernet)"],styleConfig:Qe.GROuternetII,styleConfig2:Qe.GROuternetII,paletteConfig:ze.GROuternet},GROuternetb:{name:"GROuternetb",hideInApp:!0,doubleRule:!0,ruleConfig:N["BB (outernetb)"],styleConfig:Qe.GROuternetIb,styleConfig2:Qe.GROuternetIIb,paletteConfig:ze.GROuternet2},GROuternetc:{name:"GROuternetc",hideInApp:!0,doubleRule:!0,ruleConfig:N["BB (outernetc)"],styleConfig:Qe.GROuternetIc,styleConfig2:Qe.GROuternetIIc,paletteConfig:ze.GROuternet2},GRMouse:{name:"GRMouse",hideInApp:!0,ruleConfig:N["BB (modified)"],styleConfig:Qe["Mixed Safe"],styleConfig2:Qe["Mixed Safe"],paletteConfig:ze.GRMouse,randomnessConfig:k.Default,timeBetweenRuleChanges:Ue,timeBetweenStyleChanges:je},"Test rule no style":{name:"Test rule no style",hideInApp:!0,ruleConfig:N.Test,styleConfig:Qe["No style"],paletteConfig:ze["Cartoon Cacophony"],randomnessConfig:k.Default},"Test rule":{name:"Retro Remix",ruleConfig:N.Test,styleConfig:Qe["Mixed Safe"],paletteConfig:ze.Mixed,randomnessConfig:k.Default,timeBetweenRuleChanges:Xe,timeBetweenStyleChanges:je},Custom:{name:"Custom",hideInApp:!0,ruleConfig:N.Custom,styleConfig:Qe.Custom,paletteConfig:ze["Cartoon cacophony"],randomnessConfig:k.Default}},$e=(Object.keys(Ye).filter((e=>!Ye[e].hasOwnProperty("hideInApp")||!Ye[e].hideInApp)),Object.keys(He).filter((e=>!He[e].hasOwnProperty("hideInApp")||!He[e].hideInApp)),{Vaccuum:{name:"Vaccuum",hideInApp:!1,background:"Vaccuum",seed:null},Random:{name:"Random",hideInApp:!1,background:"Random",seed:null},"Random g4":{name:"Random g4",hideInApp:!0,background:"Random g4",enforceSquareCanvas:!0},"CW Logo":{name:"CW Logo",background:"Vaccuum",seed:null,logo:"BackgroundWelcomeScreen2.png",backgroundOnLogo:"First style state"},GR1:{name:"Vaccuum",hideInApp:!0,background:"Vaccuum",seed:null,logo:"grLogoOuternet6.png",backgroundOnLogo:"Random"},"Square 2x2":{name:"Square 2x2",hideInApp:!1,background:"Vaccuum",seed:[[1,1],[1,1]]}}),Ke=(Object.keys($e).filter((e=>"hideInApp"in $e[e]&&1!=$e[e].hideInApp)),{Default:{name:"Default",gracePeriod:100,maxColorChange:330,maxFlickerIndex:10,maxPropOfCellsChanged:.5,minNumberOfCellsChanged:3,maxPropOfPlainColor:.99,activityLevelWindowSize:50,flickerIndexWindowSize:100},"No flicker":{name:"No flicker",gracePeriod:30,maxColorChange:200,maxFlickerIndex:4,maxPropOfCellsChanged:.5,minNumberOfCellsChanged:3,maxPropOfPlainColor:.97,activityLevelWindowSize:30,flickerIndexWindowSize:30},Strict:{name:"Strict",gracePeriod:30,maxColorChange:150,maxFlickerIndex:5,maxPropOfCellsChanged:.4,minNumberOfCellsChanged:15,maxPropOfPlainColor:.95,activityLevelWindowSize:30,flickerIndexWindowSize:30}}),_e={"Ancient Greece I":{name:"Ancient Greece I",condition:"E1C[0|2:1]",deterministic:!0},"Bars I":{name:"Bars I",condition:"B1N[0|4:0]",deterministic:!0},"Blobs I":{name:"Blobs I",condition:"E3C[1|0:9]",deterministic:!0},"Diagonal I":{name:"Diagonal I",condition:"E4A2[0|4:2|3:0]",deterministic:!0},"Diamonds I":{name:"Diamonds I",condition:"E4C[1|0:4|0:8]",deterministic:!0},"Diamonds II":{name:"Diamonds II",condition:"E4C[1|0:5|0:7]",deterministic:!0},"Dots I":{name:"Dots I",condition:"B1C[0|9:0]",deterministic:!0},"Glyph I":{name:"Glyph I",condition:"B1N[0|4:2|3:0]",deterministic:!0},"Glyph II":{name:"Glyph II",condition:"E3C[0|7:2|3:1]",deterministic:!0},"Glyph III":{name:"Glyph III",condition:"E2C[0|7:2|4:0]",deterministic:!0},"Lines I":{name:"Lines I",condition:"B0A2[0|0:0|0:2]",deterministic:!0},"Morse I":{name:"Morse I",condition:"E4A3[1|0:4|0:7]",deterministic:!0},"Morse II":{name:"Morse II",condition:"B0A3[0|7:1|4:0]",deterministic:!0},"Morse III":{name:"Morse I",condition:"B0A3[0|4:0]",deterministic:!0},"Silouhette I":{name:"Silouhette I",condition:"E1C[0|0:0|0:1]",deterministic:!0},"Sparse blinkers I":{name:"Sparse blinkers I",condition:"B4N[1|0:6|0:2]"},"Stained glass I":{name:"Stained glass I",condition:"E8N[1|0:0]",deterministic:!0},"Stripes I":{name:"Stripes I",condition:"E1A4[0|3:0]",deterministic:!0}};Object.keys(_e).reduce(((e,t)=>(e[_e[t].condition]=t,e)),{}),Object.keys(_e).filter((e=>!0===_e[e].recommended)),Object.keys(_e).filter((e=>!_e[e].hideInApp));console.log("Loading main.js");var Ze={gridHeight:192,gridWidth:192,targetCycleTime:0,addRandomness:!0,randomnessAmount:-1.5,randomisePeriodicityShiftAndTopology:!0,gridPeriodicityShiftX:null,gridPeriodicityShiftY:null,gridFlipX:!1,gridFlipY:!1,metaRule:"Variable",initialisation:"random",ruleSwitchPeriod:2e4,ruleEvolvePeriod:2e3,config:Ye.Mixed,initialisationConfig:$e.Vaccuum,sanityConfig:Ke.Default},et=new class{constructor({gridHeight:e=200,gridWidth:t=200,widthMult:i=1,heightMult:r=1,targetCycleTime:a=100,addRandomness:o=!0,randomnessAmount:s=-2,randomisePeriodicityShiftAndTopology:l=!0,randomSeedingInMaskOnly:d=!1,gridPeriodicityShiftX:g=null,gridPeriodicityShiftY:h=null,gridFlipX:u=!1,gridFlipY:m=!1,metaRule:c="VariableGR",initialisation:p="random",useLogo:S=!1,config:f=null,initialisationConfig:I=null,sanityConfig:C=null}={}){this.config=f,this.initialisationConfig=I,this.sanityConfig=C,this.paused=!1,this.step=!1,this.targetCycleTime=a,this.gridHeight=e,this.gridWidth=t,this.widthMult=i,this.heightMult=r,this.imageHeight=this.heightMult*this.gridHeight,this.imageWidth=this.widthMult*this.gridWidth,this.grid=new n(this.gridWidth,this.gridHeight),this.gridPeriodicityShiftX=g,null==this.gridPeriodicityShiftX&&(this.gridPeriodicityShiftX=Math.floor(1e3*Math.random())%this.gridWidth),this.gridPeriodicityShiftY=h,null==this.gridPeriodicityShiftY&&(this.gridPeriodicityShiftY=Math.floor(1e3*Math.random())%this.gridHeight),this.gridFlipX=u,this.gridFlipY=m,this.mask=null,this.findNeighbour=null,this.tempGridHeight=null,this.tempGridWidth=null,this.imageData=new Uint8ClampedArray(4*this.imageWidth*this.imageHeight).fill(0),this.redraw=new n(this.gridWidth,this.gridHeight),this.initialisation=p,this.useLogo=S,this.colors=[],this.nColors=4,this.addRandomness=o,this.randomnessAmount=s,this.randomisePeriodicityShiftAndTopology=l,this.randomSeedingInMaskOnly=d,this.reinitialiseGridFlag=!1,this.reinitialiseInTheTopHalf=!1,this.changeGridSizeFlag=!1,this.seedSampler=null,this.metaRule=c,this.ruleClass=null,this.updateCellValue=null,this.updateCellValueAuxiliary=null,this.currentRuleAndStyle=null,this.sampledRuleTemplate=null,this.time=0,this.ruleLogSwitchProbability=-25,this.styleLogEvolveProbability=-25,this.paletteLogSwitchProbability=-25,this.changeMetaRuleFlag=!0,this.changeRuleFlag=!1,this.changeBaseRuleFlag=!1,this.changeStyleFlag=!1,this.evolveStyleFlag=!1,this.reloadColorPaletteFlag=!1,this.logMultiplicativeFactor=0,this.logMultiplicativeEvolveFactor=0,this.logMultiplicativePaletteFactor=0,this.pauseEvolution=!1,this.activityLevel=0,this.activityLevelForRule=0,this.activeCells=0,this.nCellChangedHistoric=0,this.meanColorChangeHistoric=0,this.brightness=127,this.maxBrightness=130,this.minBrightness=124,this.diffBrightness=0,this.relCellChanged=0,this.flickerIndex=0,this.colorCount=[0,0,0,0],this.frameExecutionTime=0,this.logEvents=[],this.enableSanityChecks=!0,this.gif=null,this.gifMode="Download",this.startRecordingGifFlag=!1,this.stopRecordingGifFlag=!1,this.recordingGif=!1,this.nRecordedFrames=0,this.saveEventData=!1,this.updateGlobalDataFromConfig()}deepCopyInstance(e){const t=Object.create(Object.getPrototypeOf(e));for(let i in e)e.hasOwnProperty(i)&&("object"==typeof e[i]&&null!==e[i]?t[i]=JSON.parse(JSON.stringify(e[i])):t[i]=e[i]);return Object.getOwnPropertyNames(Object.getPrototypeOf(e)).forEach((i=>{"constructor"!==i&&(t[i]=e[i])})),t}resampleRuleClass(){this.ruleClass=new x(this)}updateGlobalDataFromConfig(){"timeBetweenStyleChanges"in this.config?this.logMultiplicativeEvolveFactor=25/this.config.timeBetweenStyleChanges:this.logMultiplicativeEvolveFactor=0,"timeBetweenRuleChanges"in this.config?this.logMultiplicativeFactor=25/this.config.timeBetweenRuleChanges:this.logMultiplicativeFactor=0,"timeBetweenPaletteChanges"in this.config&&(this.logMultiplicativePaletteFactor=25/this.config.timeBetweenPaletteChanges)}determineColorPalette(){Q(this)}reloadColor(e){!function(e,t){let i=e.config.paletteConfig.colorPattern[t],n=e.colors.map((e=>e.name)),r=V(e,i,n);r.keepWithinRange(),e.colors[t]=r;let a="color "+t.toString();0==t&&(a="background color");let o=[a.charAt(0).toUpperCase()+a.slice(1)];for(let i=t+1;i<e.colors.length;i++)o.includes(e.colors[i].referenceColorName)&&(e.colors[i]=q(e,e.config.paletteConfig.colorPattern[i],n,i),o.push("Color "+i.toString()));u(e,"Col | Set the "+a+" to "+e.config.paletteConfig.colorPattern[t]+".")}(this,e)}adjustColorNumber(e){!function(e,t){let i=e.colors.map((e=>e.name));if(t>e.nColors)for(var n=e.nColors;n<t;n++){let t=e.config.paletteConfig.colorPattern[n];e.colors.push(q(e,t,i,n)),i.push(e.colors[n].name)}else t<e.nColors&&(e.colors=e.colors.slice(0,t));e.nColors=t,e.colorCount=new Array(e.nColors).fill(0)}(this,e)}}(Ze);!function(e){e.canvasCornerX=0,e.canvasCornerY=0,e.canvas=document.getElementById("gameCanvas"),e.canvas.width=e.imageWidth,e.canvas.height=e.imageHeight,e.ctx=e.canvas.getContext("2d",{willReadFrequently:!0})}(et),window.onload=function(){!function(e){document.getElementById("addRandomness").addEventListener("change",(function(){e.addRandomness=this.checked}))}(et),function(e){document.getElementById("fullscreenButton").addEventListener("click",(function(){e.canvas.requestFullscreen?e.canvas.requestFullscreen():e.canvas.mozRequestFullScreen?e.canvas.mozRequestFullScreen():e.canvas.webkitRequestFullscreen?e.canvas.webkitRequestFullscreen():e.canvas.msRequestFullscreen&&e.canvas.msRequestFullscreen()}))}(et),function(e){e.canvas.addEventListener("mousemove",(function(t){if(t.shiftKey){var i=e.canvas.getBoundingClientRect(),n=t.clientX-i.left,r=t.clientY-i.top,a=i.width/e.gridWidth,o=i.height/e.gridHeight,s=Math.floor(n/a),l=Math.floor(r/o);e.grid.set(l,s,1)}}))}(et),function(e){e.canvas.addEventListener("mousedown",(function(t){var i=e.canvas.getBoundingClientRect(),n=t.clientX-i.left,r=t.clientY-i.top,a=i.width/e.gridWidth,o=i.height/e.gridHeight,s=Math.floor(n/a),l=Math.floor(r/o);t.shiftKey||t.ctrlKey?t.shiftKey&&!t.ctrlKey?(e.grid.set(l,(s+1)%e.gridWidth,1),e.grid.set(l,s,1),e.grid.set((l+1)%e.gridHeight,s,1)):!t.shiftKey&&t.ctrlKey?(e.grid.set(l,s,1),e.grid.set((l+1)%e.gridHeight,s,1)):t.shiftKey&&t.ctrlKey&&(e.grid.set(l,s,1),e.grid.set(l,(s+1)%e.gridWidth,1)):(e.grid.set((l+1)%e.gridHeight,(s+1)%e.gridWidth,1),e.grid.set((l-1+e.gridHeight)%e.gridHeight,(s+1)%e.gridWidth,1),e.grid.set((l-1+e.gridHeight)%e.gridHeight,(s-1+e.gridWidth)%e.gridWidth,1),e.grid.set((l+1)%e.gridHeight,(s-1+e.gridWidth)%e.gridWidth,1))}))}(et),Oe(et),Ee(et),function(e){document.getElementById("gridPeriodicityShiftX").addEventListener("input",(function(){let t=parseInt(this.value);isNaN(t)&&(t=0),e.gridPeriodicityShiftX=t,_(e)})),document.getElementById("gridPeriodicityShiftY").addEventListener("input",(function(){let t=parseInt(this.value);isNaN(t)&&(t=0),e.gridPeriodicityShiftY=t,_(e)})),document.getElementById("gridFlipX").addEventListener("change",(function(){e.gridFlipX=this.checked,_(e)})),document.getElementById("gridFlipY").addEventListener("change",(function(){e.gridFlipY=this.checked,_(e)}))}(et),function(e){document.getElementById("targetCycleTime").addEventListener("input",(function(){let t=parseInt(this.value);isNaN(t)&&(t=0),e.targetCycleTime=t}))}(et),function(e){document.getElementById("colorPalette").addEventListener("change",(function(){e.colorPalette=this.value,Q(e)}))}(et),function(e){document.getElementById("metaRule").addEventListener("change",(async function(){e.metaRule=this.value,e.changeMetaRuleFlag=!0,e.currentRuleAndStyle=e.ruleClass.getName()}))}(et),function(e){document.getElementById("changeRule").addEventListener("click",(function(){e.changeRuleFlag=!0})),document.getElementById("changeBaseRule").addEventListener("click",(function(){e.changeBaseRuleFlag=!0})),document.getElementById("changeColoringRule").addEventListener("click",(function(){e.changeStyleFlag=!0})),document.getElementById("evolveColoringRule").addEventListener("click",(function(){e.evolveStyleFlag=!0})),null!==document.getElementById("reinitialiseGrid")&&document.getElementById("reinitialiseGrid").addEventListener("click",(function(){e.reinitialiseGridFlag=!0})),null!==document.getElementById("recordGif")&&document.getElementById("recordGif").addEventListener("click",(function(){e.recordingGif?(e.recordingGif=!1,e.stopRecordingGifFlag=!0,this.textContent="Record gif"):(e.recordingGif=!0,e.startRecordingGifFlag=!0,this.textContent="Stop recording")}))}(et),function(e){document.getElementById("changeColor").addEventListener("click",(function(){e.reloadColorPaletteFlag=!0}))}(et),function(e){document.getElementById("saveEventCheckbox").addEventListener("change",(function(){e.saveEventData=this.checked})),document.getElementById("likeButton").addEventListener("click",(function(){De(e)})),document.getElementById("dislikeButton").addEventListener("click",(function(){De(e)}))}(et),function(e){const t=document.getElementById("playPauseButton");t.addEventListener("click",(()=>{e.paused=!e.paused,t.textContent=e.paused?"Pause":"Play",console.log("Paused",e.paused)})),document.getElementById("stepButton").addEventListener("click",(()=>{e.paused=!0,e.step=!0}))}(et),function(e){Object.keys(e).forEach((t=>{let i=localStorage.getItem(t);null!==i&&("boolean"==typeof e[t]?e[t]="true"===i:"number"==typeof e[t]?e[t]=parseFloat(i):e[t]=i)}))}(et),function(e){Object.keys(e).forEach((t=>{let i=document.getElementById(t);i&&("checkbox"===i.type?i.checked=e[t]:i.value=e[t])}))}(et),function(e){e.canvas.width=Math.max(e.imageHeight,e.imageWidth),e.canvas.height=Math.max(e.imageHeight,e.imageWidth),e.canvasCornerX=0,e.canvasCornerY=0;var t=document.getElementById("gameCanvas");if(e.imageHeight>e.imageWidth){var i=Math.floor(e.imageWidth/e.imageHeight*800);t.style.width=i+"px",t.style.height="800px",t.width=i*e.imageHeight/800,t.height=e.imageHeight}else{var n=Math.floor(e.imageHeight/e.imageWidth*800);t.style.width="800px",t.style.height=n+"px",t.width=e.imageWidth,t.height=n*e.imageWidth/800}e.imageData=new Uint8ClampedArray(4*e.imageWidth*e.imageHeight)}(et),_(et),function(e){e.stagingConfigs={...Ye,...He},e.ruleConfigs=N,e.styleConfigs=Qe,e.conditionConfigs=_e,e.paletteConfigs=ze,e.colorConfigs=T,e.sanityConfigs=Ke,e.randomnessConfigs=k,e.initialisationConfigs=$e,e.seedingConfigs=W}(et),function(e){j(e,!0)}(et);let e=atob("c2FtMzE0MTUuZ2l0aHViLmlv");window.location.hostname!==e&&""!==window.location.hostname||he(et).then((()=>{Te(et,Le)})).catch((e=>{console.error("Error initialising the grid: ",e)}))}})();